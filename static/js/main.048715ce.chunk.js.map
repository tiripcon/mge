{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","utils/AxiosInstanceBlob.jsx","service/InformService.jsx","service/CertificateService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","pages/AlertWait.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","App.js","service/CuentaService.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","service/CatalogoService.jsx","pages/Signup.jsx","pages/Login.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","id","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perfil","push","gutter","removeItem","AppFooter","display","AppRightPanel","onRightPanelClick","headers","AxiosInstance","navigate","axiosInstance","axios","create","interceptors","request","use","config","token","undefined","toast","error","Promise","reject","response","status","apiURL","getRecuperarPasswordUrl","getCatalogosPorPadreUrl","downloadInformByName","downloadWorkplan","downloadFinalReport","downloadCertificateByName","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","new","put","set","patch","upLoadPhoto","datos","getLessPostulants","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setError","documento","setDocumento","email","setEmail","setNombres","estado","setEstado","columnas","title","dataIndex","render","_","width","responsive","codigotel","celular","record","usuId","fetchData","a","estadoId","data","listObject","messageText","subTitle","extra","span","justify","Title","level","layout","xs","sm","md","lg","xl","Item","onChange","Group","states","s","catId","catNombre","direction","loading","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","fileList","setFileList","onRemove","file","newFileList","slice","splice","beforeUpload","URL","createObjectURL","handleUpload","FormData","append","success","update","values","trabaja","countryCode","catValor","sexoId","sexo","paisId","pais","usuarioActualizado","newUsuario","fechanac","moment","$d","align","initialValues","onFinish","xxl","name","imagen","multiple","rules","required","message","fieldNames","showSearch","options","generos","optionFilterProp","placement","paises","p","catDescripcion","srcSet","checked","c","htmlType","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","requests","forEach","all","then","results","catch","msgError","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","onClose","open","form","opcIcono","PerfilService","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","perNombre","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","defaultChecked","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","guardar","perfilActualizado","eliminar","tableProps","usuarioPerfilList","uspPerId","statistics","hoverable","background","color","precision","prefix","suffix","description","Dashboard","users","setUsers","valueStyle","renderStatistics","tip","Paragraph","TrainingService","getByTraining","trainer","getById","training","pub","trainingService","UserInfo","trainings","setTrainings","setErrorTrainings","fetchTrainings","idUsuario","centered","letterSpacing","strong","readOnly","t","entEstado","entFechaFin","entFechaIni","entId","entNombre","entModalidad","entPais","numPostulantes","marginBottom","reverse","renderTraining","showIcon","borderRadius","border","UsuarioNew","password","setPassword","passwordConfirm","setPasswordConfirm","validForm","setValidForm","insert","md5","fetchProfiles","Password","minLength","valueAgain","messages","specialChar","number","capital","match","isValid","User","user","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","courses","setCourses","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CourseService","course","baseTraining","postulantService","courseService","Course","formPostulante","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","startDate","setStartDate","endDate","setEndDate","removePostulant","newPostulantsList","save","idEstado","trainingStatus","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","mode","cursos","option","resetFields","posEmail","closeIcon","Applicants","setCourse","postulanteList","asistenciaList","asiValor","informeList","cursoList","curNombre","substr","idCurso","curId","infTipo","infEstado","certificadoList","tc","cerEstado","posId","AttendanceService","attendance","AxiosInstanceBlob","axiosInstanceBlob","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","CertificateService","generate","send","certificate","download","attendanceService","informService","certificateService","panelStyle","backgroundColor","Applicant","idTraining","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","isDownloading","setIsDownloading","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","paddingBottom","downloadInform","column","eviUrl","TextArea","setInform","reportStatus","danger","renderInform","downloadCertificate","cerNombre","cerRuta","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","stringify","xhr","blob","Blob","saveAs","setAttendance","sendCertificate","cerId","idPostulante","sendRateEmail","informe","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","w","cerFechaCad","cerFechaReg","renderCertificate","Upload","Dragger","WorkPlan","setPostulant","uploading","setUploading","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","reportType","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","informInserted","newInform","sendFinalReport","idInforme","downloadFinalReportTemplate","f","Certificate","Classes","AlertWait","Training","loadCourse","setLoadCourse","loadPostulant","setLoadPostulant","isLoadingCourse","setIsLoadingCourse","setIsLoadingPostulant","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","newCourse","idEntrenamiento","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","modTraining","envios","reduce","promise","fn","resolve","itemLayout","grid","renderItem","idNombreCurso","posEstado","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","location","useLocation","getOpcionesMenu","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","register","registerPersona","recoverPassword","resetPassword","changePassword","recoveryPassword","updatePassword","cuentaService","RecuperarPassword","okMsg","setOkMsg","emailSent","setEmailSent","recuperar","statusText","textTransform","banner","ResetPassword","search","decodeURIComponent","uuid","passwordChanged","setPasswordChanged","reset","CatalogoService","getTiposIdentificacion","getCatalogo","catalogo","getTiposPersona","getActividadesEconomicas","getBancos","getPorPadre","getTiposCuenta","getFuentesIngreso","getPaises","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","catalogoService","renderError","messageCode","Signup","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","postulantInfo","invitadopor","fetchCatalogos","mgeCatalogos","setItem","registrar","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","actions","renderPerfil","backgroundImage","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.048715ce.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n            // style={{\n            //   backgroundColor: \"#70B450\",\n            //   color: \"#ffffff\",\n            // }}\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  // const history = useHistory();\n\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  // const logo = {\n  //   fontSize: \"1.5em\",\n  //   padding: 0,\n  //   margin: 0,\n  // };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\n      </div>\n      {/* <div className=\"sidebar-logo\">\n        <button className=\"p-link\" onClick={() => history.push(\"/\")}>\n          <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n            MG\n          </span>\n          <span className=\"mge mge-bold mge-green\" style={logo}>\n            E\n          </span>\n        </button>\n        <button\n          className=\"sidebar-pin p-link\"\n          onClick={(event) => props.onToggleMenu(event)}\n        >\n          <span className=\"pin\"></span>\n        </button>\n      </div> */}\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nconst toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nexport const getResponsable = () => getDatosUsuario().idPymeInv\r\nconst getSolicitudes = () => localStorage.getItem('mgeSolicitudes') ? JSON.parse(localStorage.getItem('mgeSolicitudes')) : []\r\nexport const getSolicitudUsuarioOferta = (idOfertaInv) => {\r\n    const mgeSolicitudes = getSolicitudes()\r\n    const idUsuario = parseInt(getDatosUsuario().idUsuario)\r\n    const usuario = mgeSolicitudes.filter(u => u.idUsuario === idUsuario)\r\n    const solicitudUsuarioOferta = usuario.length === 1 ? usuario[0].solicitudes.filter(s => s.idOfertaInv === parseInt(idOfertaInv)) : []\r\n    return solicitudUsuarioOferta\r\n}\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const opciones = getDatosUsuario().opciones || []\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getEstiloFerificada = () => ({\r\n    style: {\r\n        fontWeight: '600'\r\n    }\r\n})\r\nexport const getURLImagenRandom = (i) => `https://joesch.moe/api/v1/random?v=${i}`\r\nexport const getURLImagenPYMERandom = (i) => `https://picsum.photos/600/400?v=${i}`\r\nexport const getCalificaciones = () => ['Malo', 'Normal', 'Bueno', 'Muy Bueno', 'Excelente']\r\n\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport AppMenu from \"./AppMenu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Space, Typography } from \"antd\";\nimport { getDatosUsuario } from \"./utils/Utils\";\n\nconst AppTopbar = (props) => {\n  const history = useHistory();\n  const searchPanelDesktop = useRef(null);\n  const searchPanelMobile = useRef(null);\n\n  useEffect(() => {\n    if (props.searchActive) {\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\n      else searchPanelMobile.current.focus();\n    }\n  }, [props.searchActive]);\n\n  const datosUsuario = (e) => {\n    history.push(\"/myaccount\");\n  };\n\n  const cerrarSesion = (e) => {\n    localStorage.removeItem(\"mgeToken\");\n    localStorage.removeItem(\"mgeDatosUsuario\");\n    history.push(\"/login\");\n  };\n\n  const logo = {\n    fontSize: \"1.5em\",\n    padding: 0,\n    margin: 0,\n  };\n\n  return (\n    <div className=\"layout-topbar\">\n      <div className=\"layout-topbar-wrapper\">\n        <div className=\"layout-topbar-left\">\n          <button\n            tabIndex=\"0\"\n            className=\"menu-button p-link\"\n            onClick={props.onMenuButtonClick}\n          >\n            <i className=\"pi pi-bars\"></i>\n          </button>\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n              MG\n            </span>\n            <span className=\"mge mge-bold mge-green\" style={logo}>\n              E\n            </span>\n          </div>\n        </div>\n\n        <AppMenu\n          menuMode={props.menuMode}\n          sidebarActive={props.sidebarActive}\n          sidebarStatic={props.sidebarStatic}\n          model={props.menu}\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          onMobileMenuActive={props.onMobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          onSidebarMouseOver={props.onSidebarMouseOver}\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\n          onToggleMenu={props.onToggleMenu}\n          resetActiveIndex={props.resetActiveIndex}\n          onMenuClick={props.onMenuClick}\n        />\n\n        <div className=\"layout-topbar-right\">\n          <ul className=\"layout-topbar-actions\">\n            <li\n              className={classNames(\"topbar-item user-profile\", {\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\n              })}\n            >\n              <button\n                className=\"p-link\"\n                style={{ cursor: \"pointer\" }}\n                onClick={props.onTopbarUserMenuClick}\n              >\n                {getDatosUsuario() && (\n                  <Row>\n                    <Col\n                      style={{\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        textAlign: \"right\",\n                        lineHeight: \"1em\",\n                      }}\n                    >\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\n                        {`${getDatosUsuario().nombres || \"\"} ${\n                          getDatosUsuario().apellidos || \"\"\n                        }`}\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\n                          <>\n                            <br />\n                            <Typography.Text\n                              type=\"secondary\"\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\n                            >\n                              {`${getDatosUsuario().perfiles[0].perfil}`}\n                            </Typography.Text>\n                          </>\n                        )}\n                      </Typography.Text>\n                    </Col>\n                    <Col>\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\n                    </Col>\n                  </Row>\n                )}\n              </button>\n              <ul className=\"fadeInDown\">\n                <li onClick={datosUsuario}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-user-gear\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Profile</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                {/* <li onClick={changePassword}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-key\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Cambiar Contraseña</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li> */}\n                <li onClick={cerrarSesion}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-right-from-bracket\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Sign off</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppTopbar;\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from 'react';\n\nconst AppRightPanel = (props) => {\n\n\treturn (\n\t\t<div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n\t\t\t<div className=\"rightpanel-wrapper\" >\n\t\t\t\t<div className=\"rightpanel-section weather-section\">\n\t\t\t\t\t<div className=\"section-header\">\n\t\t\t\t\t\t<h6>Today</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"weather\">\n\t\t\t\t\t\t<img src=\"assets/demo/images/rightpanel/icon-sun.svg\" alt=\"freya-layout\" />\n\t\t\t\t\t\t<div className=\"weather-info\">\n\t\t\t\t\t\t\t<h6>Ankara, 22 May</h6>\n\t\t\t\t\t\t\t<h1>24º</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppRightPanel;","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst headers = {}\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error('The session has expired. Please log in again.')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    // Agregar una respuesta al interceptor\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    toast.error('The session has expired. Please log in again.')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","\r\n// EN ARCHIVO package.json SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY:\r\n// \"proxy\": \"http://20.65.110.204:8080\",\r\n\r\n// SOLO PARA PRODUCCION\r\n// const apiURL = 'http://20.65.110.204/uprime-mge-web/uprime/api'\r\nconst apiURL = 'https://mygreenenterprise.org/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA DESARROLLO Y PRUEBAS\r\n// const apiURL = '/uprime-mge-web/uprime/api'\r\n\r\nexport const getAutenticarUrl = () => `${apiURL}/UsuarioServicioRest/authenticateUsuario`\r\nexport const getAutorizarUrl = () => `${apiURL}/UsuarioServicioRest/authorizationUsuario`\r\nexport const getRecuperarPasswordUrl = () => `${apiURL}/UsuarioServicioRest/recuperarPassword`\r\nexport const getResetPasswordUrl = () => `${apiURL}/UsuarioServicioRest/resetPassword`\r\nexport const getChangePasswordUrl = () => `${apiURL}/UsuarioServicioRest/changePassword`\r\nexport const getRegistrarUrl = () => `${apiURL}/InversionistaServicioRest/insertInversionista`\r\n\r\nexport const getRegistrarPersonaUrl = () => `${apiURL}/PersonaServicioRest/insertPersona`\r\n\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogosList`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogoByFilter`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogosListByFather`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogoById`\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/insertCatalogo`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/deleteCatalogo`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/updateCatalogo`\r\n\r\nexport const getOpcionesUrl = () => `${apiURL}/OpcionServicioRest/getOpcionesList`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OpcionServicioRest/getOpcionesListByFather`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OpcionServicioRest/getOpcionById`\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OpcionServicioRest/insertOpcion`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OpcionServicioRest/deleteOpcion`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OpcionServicioRest/updateOpcion`\r\n\r\nexport const getPerfilesUrl = () => `${apiURL}/PerfilServicioRest/getPerfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/PerfilServicioRest/getPerfilById`\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/PerfilServicioRest/insertPerfil`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/PerfilServicioRest/updatePerfil`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/PerfilServicioRest/deletePerfil`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/PerfilOpcionServicioRest/getOpcionesPorPerfilList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/insertPerfilOpcion`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/updatePerfilOpcion`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/deletePerfilOpcion`\r\n\r\nexport const getUsuariosUrl = () => `${apiURL}/UsuarioServicioRest/getUsuariosList`\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UsuarioServicioRest/getUsuariosListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UsuarioServicioRest/getUsuarioById`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UsuarioServicioRest/updateUsuario`\r\n\r\n/* MGE */\r\nexport const insertUsuario = () => `${apiURL}/UsuarioServicioRest/insertUsuario`\r\nexport const enrollUsuario = () => `${apiURL}/UsuarioServicioRest/enrollPostulante`\r\nexport const recoveryPassword = () => `${apiURL}/UsuarioServicioRest/recoveryPassword`\r\nexport const updatePassword = () => `${apiURL}/UsuarioServicioRest/updatePassword`\r\nexport const uploadPhotoUser = () => `${apiURL}/UsuarioServicioRest/uploadFotoUsuario`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UsuarioServicioRest/getUsuariosLessPostulants`\r\n\r\nexport const insertTraining = () => `${apiURL}/EntrenamientoServicioRest/insertEntrenamiento`\r\nexport const updateTraining = () => `${apiURL}/EntrenamientoServicioRest/updateEntrenamiento`\r\nexport const getTrainingById = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulanteServicioRest/insertPostulante`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulanteServicioRest/sendEmailRegistro`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulanteServicioRest/getPostulanteByEntrenamiento`\r\nexport const deletePostulant = () => `${apiURL}/PostulanteServicioRest/deletePostulante`\r\nexport const validatePostulant = () => `${apiURL}/PostulanteServicioRest/validatePostulante`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulanteServicioRest/getEntrenamientoByPostulante`\r\n\r\nexport const insertCourse = () => `${apiURL}/CursoServicioRest/insertCurso`\r\nexport const getCourseByTraining = () => `${apiURL}/CursoServicioRest/getCursosByEntrenamiento`\r\nexport const deleteCourse = () => `${apiURL}/CursoServicioRest/deleteCurso`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AsistenciaServicioRest/insertAsistencia`\r\nexport const getAttendanceById = () => `${apiURL}/AsistenciaServicioRest/getAsistenciaById`\r\nexport const updateAttendance = () => `${apiURL}/AsistenciaServicioRest/updateAsistencia`\r\n\r\nexport const insertInform = () => `${apiURL}/InformeServicioRest/insertInforme`\r\nexport const updateInform = () => `${apiURL}/InformeServicioRest/updateInforme`\r\nexport const getInformById = () => `${apiURL}/InformeServicioRest/getInformeById`\r\nexport const downloadInformByName = () => `${apiURL}/InformeServicioRest/downloadInformeByName`\r\nexport const downloadWorkplan = () => `${apiURL}/InformeServicioRest/downloadPlanTrabajo`\r\nexport const downloadFinalReport = () => `${apiURL}/InformeServicioRest/downloadInformeFinal`\r\nexport const sendEmailLoadInform = () => `${apiURL}/InformeServicioRest/sendEmailLoadInforme`\r\nexport const sendEmailRateInform = () => `${apiURL}/InformeServicioRest/sendEmailRateInforme`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenciaServicioRest/insertEvidencia`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificadoServicioRest/generateCertificado`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificadoServicioRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificadoServicioRest/downloadCertificateByName`\r\n\r\nexport const getInversionistaPorIdUrl = () => `${apiURL}/InversionistaServicioRest/getInversionistaById`\r\nexport const getActualizarInversionistaUrl = () => `${apiURL}/InversionistaServicioRest/updateUsuario`\r\n\r\n/* KC */\r\nexport const getOfertasInversionUrl = () => `${apiURL}/OfertaInversionServicioRest/getOfertaInversionList`\r\nexport const getOfertaInversionByIdUrl = () => `${apiURL}/OfertaInversionServicioRest/getOfertaInversionById`\r\n\r\nexport const getSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/getSolicitudInversionList`\r\nexport const getTablaAmortizacionUrl = () => `${apiURL}/SolicitudInversionServicioRest/getTablaAmortizacion`\r\nexport const getInsertarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/insertSolicitudInversion`\r\nexport const getActualizarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/updateSolicitudInversion`\r\nexport const getEliminarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/deleteSolicitudInversion`\r\nexport const getSolicitudInversionPorIdUrl = () => `${apiURL}/SolicitudInversionServicioRest/getSolicitudInversionById`\r\n\r\nexport const getInversionUrl = () => `${apiURL}/InversionServicioRest/getInversionList`\r\nexport const getInversionesPorInversionistaUrl = () => `${apiURL}/InversionServicioRest/getInversionesByInversionista`\r\nexport const getInversionPorIdUrl = () => `${apiURL}/InversionServicioRest/getInversionById`\r\nexport const getInsertarInversionUrl = () => `${apiURL}/InversionServicioRest/insertInversion`\r\nexport const getActualizarInversionUrl = () => `${apiURL}/InversionServicioRest/updateInversion`\r\nexport const getEliminarInversionUrl = () => `${apiURL}/InversionServicioRest/deleteInversion`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, uploadPhotoUser } from \"./../utils/urls\"\r\n\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'usuId',\r\n      render: (_) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'nombres',\r\n      render: (_, r) => `${r.nombres} ${r.apellidos}`\r\n    },\r\n    {\r\n      title: 'ID Number',\r\n      dataIndex: 'documento'\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      render: (_, record) => <Button type='primary' href={`/#/users/${record.usuId}`}>View</Button>\r\n    }\r\n  ]\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject[0]\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n      // setError(\"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Users Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"ID Number\">\r\n              <Input label='ID Number' type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Name\">\r\n              <Input label='Name' type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Email\">\r\n              <Input label='Email' type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"State\">\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n                {/* <Radio value={true}>Activo</Radio>\r\n                <Radio value={false}>Inactivo</Radio> */}\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>New User</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>Refresh</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, message, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('User updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('User updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            User\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >Cancel</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving}>Save</Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport OpcionService from './../../service/OpcionService'\r\n\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject[0].filter(o => o.opcNivel === 1).map(o => ({ title: o.opcNombre, key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`, children: o.opcHijos.map(o => ({ title: o.opcNombre, key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}` })) }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener los opciones\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los opciones\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    // const opcionPadre = nodo.key ? { opcIdPadre: nodo.key.split('_')[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n        // ...opcionPadre,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(\"Hubo un error al obtener la opción\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener la opción\")\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para guardar la opción\")\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar la opción\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n// import AxiosInstance from './../../utils/AxiosInstance'\r\n// import { getPerfilesUrl, getEliminarPerfilUrl, getActualizarPerfilUrl, getInsertarPerfilUrl } from './../../utils/urls'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Level',\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'State',\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? 'ACTIVE' : 'INACTIVE'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject[0].map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success('Profile saved successfully')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`An error ocurred: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Profile deleted successfully')\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Profiles Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                New Profile\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"Are you sure you want to delete the selected profiles?\" okText=\"Yes, deleter\" cancelText=\"No\" onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? 'Deleting' : 'Delete'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>Refresh</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Name\">\r\n                <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Level\">\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"State\">\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? 'Active' : 'Inactive'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? 'Saving' : 'Save'}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`Option ${perfilOpcionActualizado.pfoOpcId.opcNombre} updated successfully`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setIsLoading(false)\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setIsLoading(false)\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject[0].filter(o => o.opcNivel === 1)\r\n              .map((o) => ({\r\n                key: `${o.opcId}`,\r\n                opcNombre: o.opcNombre,\r\n                ..._opcionesPerfil.filter((op) => op.idOpcion === o.opcId)[0],\r\n                children: o.opcHijos.map((o) => ({\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter((op) => op.idOpcion === o.opcId)[0]\r\n                }))\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n\r\n      } else {\r\n        setIsLoadingOpciones(false)\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpciones(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success('Profile saved successfully')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Profile deleted')\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Profile {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Name\">\r\n                  <Input id=\"perNombre\" name=\"perNombre\" label='Name' type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Level\">\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"State\">\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? 'ACTIVE' : 'INACTIVE'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>Options</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? 'Saving' : 'Save'}\r\n                    </Button>\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Input, Form, Spin, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst columnas = [\r\n    {\r\n        title: '',\r\n        render: (e) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'nombres',\r\n        render: (_, r) => `${r.nombres}`\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'apellidos',\r\n        render: (_, r) => `${r.apellidos}`\r\n    },\r\n    {\r\n        title: 'Country',\r\n        dataIndex: 'pais',\r\n        render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n            <Tooltip title={pais.catDescripcion}>\r\n                <img\r\n                    src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={pais.catDescripcion}></img>\r\n            </Tooltip>\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: <div style={{ textAlign: 'center' }}>Role</div>,\r\n        dataIndex: 'role',\r\n        render: (_, { usuarioPerfilList }) => <div style={{ textAlign: 'center' }}>\r\n            {usuarioPerfilList[0].uspPerId.perNombre}\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>View</Button>\r\n    }\r\n]\r\n\r\nconst statistics = [\r\n    {\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#54873C',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER OF TRAINERS</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#70B450',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#385A28',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>APPLICATS</Typography.Text>,\r\n            value: 80,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#636466',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>BENEFICIARIES</Typography.Text>,\r\n            value: 150,\r\n            precision: 0,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: ''\r\n        },\r\n        description: <>&nbsp;</>\r\n    }\r\n]\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderStatistics = ({ props, data, description }) => <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n        <Card\r\n            {...props}\r\n        >\r\n            <Statistic\r\n                {...data}\r\n                valueStyle={{\r\n                    color: '#ffffff',\r\n                }}\r\n            />\r\n            {description}\r\n        </Card>\r\n    </Col>\r\n\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setError(null)\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject[0]\r\n                setUsers(usuarios)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setError(\"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[15, 15]}>\r\n                {\r\n                    statistics && statistics.map(s => renderStatistics(s))\r\n                }\r\n            </Row>\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        {/* <Form.Item\r\n                            label='Search expression'\r\n                        >\r\n                            <Input />\r\n                        </Form.Item> */}\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Table\r\n                                {...tableProps}\r\n                                rowKey='usuId'\r\n                                columns={columnas}\r\n                                dataSource={users}>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Collapse, Badge, Card, Alert } from 'antd'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [errorTrainings, setErrorTrainings] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entModalidad, entNombre, entPais, numPostulantes }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        setErrorTrainings(null)\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                setErrorTrainings(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setErrorTrainings(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>Regresar al inicio</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {usuario.usuarioPerfilList[0].uspPerId.perNombre}\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Trainings</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description=\"Trainings not found.\"\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n            {/* <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/dashboard'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        Gestión de Usuario\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider> */}\r\n            {/* {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Espere un momento...</Typography.Text>\r\n                    </div> :\r\n                    <Form\r\n                        layout={'vertical'}\r\n                        form={form}\r\n                        initialValues={{\r\n                            layout: 'vertical',\r\n                        }}\r\n                    >\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Identificación\">\r\n                                    <Input id=\"documento\" name=\"documento\" label='Identificación' type='text' value={usuario.documento} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Tipo de Identificación\">\r\n                                    <Select defaultValue={usuario.tipoDocumento} value={usuario.tipoDocumento} onChange={onChangeTipoIdentificacion}>\r\n                                        {\r\n                                            tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Nombres\">\r\n                                    <Input id=\"nombres\" name=\"nombres\" label='Nombres' type='text' value={usuario.nombres} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Apellidos\">\r\n                                    <Input id=\"apellidos\" name=\"apellidos\" label='Apellidos' type='text' value={usuario.apellidos} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                                <Form.Item label=\"Dirección\">\r\n                                    <Input id=\"direccion\" name=\"direccion\" label='Dirección' type='text' value={usuario.direccion} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Email\">\r\n                                    <Input id=\"email\" name=\"email\" label='Email' type='text' value={usuario.email} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Teléfono\">\r\n                                    <Input id=\"telefono\" name=\"telefono\" label='Teléfono' type='text' value={usuario.telefono} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Login\">\r\n                                    <Input id=\"login\" name=\"login\" label='Login' type='text' value={usuario.login} onChange={onChange} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Contraseña\">\r\n                                    <Input.Password id=\"password\" name=\"password\" label='Contraseña' value={usuario.password} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Estado\">\r\n                                    <Select\r\n                                        defaultValue={usuario.estado.catValor}\r\n                                        value={usuario.estado.catValor}\r\n                                        onChange={onChangeEstado}\r\n                                    >\r\n                                        {\r\n                                            estados && estados.map(e => renderEstado(e))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" onClick={(e) => guardar(e)} disabled={isSaving}\r\n                                loading={isSaving}\r\n                            >\r\n                                {isSaving ? 'Guardando...' : 'Guardar'}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsSaving(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0) {\r\n                handleUpload(usuarioActualizado)\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(\"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject[0]\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setError(\"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>Return to home</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        New User\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Please wait...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='Upload your profile picture'\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >Select Photo</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label=\"First Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete first Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label=\"Last Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete last Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label='Sex'\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select sex',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label=\"Date of birth\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select date of birth',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>ID Number</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                This is the unique identification number issued by the country of residence.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete ID Number',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label=\"Country\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label=\"City\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete city',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Country Code\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country code',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Phone Number\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete phone number',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>Are you currently working?</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                Please write the complete name of the institution.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label=\"Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label=\"Additional Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete additional email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Additional email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Create your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Create your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Confirm your password\"\r\n                                            name='passwordConfirm'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Confirm your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                    specialChar: \"Password has special characters.\",\r\n                                                    number: \"Password has a number.\",\r\n                                                    capital: \"Password has a capital letter.\",\r\n                                                    match: \"Passwords match.\",\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label='Profile'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select profile',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label='State'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select state',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >Cancel</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving}>Save</Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  My Account\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => { formUser.submit() }}>Save</Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={currentlyWorking}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text type='secondary'>\r\n                                {numPostulantes} applicants\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                View\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        const trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"mgeCard\">\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-4\">\r\n                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                    Trainings\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                <Space>\r\n                                    <Button\r\n                                        type='default'\r\n                                        loading={isLoading}\r\n                                        disabled={isLoading}\r\n                                        style={{ width: '120px' }}\r\n                                        onClick={() => {\r\n                                            fetchData()\r\n                                        }}>Refresh</Button>\r\n                                    <Button\r\n                                        type='primary'\r\n                                        disabled={isLoading}\r\n                                        style={{ width: '120px' }}\r\n                                        onClick={() => {\r\n                                            navigate.push('/trainingnew')\r\n                                        }}>New Training</Button>\r\n                                </Space>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\";\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, List, Alert, Typography } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst baseTraining = {\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `Then email ${postulant} already exists.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${postulant} successfully added.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${email} successfully removed.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      ...values,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar cursos\r\n        const requests = []\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`It was not possible to add the applicant: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(\"An error occurred.\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      New Training\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >Save Draft</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                      onClick={() => {\r\n                        toast.success('Training published')\r\n                      }}\r\n                    >Publish</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label=\"Country\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select country',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select name='idPais'>\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {/* <Col span={16}>\r\n                <Form.Item\r\n                  name='name'\r\n                  label=\"Training name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete training name',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col> */}\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label=\"Modality\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select modality',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label=\"Start Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select start date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label=\"End Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select end date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row >\r\n            <Form layout='vertical' style={{ width: '100%' }}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label='Courses'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select courses',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Form>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label='Applicants emails'\r\n                  extra='Press enter to add email'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete applicants',\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: 'Email is not valid'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setError(null)\r\n                setCourse(data.listObject[0])\r\n            } else {\r\n                setError(\"Hubo un error al obtener el entrenamiento\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el entrenamiento\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import axios from \"axios\"\r\nimport { getToken } from \"./Utils\"\r\n\r\n// responseType: 'arraybuffer'\r\nconst headers = {\r\n}\r\n\r\nconst AxiosInstanceBlob = (navigate) => {\r\n\r\n    const axiosInstanceBlob = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstanceBlob.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                // navigate.push('/login')\r\n            }\r\n            config.headers[\"Authorization\"] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    // Agregar una respuesta al interceptor\r\n    axiosInstanceBlob.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                // localStorage.removeItem('mgeCatalogos')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    // localStorage.removeItem('mgeCatalogos')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n\r\n    return axiosInstanceBlob\r\n\r\n}\r\n\r\nexport default AxiosInstanceBlob","import AxiosInstance from '../utils/AxiosInstance'\r\nimport AxiosInstanceBlob from '../utils/AxiosInstanceBlob'\r\nimport { downloadFinalReport, downloadInformByName, downloadWorkplan, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    downloadWorkplan = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstanceBlob(navigate).get(downloadWorkplan())\r\n    }\r\n    downloadFinalReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(downloadFinalReport())\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    download = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Tooltip, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\nconst trainingService = new TrainingService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n  const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              Download\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 2,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n          }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              Comments:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'PLAN_TRABAJO' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'PLAN_TRABAJO' ? 'workplan' : infTipo.catValor === 'INFORME_FINAL' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, approve\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending || isGenerating || isSendingCertificate\r\n                  }}\r\n                  disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                    disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                  >Approve</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'PLAN_TRABAJO' ? 'workplan' : infTipo.catValor === 'INFORME_FINAL' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, reject\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending || isGenerating || isSendingCertificate }}\r\n                  disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                    disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                  >Reject</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'PLAN_TRABAJO' ? 'Workplan - ' : infTipo.catValor === 'INFORME_FINAL' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const downloadCertificate = async (cerNombre, cerRuta) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        cerNombre,\r\n        cerRuta\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Certificate&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Expires: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n              >Download</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      toast.success('Attendance successfully saved')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendCertificate = async ({ cerId }) => {\r\n    setIsSendingCertificate(true)\r\n    try {\r\n      const certificate = { cerId }\r\n      const { data } = await certificateService.send({ navigate, certificate })\r\n      toast.success('Certificate sent successfully')\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSendingCertificate(false)\r\n    }\r\n  }\r\n\r\n  const generate = async ({ idCurso }) => {\r\n    setIsGenerating(true)\r\n    try {\r\n      const course = {\r\n        idCurso: idCurso,\r\n        idPostulante: postulant.posId\r\n      }\r\n      const { data } = await certificateService.generate({ navigate, course })\r\n      const certificate = data.listObject[0]\r\n      toast.success('Certificate generated successfully')\r\n      sendCertificate(certificate)\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n    } finally {\r\n      setIsGenerating(false)\r\n    }\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId, infTipo, infEstado, idCurso }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      toast.success('Email sent successfully')\r\n      if (infTipo.catValor === 'INFORME_FINAL' && infEstado.catValor === 'EST_INF_APR') {\r\n        generate({ idCurso })\r\n      } else {\r\n        setLoad(true)\r\n      }\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'PLAN_TRABAJO' ? commentWorkplan : catValor === 'INFORME_FINAL' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = {\r\n      entId: idTraining\r\n    }\r\n    try {\r\n      const { data } = await trainingService.getById({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].cursoList\r\n        const postulant = data.listObject[0].postulanteList.filter(p => p.posId === parseInt(id))[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error('An error occurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      message.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                      {/* <Space>\r\n                        <Button type='primary'>Edit</Button>\r\n                      </Space> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Role:\r\n                            </Typography.Text>\r\n                            <br />Applicant\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Invited by:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label=\"First Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label=\"Last Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label=\"Sex\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label=\"Date Birth\"\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label=\"Country\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label=\"City\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label=\"Country Code\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label=\"Phone number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label=\"ID Number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label=\"Currenty Working\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label=\"Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label=\"Additional Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Attendance\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >Save</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'PLAN_TRABAJO' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'INFORME_FINAL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const metaData = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, \"WorkplanTemplate.docx\")\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        {/* <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infFechaReg.substring(0, 10)}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        {\r\n                            infFechaSAprRec && <Col>\r\n                                <Typography.Title level={5}>\r\n                                    {infFechaSAprRec.substring(0, 10)}\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        } */}\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            // disabled={fileList.length === 0}\r\n                                            loading={uploading}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        // fileList.forEach((file) => {\r\n        //     inform.append('file', file)\r\n        //     inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'PLAN_TRABAJO')[0].catId)\r\n        //     inform.append('idCurso', postulant.entId.cursoList[0].curId)\r\n        //     inform.append('idPostulante', postulant.posId)\r\n        // });\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'PLAN_TRABAJO')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Upload successfully')\r\n            // setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Workplan template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n\r\n            {/* {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                                ?\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Upload {...props}>\r\n                                            <Button icon={<anticons.UploadOutlined />}>Select File</Button>\r\n                                        </Upload>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            onClick={handleUpload}\r\n                                            disabled={fileList.length === 0}\r\n                                            loading={uploading}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                : <>\r\n                                </>\r\n                        }\r\n                    </>\r\n\r\n            } */}\r\n\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Upload your workplan\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Dragger {...props}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <anticons.InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                        </Dragger>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24} style={{ textAlign: 'end' }}>\r\n                    <Button type='primary'>Send</Button>\r\n                </Col>\r\n            </Row> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Tooltip, Collapse } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n\r\n        const metaData = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, \"FinalReportTemplate.docx\")\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        {/* <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infFechaReg.substring(0, 10)}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        {\r\n                            infFechaSAprRec && <Col>\r\n                                <Typography.Title level={5}>\r\n                                    {infFechaSAprRec.substring(0, 10)}\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        } */}\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>\r\n                                            Copy evidence link\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label='URL'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            // disabled={fileList.length === 0}\r\n                                            loading={uploading}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        // fileList.forEach((file) => {\r\n        //     inform.append('file', file)\r\n        //     inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'INFORME_FINAL')[0].catId)\r\n        //     inform.append('idCurso', postulant.entId.cursoList[0].curId)\r\n        //     inform.append('idPostulante', postulant.posId)\r\n        // });\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'INFORME_FINAL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0].infId\r\n            sendLoadEmail(informe)\r\n            toast.success('Evidence sended successfully')\r\n            // setLoad(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Final Report template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n\r\n            {/* {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' &&\r\n                                w.infEstado.catValor === 'EST_INF_APR'\r\n                            ).length > 0\r\n                                &&\r\n                                (\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length < 1\r\n                                    ||\r\n                                    (\r\n                                        postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                    )\r\n                                )\r\n                                ?\r\n                                <Form\r\n                                    onFinish={handleUpload}\r\n                                    autoComplete='off'\r\n                                    layout='vertical'\r\n                                >\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Typography.Title level={5}>\r\n                                                Upload your final report\r\n                                            </Typography.Title>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='file'\r\n                                                label='File'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Upload\r\n                                                    multiple={false}\r\n                                                    {...props}\r\n                                                >\r\n                                                    <Button\r\n                                                        icon={<anticons.UploadOutlined />}\r\n                                                        disabled={\r\n                                                            fileList.length > 0\r\n                                                        }\r\n                                                    >Select File</Button>\r\n                                                </Upload>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            <Typography.Title level={5}>\r\n                                                Copy evidence link\r\n                                            </Typography.Title>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='url'\r\n                                                label='URL'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'url',\r\n                                                        warningOnly: true,\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'string',\r\n                                                        min: 6,\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                disabled={fileList.length === 0}\r\n                                                loading={uploading}\r\n                                            >\r\n                                                {uploading ? 'Uploading' : 'Send'}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                                : <>\r\n                                </>\r\n                        }\r\n                    </>\r\n\r\n            } */}\r\n\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Upload your final report\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Dragger {...props}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <anticons.InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                        </Dragger>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Copy evidence link\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Form.Item>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={24} style={{ textAlign: 'end' }}>\r\n                    <Button type='primary'>Send</Button>\r\n                </Col>\r\n            </Row> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Divider, Result } from 'antd'\r\nimport QRCode from 'react-qr-code'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' &&\r\n                                w.infEstado.catValor === 'EST_INF_APR'\r\n                            ).length > 0\r\n                                &&\r\n                                postulant.certificadoList.length >= 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <Result\r\n                                        title=\"You will see your certificate once your final report is approved\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/finalreport')\r\n                                                }}\r\n                                            >\r\n                                                Send Final Report\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                                </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React from 'react'\r\nimport { Layout, Row, Col, Typography } from 'antd'\r\n\r\nconst Classes = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Classes\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col>\r\n                                <Spin size='large'></Spin>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, List, Card, Checkbox, Image, Alert, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\nimport { sendEmailRegister } from '../../utils/urls'\r\n\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\nconst { Option } = Select\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadCourse, setLoadCourse] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isLoadingPostulant, setIsLoadingPostulant] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' ?\r\n                            <>\r\n                                <Tooltip title='Click to send invitation email'>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    setError(null)\r\n                    fetchCourses()\r\n                } else {\r\n                    setError(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    setError(null)\r\n                    fetchCourses()\r\n                } else {\r\n                    setError(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `Then email ${posEmail} already exists.`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${posEmail} successfully saved.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                setError(null)\r\n                fetchPostulants()\r\n            } else {\r\n                setError(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${postulant.posEmail} successfully deleted.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                setError(null)\r\n                fetchPostulants()\r\n            } else {\r\n                setError(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setError(null)\r\n                setTraining({\r\n                    ...training,\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setLoadCourse(false)\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setError(null)\r\n                setCourses(courses)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        setIsLoadingPostulant(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject\r\n                setError(null)\r\n                setPostulants(postulants)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingPostulant(false)\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        toast.success(`Training ${training.entNombre} update succesfully`)\r\n        // // const training = {\r\n        // //     ...values,\r\n        // //     idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n        // //     idUsuario: getDatosUsuario().usuarioId\r\n        // // }\r\n        // setIsSaving(true)\r\n        // // try {\r\n        // //     const { data } = await trainingService.put({ navigate, training })\r\n        // //     if (data) {\r\n        // //         setError(null)\r\n        // // Asignar cursos\r\n        // const requests = []\r\n        // if (courses.length > 0) {\r\n        //     courses.forEach(p => {\r\n        //         requests.push(courseService.put({\r\n        //             navigate, course: {\r\n        //                 \"idEntrenamiento\": training.entId,\r\n        //                 \"idNombreCurso\": p.catId\r\n        //             }\r\n        //         }))\r\n        //     });\r\n        // }\r\n        // // Asignar postulantes\r\n        // if (training.postulanteList.length > 0) {\r\n        //     training.postulanteList.filter(p => p.posId === undefined || p.posId === null).forEach(p => {\r\n        //         requests.push(postulantService.put({\r\n        //             navigate, postulant: {\r\n        //                 \"idEntrenamiento\": training.entId,\r\n        //                 \"posEmail\": p.posEmail,\r\n        //                 \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n        //             }\r\n        //         }))\r\n        //     });\r\n        // }\r\n        // if (requests.length > 0) {\r\n        //     Promise.all(requests)\r\n        //         .then((results) => {\r\n        //             toast.success(`Training ${training.entNombre} update succesfully`)\r\n        //             // navigate.push('/training')\r\n        //             setLoad(true)\r\n        //         }).catch(error => {\r\n        //             const { response } = error\r\n        //             const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        //             message.error(`It was not possible to add the applicant: ${msgError}`)\r\n        //         })\r\n        //     // } else {\r\n        //     //     toast.success(`Training ${data.listObject[0].entNombre} update succesfully`)\r\n        //     //     // navigate.push('/training')\r\n        //     //     setLoad(true)\r\n        //     // }\r\n        //     //     } else {\r\n        //     //         setError(\"An error occurred.\")\r\n        //     //     }\r\n        //     // } catch (error) {\r\n        //     //     const { response } = error\r\n        //     //     setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        //     // } finally {\r\n        //     //     setIsSaving(false)\r\n        // }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error('Could not send email', { position: 'bottom-center' })\r\n            else\r\n                toast.success('Email sent successfully', { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\", { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (courses.length < 1 || postulants.length < 1) {\r\n            toast.error('Add at least one course and one applicant')\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                setError(null)\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error('Could not send email')\r\n                                    else\r\n                                        toast.success('Email sent successfully')\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\")\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadCourse) {\r\n            fetchCourses()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        Edit Training\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >Save Draft</Button>\r\n                                                    <Popconfirm title=\"Are you sure to publish the training?\" okText=\"Yes, publish\" cancelText=\"No\" onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >Publish</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                            <Form.Item\r\n                                                name={['entPais', 'catId']}\r\n                                                label=\"Country\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select country',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select>\r\n                                                    {\r\n                                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                    }\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label=\"Trainig name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete trainig name',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label=\"Modality\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select modality',\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'>\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label=\"Start Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select start date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label=\"End Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select end date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Typography.Paragraph>\r\n                                    <Typography.Text type='danger'>*</Typography.Text>&nbsp;Courses\r\n                                </Typography.Paragraph>\r\n                                {\r\n                                    training.entEstado.catValor === 'ACTIVE' ?\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={training.cursoList}\r\n                                            renderItem={({ curNombre }) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            checked\r\n                                                        >\r\n                                                            {curNombre.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                        :\r\n                                        getCatalogos().cursos &&\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={getCatalogos().cursos}\r\n                                            renderItem={(item) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            disabled={isSaving || isLoadingCourse}\r\n                                                            checked={\r\n                                                                courses.filter(c => c.curNombre.catId === item.catId).length > 0\r\n                                                            }\r\n                                                            onChange={(e) => {\r\n                                                                setCourse({\r\n                                                                    checked: e.target.checked,\r\n                                                                    idNombreCurso: item.catId,\r\n                                                                    curId: courses.filter(c => c.curNombre.catId === item.catId).length > 0 ? courses.filter(c => c.curNombre.catId === item.catId)[0].curId : 0\r\n                                                                })\r\n                                                            }}>\r\n                                                            {item.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                }\r\n                            </Col>\r\n                        </Row >\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isLoadingCourse}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label='Applicants emails'\r\n                                                extra='Press enter to add email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete applicants',\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row >\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setError(null)\r\n                setCourse(data.listObject[0])\r\n            } else {\r\n                setError(\"Hubo un error al obtener el entrenamiento\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el entrenamiento\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/trainingapplicant/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Tooltip, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\nconst trainingService = new TrainingService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [commentWorkplan, setCommentWorkplan] = useState('')\r\n    const [commentFinalReport, setCommentFinalReport] = useState('')\r\n    const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n    const [isSavingInform, setIsSavingInform] = useState(false)\r\n    const [isSending, setIsSending] = useState(false)\r\n    const [isGenerating, setIsGenerating] = useState(false)\r\n    const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 2,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'PLAN_TRABAJO' ? 'Workplan - ' : infTipo.catValor === 'INFORME_FINAL' ? 'Final Report - ' : ''\r\n                            }\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const setAttendance = async () => {\r\n        const attendance = {\r\n            \"idEntrenamiento\": idTraining,\r\n            \"idPostulante\": id,\r\n            \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n            \"asiValor\": attendanceValue\r\n        }\r\n        setIsSavingAttendance(true)\r\n        try {\r\n            const { data } = await attendanceService.put({ navigate, attendance })\r\n            toast.success('Attendance successfully saved')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSavingAttendance(false)\r\n        }\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const sendCertificate = async ({ cerId }) => {\r\n        setIsSendingCertificate(true)\r\n        try {\r\n            const certificate = { cerId }\r\n            const { data } = await certificateService.send({ navigate, certificate })\r\n            toast.success('Certificate sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setIsSendingCertificate(false)\r\n        }\r\n    }\r\n\r\n    const generate = async ({ idCurso }) => {\r\n        setIsGenerating(true)\r\n        try {\r\n            const course = {\r\n                idCurso: idCurso,\r\n                idPostulante: postulant.posId\r\n            }\r\n            const { data } = await certificateService.generate({ navigate, course })\r\n            const certificate = data.listObject[0]\r\n            toast.success('Certificate generated successfully')\r\n            sendCertificate(certificate)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    const sendRateEmail = async ({ infId, infTipo, infEstado, idCurso }) => {\r\n        setIsSending(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailRate({ navigate, inform })\r\n            toast.success('Email sent successfully')\r\n            if (infTipo.catValor === 'INFORME_FINAL' && infEstado.catValor === 'EST_INF_APR') {\r\n                generate({ idCurso })\r\n            } else {\r\n                setLoad(true)\r\n            }\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setIsSending(false)\r\n        }\r\n    }\r\n\r\n    const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n        const { catValor } = infTipo\r\n        const inform = {\r\n            infId,\r\n            idEstado: catId,\r\n            infObservacion: catValor === 'PLAN_TRABAJO' ? commentWorkplan : catValor === 'INFORME_FINAL' ? commentFinalReport : ''\r\n        }\r\n        setIsSavingInform(true)\r\n        try {\r\n            const { data } = await informService.set({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendRateEmail({ ...informe, idCurso })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSavingInform(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = {\r\n            entId: idTraining\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject[0].cursoList\r\n                const postulant = data.listObject[0].postulanteList.filter(p => p.posId === parseInt(id))[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error('An error occurred')\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />Applicant\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Invited by:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            Attendance\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'PLAN_TRABAJO' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'INFORME_FINAL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import React, { useState, useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport { Route, useLocation } from \"react-router-dom\";\n\nimport AppTopbar from \"./AppTopbar\";\nimport AppFooter from \"./AppFooter\";\nimport AppRightPanel from \"./AppRightPanel\";\n\n// import Dashboard from './components/Dashboard';\n// import FormLayoutDemo from \"./components/FormLayoutDemo\";\n// import InputDemo from \"./components/InputDemo\";\n// import FloatLabelDemo from \"./components/FloatLabelDemo\";\n// import InvalidStateDemo from \"./components/InvalidStateDemo\";\n// import ButtonDemo from \"./components/ButtonDemo\";\n// import TableDemo from \"./components/TableDemo\";\n// import ListDemo from \"./components/ListDemo\";\n// import TreeDemo from \"./components/TreeDemo\";\n// import PanelDemo from \"./components/PanelDemo\";\n// import OverlayDemo from \"./components/OverlayDemo\";\n// import MediaDemo from \"./components/MediaDemo\";\n// import MenuDemo from \"./components/MenuDemo\";\n// import MessagesDemo from \"./components/MessagesDemo\";\n// import FileDemo from \"./components/FileDemo\";\n// import ChartDemo from \"./components/ChartDemo\";\n// import MiscDemo from \"./components/MiscDemo\";\n// import Documentation from \"./components/Documentation\";\n// import IconsDemo from \"./utilities/IconsDemo\";\n// import CrudDemo from \"./pages/CrudDemo\";\n// import CalendarDemo from \"./pages/CalendarDemo\";\n// import TimelineDemo from \"./pages/TimelineDemo\";\n// import Invoice from \"./pages/Invoice\";\n// import Help from \"./pages/Help\";\n// import EmptyPage from \"./pages/EmptyPage\";\n// import BlocksDemo from \"./components/BlocksDemo\";\nimport { Tooltip } from \"primereact/tooltip\";\n\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./App.scss\";\n\n// import Inversiones from \"./components/inversiones/Inversiones\";\n// import MisInversiones from \"./components/inversiones/MisInversiones\";\n// import Inversion from \"./components/inversiones/Inversion\";\n// import Invertir from \"./components/inversiones/Invertir\";\n// import Reportes from \"./components/Reportes\";\nimport Usuarios from \"./components/usuario\";\nimport Usuario from \"./components/usuario/Usuario\";\n// import Catalogos from \"./components/catalogo\";\n// import Catalogo from \"./components/catalogo/Catalogo\";\nimport Opciones from \"./components/opcion\";\nimport Perfiles from \"./components/perfil\";\nimport Perfil from \"./components/perfil/Perfil\";\n// import ChangePassword from \"./components/cuenta/ChangePassword\";\n// import Home from \"./pages/Home\";\n\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport UserInfo from \"./components/dashboard/UserInfo\";\n// import Users from \"./components/user/Users\";\n// import User from \"./components/user/User\";\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\nimport Courses from \"./components/courses/Courses\";\nimport Course from \"./components/courses/Course\";\nimport Applicants from \"./components/Applicant/Applicants\";\nimport Applicant from \"./components/Applicant/Applicant\";\nimport WorkPlan from \"./components/workplan/WorkPlan\";\nimport FinalReport from \"./components/finalReport/FinalReport\";\nimport Certificate from \"./components/certificate/Certificate\";\nimport Classes from \"./components/classes/Classes\";\nimport Training from \"./components/training/Training\";\n\nimport { getOpcionesMenu } from \"./utils/Utils\";\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\n\nconst App = (props) => {\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\n  const [sidebarStatic, setSidebarStatic] = useState(true);\n  const [sidebarActive, setSidebarActive] = useState(true);\n  const [menuActive, setMenuActive] = useState(false);\n  const [configActive, setConfigActive] = useState(false);\n  const [rightPanelActive, setRightPanelActive] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\n  const copyTooltipRef = useRef();\n  const location = useLocation();\n\n  const menu = getOpcionesMenu();\n\n  let menuClick;\n  let rightPanelClick;\n  let configClick;\n  let searchClick;\n  let topbarUserMenuClick;\n\n  useEffect(() => {\n    copyTooltipRef &&\n      copyTooltipRef.current &&\n      copyTooltipRef.current.updateTargetEvents();\n  }, [location]);\n\n  useEffect(() => {\n    if (staticMenuMobileActive) {\n      blockBodyScroll();\n    } else {\n      unblockBodyScroll();\n    }\n  }, [staticMenuMobileActive]);\n\n  useEffect(() => {\n    setResetActiveIndex(true);\n    setMenuActive(false);\n  }, []);\n\n  const onMenuItemClick = (event) => {\n    if (!event.item.items) {\n      setResetActiveIndex(true);\n      hideOverlayMenu();\n    }\n    if (!event.item.items && (isSlim() || isHorizontal())) {\n      setMenuActive(false);\n    }\n  };\n\n  const onMenuClick = (event) => {\n    if (menuActive && event.target.className === \"layout-menu-container\") {\n      setResetActiveIndex(true);\n      setMenuActive(false);\n    }\n    menuClick = true;\n  };\n\n  const blockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.add(\"blocked-scroll\");\n    } else {\n      document.body.className += \" blocked-scroll\";\n    }\n  };\n\n  const unblockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.remove(\"blocked-scroll\");\n    } else {\n      document.body.className = document.body.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n    }\n  };\n\n  const onMenuButtonClick = (event) => {\n    menuClick = true;\n    setTopbarUserMenuActive(false);\n    setRightPanelActive(false);\n\n    if (isMobile()) {\n      setStaticMenuMobileActive(\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\n      );\n      if (staticMenuMobileActive) {\n        blockBodyScroll();\n      } else {\n        unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 991;\n  };\n\n  const isHorizontal = () => {\n    return \"sideBar\" === \"horizontal\";\n  };\n\n  const isSlim = () => {\n    return \"sideBar\" === \"slim\";\n  };\n\n  const hideOverlayMenu = () => {\n    setStaticMenuMobileActive(false);\n    unblockBodyScroll();\n  };\n\n  const onRightPanelClick = () => {\n    rightPanelClick = true;\n  };\n\n  const onRightPanelButtonClick = () => {\n    setRightPanelActive((prevState) => !prevState);\n    rightPanelClick = true;\n  };\n\n  const onTopbarSearchToggle = () => {\n    setSearchActive((prevState) => !prevState);\n    searchClick = true;\n  };\n\n  const onTopbarSearchClick = () => {\n    searchClick = true;\n  };\n\n  const onTopbarUserMenuClick = () => {\n    setTopbarUserMenuActive((prevState) => !prevState);\n    topbarUserMenuClick = true;\n  };\n\n  const onDocumentClick = () => {\n    if (!searchClick && searchActive) {\n      setSearchActive(false);\n      searchClick = false;\n    }\n\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\n      setTopbarUserMenuActive(false);\n      topbarUserMenuClick = false;\n    }\n\n    if (!rightPanelClick && rightPanelActive) {\n      setRightPanelActive(false);\n    }\n\n    if (!configClick && configActive) {\n      setConfigActive(false);\n    }\n\n    if (!menuClick) {\n      if (isSlim() || isHorizontal()) {\n        setResetActiveIndex(true);\n        setMenuActive(false);\n      }\n\n      if (staticMenuMobileActive) {\n        hideOverlayMenu();\n      }\n\n      unblockBodyScroll();\n    }\n\n    searchClick = false;\n    topbarUserMenuClick = false;\n    rightPanelClick = false;\n    configClick = false;\n    menuClick = false;\n  };\n\n  const onSidebarMouseOver = () => {\n    setSidebarActive(!isMobile());\n  };\n\n  const onSidebarMouseLeave = () => {\n    setSidebarActive(false);\n  };\n\n  const onToggleMenu = (event) => {\n    menuClick = true;\n    setSidebarStatic((prevState) => !prevState);\n\n    event.preventDefault();\n  };\n\n  const onRootMenuItemClick = () => {\n    setMenuActive((prevMenuActive) => !prevMenuActive);\n  };\n\n  const layoutClassName = classNames(\n    \"layout-wrapper\",\n    {\n      \"layout-sidebar\": \"sidebar\",\n      \"layout-static\": \"sidebar\" && sidebarStatic,\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\n      \"layout-rightpanel-active\": rightPanelActive,\n      \"layout-slim\": \"sidebar\" === \"slim\",\n      \"layout-mobile-active\": staticMenuMobileActive,\n      \"p-input-filled\": \"filled\",\n      \"p-ripple-disabled\": false,\n    },\n    \"layout-menu-light layout-topbar-light\"\n  );\n\n  // return <Route path=\"/signup/:id/:email\" exact component={Signup} />;\n\n  return (\n    <div\n      className={layoutClassName}\n      onClick={onDocumentClick}\n      style={{ backgroundColor: \"#F0F0F0\" }}\n    >\n      {/* <Toaster /> */}\n\n      <Tooltip\n        ref={copyTooltipRef}\n        target=\".block-action-copy\"\n        position=\"bottom\"\n        content=\"Copied to clipboard\"\n        event=\"focus\"\n      />\n\n      <AppTopbar\n        topbarScheme={\"light\"}\n        onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive}\n        onTopbarSearchToggle={onTopbarSearchToggle}\n        onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive}\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu}\n        menuActive={menuActive}\n        onRootMenuItemClick={onRootMenuItemClick}\n        mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick}\n        menuMode={\"sidebar\"}\n        sidebarStatic={sidebarStatic}\n        sidebarActive={sidebarActive}\n        onSidebarMouseOver={onSidebarMouseOver}\n        onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu}\n        onMenuButtonClick={onMenuButtonClick}\n        resetActiveIndex={resetActiveIndex}\n        onMenuClick={onMenuClick}\n      />\n\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n      <div className=\"layout-main\">\n        <div\n          className=\"mgeBG\"\n          style={{\n            opacity: \"0.3\",\n            height: \"100vh\",\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: \"0\",\n            right: \"0\",\n          }}\n        >\n          &nbsp;\n        </div>\n        <div className=\"layout-content\">\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/user/:id\" exact component={UserInfo} />\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\n          <Route path=\"/trainingapplicant/:id/:idTraining\" exact component={TrainingApplicant} />\n\n          {/* <Route path=\"/misinversiones/:filtro\" exact component={MisInversiones} />\n          <Route path=\"/inversion/:id\" exact component={Inversion} />\n          <Route path=\"/invertir/:id\" exact component={Invertir} />\n          <Route path=\"/reportes\" exact component={Reportes} />\n          <Route path=\"/cuenta\" exact component={MiCuenta} />\n          <Route path=\"/change\" exact component={ChangePassword} />\n          <Route path=\"/usuarios\" exact component={Usuarios} />\n          <Route path=\"/usuario/:id\" exact component={Usuario} /> */}\n          {/* <Route path=\"/catalogos\" exact component={Catalogos} />\n          <Route path=\"/catalogo/:id/:nombre\" exact component={Catalogo} /> */}\n\n          <Route path=\"/users\" exact component={Usuarios} />\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\n          <Route path=\"/users/:id\" exact component={Usuario} />\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\n\n          <Route path=\"/opciones\" exact component={Opciones} />\n          <Route path=\"/perfiles\" exact component={Perfiles} />\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\n\n          <Route path=\"/training\" exact component={Courses} />\n          <Route path=\"/training/:id\" exact component={Applicants} />\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\n          <Route path=\"/trainingnew\" exact component={Course} />\n\n          <Route path=\"/applicants\" exact component={Applicants} />\n          <Route path=\"/applicants/:id/:idTraining\" exact component={Applicant} />\n\n          <Route path=\"/classes\" exact component={Classes} />\n          <Route path=\"/workplan\" exact component={WorkPlan} />\n          <Route path=\"/finalreport\" exact component={FinalReport} />\n          <Route path=\"/certificate\" exact component={Certificate} />\n\n          {/* <Route path=\"/start/documentation\" component={Documentation} />\n          <Route path=\"/uikit/formlayout\" component={FormLayoutDemo} />\n          <Route path=\"/uikit/floatlabel\" component={FloatLabelDemo} />\n          <Route path=\"/uikit/input\" component={InputDemo} />\n          <Route path=\"/uikit/invalidstate\" component={InvalidStateDemo} />\n          <Route path=\"/uikit/button\" component={ButtonDemo} />\n          <Route path=\"/uikit/table\" component={TableDemo} />\n          <Route path=\"/uikit/list\" component={ListDemo} />\n          <Route path=\"/uikit/tree\" component={TreeDemo} />\n          <Route path=\"/uikit/panel\" component={PanelDemo} />\n          <Route path=\"/uikit/overlay\" component={OverlayDemo} />\n          <Route path=\"/uikit/menu\" component={MenuDemo} />\n          <Route path=\"/uikit/message\" component={MessagesDemo} />\n          <Route path=\"/uikit/media\" component={MediaDemo} />\n          <Route path=\"/uikit/file\" component={FileDemo} />\n          <Route path=\"/uikit/chart\" render={() => <ChartDemo colorMode={\"light\"} location={location} />} />\n          <Route path=\"/uikit/misc\" component={MiscDemo} />\n          <Route path=\"/utilities/icons\" component={IconsDemo} />\n          <Route path=\"/pages/crud\" component={CrudDemo} />\n          <Route path=\"/pages/calendar\" component={CalendarDemo} />\n          <Route path=\"/pages/help\" render={() => <Help colorScheme={\"light\"} />} location={location} />\n          <Route path=\"/pages/invoice\" component={Invoice} />\n          <Route path=\"/pages/empty\" component={EmptyPage} />\n          <Route path=\"/pages/timeline\" component={TimelineDemo} />\n          <Route path=\"/uiblocks/blocks\" component={BlocksDemo} /> */}\n        </div>\n\n        <AppFooter />\n      </div>\n      <div className=\"layout-mask modal-in\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { getAutenticarUrl, getAutorizarUrl, getRegistrarUrl, getRecuperarPasswordUrl, getChangePasswordUrl, getRegistrarPersonaUrl, updatePassword, recoveryPassword, uploadPhotoUser } from \"../utils/urls\"\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales)\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales)\r\n    }\r\n    register = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRegistrarUrl(), datos)\r\n    }\r\n    registerPersona = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRegistrarPersonaUrl(), datos)\r\n    }\r\n    recoverPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRecuperarPasswordUrl(), datos)\r\n    }\r\n    resetPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRecuperarPasswordUrl(), datos)\r\n    }\r\n    changePassword = (props) => {\r\n        const { navigate, datos } = props\r\n        return AxiosInstance(navigate).post(getChangePasswordUrl(), datos)\r\n    }\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos)\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos)\r\n    }\r\n}","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item label=\"Email\"\r\n                                        name='email'\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email is not valid'\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete your email',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >Recover Password</Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useState } from \"react\"\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result, Alert } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [error, setError] = useState(null)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [passwordChanged, setPasswordChanged] = useState(true)\r\n    const [form] = Form.useForm()\r\n\r\n    const reset = async (values) => {\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setPasswordChanged(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            setOkMsg(<>Password has been successfully changed. <br />Please click <Link to='/login'>here</Link> log in again.</>)\r\n            setPasswordChanged(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n\r\n                {\r\n                    passwordChanged === true && okMsg ?\r\n                        <Result\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Form\r\n                                            layout={'vertical'}\r\n                                            form={form}\r\n                                            onFinish={reset}\r\n                                        >\r\n                                            <Form.Item label=\"New Password\"\r\n                                                name='password'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete new password',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Confirm new password\"\r\n                                                name='passwordConfirm'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Confirme new password',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                            </Form.Item>\r\n                                            <Form.Item>\r\n                                                <PasswordChecklist\r\n                                                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                    minLength={8}\r\n                                                    value={password}\r\n                                                    valueAgain={passwordConfirm}\r\n                                                    messages={{\r\n                                                        minLength: \"Password has more than 8 characters.\",\r\n                                                        specialChar: \"Password has special characters.\",\r\n                                                        number: \"Password has a number.\",\r\n                                                        capital: \"Password has a capital letter.\",\r\n                                                        match: \"Passwords match.\",\r\n                                                    }}\r\n                                                    onChange={(isValid) => { }}\r\n                                                />\r\n                                            </Form.Item>\r\n\r\n                                            {\r\n                                                error &&\r\n                                                <Alert\r\n                                                    message=''\r\n                                                    description={error}\r\n                                                    type='warning'\r\n                                                    showIcon\r\n                                                    closable\r\n                                                    banner\r\n                                                />\r\n                                            }\r\n\r\n                                            {\r\n                                                okMsg &&\r\n                                                <Alert\r\n                                                    message=''\r\n                                                    description={okMsg}\r\n                                                    type='success'\r\n                                                    showIcon\r\n                                                    closable\r\n                                                    banner\r\n                                                />\r\n                                            }\r\n                                            <div style={{\r\n                                                paddingTop: '10px'\r\n                                            }}>\r\n                                                <Form.Item>\r\n                                                    <Button\r\n                                                        type='primary'\r\n                                                        htmlType='submit'\r\n                                                        loading={isLoading}\r\n                                                        disabled={isLoading}\r\n                                                        block>Reset Password</Button>\r\n                                                </Form.Item>\r\n                                            </div>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                                {/* <AlertWait error={error} isLoading={isLoading} /> */}\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n\r\n            </Layout>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nexport default class CatalogoService {\r\n    getTiposIdentificacion = () => this.getCatalogo({ catalogo: { catNombre: \"TIPO IDENTIFICACION\" } })\r\n    getTiposPersona = () => this.getCatalogo({ catalogo: { catNombre: \"TIPO PERSONA\" } })\r\n    getActividadesEconomicas = () => this.getCatalogo({ catalogo: { catNombre: \"ACTIVIDAD ECONOMICA\" } })\r\n    getBancos = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"INSTITUCIONES FINANCIERAS\" } })\r\n    getTiposCuenta = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"TIPOS DE CUENTA\" } })\r\n    getFuentesIngreso = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"FUENTE INGRESO\" } })\r\n    getPaises = () => this.getPorPadre({ catalogo: { catNombre: \"COUNTRIES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catNombre: \"MODALITY\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catNombre: \"COURSES\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catNombre: \"SEX\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catNombre: \"TRAINING STATUS\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catNombre: \"REPORT TYPE\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catNombre: \"STATUS REPORT\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catNombre: \"STATES\" } })\r\n\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n        // return AxiosInstance(navigate).post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, posInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: posInvitadoPor.usuId, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject[0],\r\n                        cursos: results[1].data.listObject[0],\r\n                        modalidades: results[2].data.listObject[0],\r\n                        generos: results[3].data.listObject[0],\r\n                        trainingStatus: results[4].data.listObject[0],\r\n                        reportType: results[5].data.listObject[0],\r\n                        reportStatus: results[6].data.listObject[0],\r\n                        states: results[7].data.listObject[0]\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('Your account has been created successfully. Please log in.')\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label='Upload your profile picture'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >Select Photo</Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Country Code\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Phone Number\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>Are you currently working?</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                Please write the complete name of the institution.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Additional email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const { opciones } = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject[0],\r\n                                cursos: results[1].data.listObject[0],\r\n                                modalidades: results[2].data.listObject[0],\r\n                                generos: results[3].data.listObject[0],\r\n                                trainingStatus: results[4].data.listObject[0],\r\n                                reportType: results[5].data.listObject[0],\r\n                                reportStatus: results[6].data.listObject[0],\r\n                                states: results[7].data.listObject[0]\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        \"El recurso solicitado no esta disponible o no se encuentra\"\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].idPerfil }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        \"El recurso solicitado no esta disponible o no se encuentra\"\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    Welcome back\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    Log in to access your account\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label=\"Log in with your email\"\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter you email',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Enter your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter your password'\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password id=\"password\" name=\"password\" label='Password' />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Log in</Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>Forgot your password?</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react';\nimport { Route, withRouter, useLocation } from 'react-router-dom';\nimport App from './App';\n// import { Error } from './pages/Error';\n// import { NotFound } from './pages/NotFound';\n// import { Access } from './pages/Access';\n// import Register from './pages/Register';\nimport RecuperarPassword from './pages/RecuperarPassword';\nimport ResetPassword from './pages/ResetPassword';\n// import RegisterPYME from './pages/RegisterPersona';\n// import Help from './pages/Help';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n\nexport const ctx = React.createContext()\n\nconst AppWrapper = (props) => {\n\tlet location = useLocation();\n\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0)\n\t}, [location]);\n\n\tconst [colorScheme, setColorScheme] = useState('light')\n\n\tswitch (props.location.pathname) {\n\t\tcase '/login':\n\t\t\treturn <Route path=\"/login\" render={() => <Login colorScheme={colorScheme} />} />\n\t\t// case '/register':\n\t\t// \treturn <Route path=\"/register\" render={() => <Register colorScheme={colorScheme} />} />\n\t\tcase '/signup':\n\t\t\treturn <Route path=\"/signup\" render={() => <Signup colorScheme={colorScheme} />} />\n\t\t// case '/registerpyme':\n\t\t// \treturn <Route path=\"/registerpyme\" render={() => <RegisterPYME colorScheme={colorScheme} />} />\n\t\tcase '/recover':\n\t\t\treturn <Route path=\"/recover\" render={() => <RecuperarPassword colorScheme={colorScheme} />} />\n\t\tcase '/reset':\n\t\t\t\treturn <Route path=\"/reset\" render={() => <ResetPassword colorScheme={colorScheme} />} />\n\t\t// case '/error':\n\t\t// \treturn <Route path=\"/error\" render={() => <Error colorScheme={colorScheme} />} />\n\t\t// case '/notfound':\n\t\t// \treturn <Route path=\"/notfound\" render={() => <NotFound colorScheme={colorScheme} />} />\n\t\t// case '/access':\n\t\t// \treturn <Route path=\"/access\" render={() => <Access colorScheme={colorScheme} />} />\n\t\t// case '/help':\n\t\t// \treturn <Route path=\"/help\" render={() => <Help colorScheme={colorScheme} />} />\n\t\tdefault:\n\t\t\treturn <App setColorScheme={setColorScheme} />;\n\t}\n\n}\n\nexport default withRouter(AppWrapper);","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}