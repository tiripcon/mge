{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","service/InformService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","pages/AlertWait.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","utils/Internationalization.jsx","service/BeneficiaryService.jsx","service/CertificateService.jsx","components/beneficiary/Beneficiary.jsx","components/beneficiary/Beneficiaries.jsx","App.js","service/CuentaService.jsx","service/CatalogoService.jsx","pages/Login.jsx","pages/Signup.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getOpcionesMenu","informs","w","infTipo","catValor","infEstado","opcionesSubOpciones","undefined","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","id","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perNombre","push","gutter","removeItem","AppFooter","display","AppRightPanel","onRightPanelClick","headers","AxiosInstance","navigate","axiosInstance","axios","create","interceptors","request","use","config","token","toast","error","Promise","reject","response","status","apiURL","getCatalogosPorPadreUrl","updateTraining","downloadInformByName","downloadCertificateByName","downloadCertificateByUuid","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","new","put","set","patch","upLoadPhoto","datos","getLessPostulants","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setError","documento","setDocumento","email","setEmail","setNombres","estado","setEstado","columnas","title","dataIndex","render","_","width","responsive","codigotel","celular","record","usuId","fetchData","a","estadoId","data","listObject","messageText","subTitle","extra","span","justify","Title","level","layout","xs","sm","md","lg","xl","Item","onChange","Group","states","s","catId","catNombre","direction","loading","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","fileList","setFileList","onRemove","file","newFileList","slice","splice","beforeUpload","URL","createObjectURL","handleUpload","FormData","append","success","update","values","trabaja","countryCode","sexoId","sexo","paisId","pais","usuarioActualizado","newUsuario","fechanac","moment","$d","align","initialValues","onFinish","xxl","name","imagen","multiple","rules","required","message","fieldNames","showSearch","options","generos","optionFilterProp","placement","paises","p","catDescripcion","srcSet","checked","c","htmlType","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","requests","forEach","all","then","results","catch","msgError","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","onClose","open","form","opcIcono","PerfilService","perfil","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","defaultChecked","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","guardar","perfilActualizado","eliminar","tableProps","statistics","hoverable","background","color","precision","prefix","suffix","description","Dashboard","users","setUsers","valueStyle","renderStatistics","tip","Paragraph","TrainingService","getByTraining","trainer","getById","training","pub","trainingService","UserInfo","trainings","setTrainings","fetchTrainings","idUsuario","centered","letterSpacing","strong","readOnly","t","entEstado","entFechaFin","entFechaIni","entId","entNombre","entModalidad","entPais","numPostulantes","marginBottom","reverse","renderTraining","showIcon","borderRadius","border","UsuarioNew","password","setPassword","passwordConfirm","setPasswordConfirm","validForm","setValidForm","insert","md5","fetchProfiles","Password","minLength","valueAgain","messages","specialChar","number","capital","match","isValid","User","user","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","state","setState","courses","setCourses","paddingBottom","cursoList","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CourseService","course","baseTraining","entCultura","postulantService","courseService","Course","formPostulante","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","startDate","setStartDate","endDate","setEndDate","removePostulant","newPostulantsList","save","idEstado","trainingStatus","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","mode","cursos","option","resetFields","posEmail","closeIcon","Applicants","setCourse","applicants","setApplicants","postulanteList","posEstado","criteria","searchCriteria","ciudad","filteredCourse","asistenciaList","asiValor","informeList","curNombre","substr","idCurso","curId","certificadoList","tc","cerEstado","posId","AttendanceService","attendance","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","attendanceService","informService","panelStyle","backgroundColor","Applicant","idTraining","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","isDownloading","setIsDownloading","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","downloadInform","column","eviUrl","TextArea","setInform","reportStatus","danger","renderInform","downloadCertificate","cerUuid","cerNombre","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","stringify","xhr","blob","Blob","saveAs","setAttendance","sendRateEmail","informe","idEntrenamiento","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","cerFechaCad","cerId","cerFechaReg","cerRuta","renderCertificate","WorkPlan","setPostulant","uploading","setUploading","sending","setSending","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","reportType","setItem","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","idInforme","sendFinalReport","informInserted","newInform","downloadFinalReportTemplate","beneficiarioList","entLimBen","f","Certificate","Classes","AlertWait","Training","loadCourse","setLoadCourse","loadPostulant","setLoadPostulant","isLoadingCourse","setIsLoadingCourse","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","newCourse","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","modTraining","envios","reduce","promise","fn","resolve","itemLayout","grid","renderItem","idNombreCurso","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","labels","contents","culture","getLabel","l","cultura","BeneficiaryService","beneficiary","getByPostulant","val","CertificateService","generate","send","certificate","downloadByUuid","renderPaisValor","Beneficiary","saveBeneficiary","closeBeneficiary","formBeneficiary","editDisabled","valuePropName","educationLevels","beneficiaryService","certificateService","Typography","confirm","Modal","Beneficiaries","operation","isOpening","setIsOpening","isLoadingBeneficiaries","setIsLoadingBeneficiaries","beneficiaryC1","setBeneficiaryC1","beneficiaryC2","setBeneficiaryC2","openC1","setOpenC1","openC2","setOpenC2","benId","selectedBeneficiary","setSelectedBeneficiary","openDeleteBeneficiary","setOpenDeleteBeneficiary","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","closeBeneficiaryC1","getBeneficiaryC1","idTipo","benTipo","idPais","benPais","idSexo","benSexo","idNivelInt","benNivelInt","saveBeneficiaryC1","newBeneficiary","time","closeBeneficiaryC2","getBeneficiaryC2","saveBeneficiaryC2","confirmDeleteBeneficiary","delBeneficiary","validateBeneficiary","sendCertificate","idPostulante","sendBeneficiaries","onOk","b","benTrabaja","typePersons","catReferencia","benDocumento","benNombres","benCargo","benNomEmpresa","benNumPer","benValidado","typeLoad","Collapse","confirmLoading","onCancel","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","location","useLocation","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","validateResetPassword","recoveryPassword","updatePassword","CatalogoService","getPaises","getPorPadre","catalogo","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","getEducationLevel","getTypePerson","getCatalogo","cuentaService","catalogoService","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","opcionesVisible","mgeCatalogos","statusText","textTransform","actions","renderPerfil","backgroundImage","renderError","messageCode","Signup","search","decodeURIComponent","uuid","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","invitadopor","fetchCatalogos","registrar","RecuperarPassword","okMsg","setOkMsg","emailSent","setEmailSent","recuperar","banner","ResetPassword","setValidate","isValidating","setIsValidating","setIsValid","isResetting","setIsResetting","isReset","setIsReset","reset","validateRequest","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d82623f3.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\n      </div>\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nexport const toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nconst getInforms = () => localStorage.getItem('mgeInformList') ? JSON.parse(localStorage.getItem('mgeInformList')) : []\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const informs = getInforms()\r\n    let opciones = getDatosUsuario().opciones || []\r\n    //  Si existe informes se muestran las opciones de beneficiarios para registro y calificación.\r\n    if (informs.length > 1) {\r\n        // Si existe un WP aprobado y no existe un reporte final aprobado se habilita el registro de beneficiarios.\r\n        if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/registry') >= 0 ? { ...o, visible: true } : { ...o }))\r\n        else if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/qualification') >= 0 ? { ...o, visible: true } : { ...o }))\r\n    }\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined && o.visible === true)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport AppMenu from \"./AppMenu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Typography } from \"antd\";\nimport { getDatosUsuario } from \"./utils/Utils\";\n\nconst AppTopbar = (props) => {\n  const history = useHistory();\n  const searchPanelDesktop = useRef(null);\n  const searchPanelMobile = useRef(null);\n\n  useEffect(() => {\n    if (props.searchActive) {\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\n      else searchPanelMobile.current.focus();\n    }\n  }, [props.searchActive]);\n\n  const datosUsuario = (e) => {\n    history.push(\"/myaccount\");\n  };\n\n  const cerrarSesion = (e) => {\n    localStorage.removeItem(\"mgeToken\");\n    localStorage.removeItem(\"mgeDatosUsuario\");\n    localStorage.removeItem(\"mgeInformList\");\n    history.push(\"/login\");\n  };\n\n  const logo = {\n    fontSize: \"1.5em\",\n    padding: 0,\n    margin: 0,\n  };\n\n  return (\n    <div className=\"layout-topbar\">\n      <div className=\"layout-topbar-wrapper\">\n        <div className=\"layout-topbar-left\">\n          <button\n            tabIndex=\"0\"\n            className=\"menu-button p-link\"\n            onClick={props.onMenuButtonClick}\n          >\n            <i className=\"pi pi-bars\"></i>\n          </button>\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n              MG\n            </span>\n            <span className=\"mge mge-bold mge-green\" style={logo}>\n              E\n            </span>\n          </div>\n        </div>\n\n        <AppMenu\n          menuMode={props.menuMode}\n          sidebarActive={props.sidebarActive}\n          sidebarStatic={props.sidebarStatic}\n          model={props.menu}\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          onMobileMenuActive={props.onMobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          onSidebarMouseOver={props.onSidebarMouseOver}\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\n          onToggleMenu={props.onToggleMenu}\n          resetActiveIndex={props.resetActiveIndex}\n          onMenuClick={props.onMenuClick}\n        />\n\n        <div className=\"layout-topbar-right\">\n          <ul className=\"layout-topbar-actions\">\n            <li\n              className={classNames(\"topbar-item user-profile\", {\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\n              })}\n            >\n              <button\n                className=\"p-link\"\n                style={{ cursor: \"pointer\" }}\n                onClick={props.onTopbarUserMenuClick}\n              >\n                {getDatosUsuario() && (\n                  <Row>\n                    <Col\n                      style={{\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        textAlign: \"right\",\n                        lineHeight: \"1em\",\n                      }}\n                    >\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\n                        {`${getDatosUsuario().nombres || \"\"} ${\n                          getDatosUsuario().apellidos || \"\"\n                        }`}\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\n                          <>\n                            <br />\n                            <Typography.Text\n                              type=\"secondary\"\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\n                            >\n                              {`${getDatosUsuario().perfiles[0].perNombre}`}\n                            </Typography.Text>\n                          </>\n                        )}\n                      </Typography.Text>\n                    </Col>\n                    <Col>\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\n                    </Col>\n                  </Row>\n                )}\n              </button>\n              <ul className=\"fadeInDown\">\n                <li onClick={datosUsuario}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-user-gear\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Profile</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                <li onClick={cerrarSesion}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-right-from-bracket\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Sign off</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppTopbar;\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from 'react';\n\nconst AppRightPanel = (props) => {\n\n\treturn (\n\t\t<div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n\t\t\t<div className=\"rightpanel-wrapper\" >\n\t\t\t\t<div className=\"rightpanel-section weather-section\">\n\t\t\t\t\t<div className=\"section-header\">\n\t\t\t\t\t\t<h6>Today</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"weather\">\n\t\t\t\t\t\t<img src=\"assets/demo/images/rightpanel/icon-sun.svg\" alt=\"freya-layout\" />\n\t\t\t\t\t\t<div className=\"weather-info\">\n\t\t\t\t\t\t\t<h6>Ankara, 22 May</h6>\n\t\t\t\t\t\t\t<h1>24º</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppRightPanel;","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst headers = {\r\n    \"Accept-Language\": 'en_US'\r\n}\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                localStorage.removeItem('mgeInformList')\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    localStorage.removeItem('mgeInformList')\r\n                    toast.error('The session has expired. Please log in again.')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","// SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY EN ARCHIVO package.json\r\n// \"proxy\": \"http://20.65.110.204:44613\", // DESARROLLO\r\n\r\n// SOLO PARA DESARROLLO Y PRUEBAS\r\n// const apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA QA\r\nconst apiURL = 'http://qa.mygreenenterprise.org:8082/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA PRODUCCION\r\n// const apiURL = 'https://mygreenenterprise.org/uprime-mge-web/uprime/api'\r\n\r\n//SERVICIOS MGE\r\n\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/insertCatalog`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogServiceRest/getCatalogByFilter`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/updateCatalog`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/deleteCatalog`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogServiceRest/getCatalogById`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsListByFather`\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsList`\r\n\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OptionServiceRest/insertOption`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OptionServiceRest/deleteOption`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OptionServiceRest/updateOption`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OptionServiceRest/getOptionsListByFather`\r\nexport const getOpcionesUrl = () => `${apiURL}/OptionServiceRest/getOptionsList`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OptionServiceRest/getOptionById`\r\n\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/ProfileServiceRest/insertProfile`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/ProfileServiceRest/updateProfile`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/ProfileServiceRest/deleteProfile`\r\nexport const getPerfilesUrl = () => `${apiURL}/ProfileServiceRest/getProfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/ProfileServiceRest/getProfileById`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/ProfileOptionServiceRest/getOptionsByProfileList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/insertProfileOption`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOptionServiceRest/updateProfileOption`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/deleteProfileOption`\r\n\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UserServiceRest/getUsersListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UserServiceRest/getUserById`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UserServiceRest/getUsersLessPostulants`\r\nexport const getAutenticarUrl = () => `${apiURL}/UserServiceRest/authenticateUser`\r\nexport const getAutorizarUrl = () => `${apiURL}/UserServiceRest/authorizeUser`\r\nexport const updatePassword = () => `${apiURL}/UserServiceRest/updatePassword`\r\nexport const recoveryPassword = () => `${apiURL}/UserServiceRest/recoveryPassword`\r\nexport const validateUserUuid = () => `${apiURL}/UserServiceRest/validateUserUuid`\r\nexport const addProfileUser = () => `${apiURL}/UserServiceRest/addProfileUser`\r\nexport const insertUsuario = () => `${apiURL}/UserServiceRest/insertUser`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UserServiceRest/updateUser`\r\nexport const enrollUsuario = () => `${apiURL}/UserServiceRest/enrollPostulant`\r\nexport const deletePerfilUsuario = () => `${apiURL}/UserServiceRest/deletePerfilUsuario`\r\nexport const getUsuariosUrl = () => `${apiURL}/UserServiceRest/getUsersList`\r\nexport const uploadPhotoUser = () => `${apiURL}/UserServiceRest/uploadPhotoUser`\r\n\r\nexport const insertTraining = () => `${apiURL}/TrainingServiceRest/insertTraining`\r\nexport const updateTraining = () => `${apiURL}/TrainingServiceRest/updateTraining`\r\nexport const getTrainingById = () => `${apiURL}/TrainingServiceRest/getTrainingById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/TrainingServiceRest/getTrainingByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/TrainingServiceRest/getTrainingList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulantServiceRest/insertPostulant`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulantServiceRest/sendEmailRegistry`\r\nexport const sendEmailEnroll = () => `${apiURL}/PostulantServiceRest/sendEmailEnroll`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulantServiceRest/getPostulantByTraining`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulantServiceRest/getTrainingByPostulant`\r\nexport const deletePostulant = () => `${apiURL}/PostulantServiceRest/deletePostulant`\r\nexport const validatePostulant = () => `${apiURL}/PostulantServiceRest/validatePostulant`\r\n\r\nexport const insertCourse = () => `${apiURL}/CourseServiceRest/insertCourse`\r\nexport const getCourseByTraining = () => `${apiURL}/CourseServiceRest/getCoursesByTraining`\r\nexport const deleteCourse = () => `${apiURL}/CourseServiceRest/deleteCourse`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AssistanceServiceRest/insertAssistance`\r\nexport const getAttendanceById = () => `${apiURL}/AssistanceServiceRest/getAssistanceById`\r\nexport const updateAttendance = () => `${apiURL}/AssistanceServiceRest/updateAssistance`\r\n\r\nexport const insertInform = () => `${apiURL}/ReportServiceRest/insertReport`\r\nexport const updateInform = () => `${apiURL}/ReportServiceRest/updateReport`\r\nexport const getInformById = () => `${apiURL}/ReportServiceRest/getReportById`\r\nexport const downloadInformByName = () => `${apiURL}/ReportServiceRest/downloadReportByName`\r\nexport const downloadWorkplan = () => `${apiURL}/ReportServiceRest/downloadWorkPlan`\r\nexport const downloadFinalReport = () => `${apiURL}/ReportServiceRest/downloadFinalReport`\r\nexport const sendEmailLoadInform = () => `${apiURL}/ReportServiceRest/sendEmailLoadReport`\r\nexport const sendEmailRateInform = () => `${apiURL}/ReportServiceRest/sendEmailRateReport`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenceServiceRest/insertEvidence`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificateServiceRest/generateCertificate`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificateServiceRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificateServiceRest/downloadCertificateByName`\r\nexport const downloadCertificateByUuid = () => `${apiURL}/CertificateServiceRest/downloadCertificateByUuid`\r\n\r\nexport const insertBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/insertBeneficiary`\r\nexport const updateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/updateBeneficiary`\r\nexport const getBeneficiaryById = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiaryById`\r\nexport const getBeneficiariesByPostulant = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiariesByPostulant`\r\nexport const deleteBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/deleteBeneficiary`\r\nexport const validateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/validateBeneficiary`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, uploadPhotoUser } from \"./../utils/urls\"\r\nconst config = { headers: { \"Accept-Language\": 'en_US' } }\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos, config)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'usuId',\r\n      render: (_) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'nombres',\r\n      render: (_, r) => `${r.nombres} ${r.apellidos}`\r\n    },\r\n    {\r\n      title: 'ID Number',\r\n      dataIndex: 'documento'\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      render: (_, record) => <Button type='primary' href={`/#/users/${record.usuId}`}>View</Button>\r\n    }\r\n  ]\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    setUsuarios([])\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Users Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"ID Number\">\r\n              <Input label='ID Number' type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Name\">\r\n              <Input label='Name' type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Email\">\r\n              <Input label='Email' type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"State\">\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n                {/* <Radio value={true}>Activo</Radio>\r\n                <Radio value={false}>Inactivo</Radio> */}\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>New User</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>Refresh</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('User updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('User updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            User\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >Cancel</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving}>Save</Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport OpcionService from './../../service/OpcionService'\r\n\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1).map(o => (\r\n              {\r\n                title: o.opcNombre,\r\n                key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`,\r\n                children: o.opcHijos ? o.opcHijos.map(o => (\r\n                  {\r\n                    title: o.opcNombre,\r\n                    key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`\r\n                  }\r\n                )) : []\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport PerfilService from '../../service/PerfilService'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Level',\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'State',\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? 'ACTIVE' : 'INACTIVE'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject.map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success('Profile saved successfully')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`An error ocurred: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Profile deleted successfully')\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Profiles Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                New Profile\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"Are you sure you want to delete the selected profiles?\" okText=\"Yes, deleter\" cancelText=\"No\" onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? 'Deleting' : 'Delete'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>Refresh</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Name\">\r\n                <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Level\">\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"State\">\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? 'Active' : 'Inactive'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? 'Saving' : 'Save'}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`Option ${perfilOpcionActualizado.pfoOpcId.opcNombre} updated successfully`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1)\r\n              .map(o => (\r\n                {\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n                }\r\n              ))\r\n            // .map(o => (\r\n            //   {\r\n            //     key: `${o.opcId}`,\r\n            //     opcNombre: o.opcNombre,\r\n            //     ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n            //     children: o.opcHijos.map(o => ({\r\n            //       key: `${o.opcId}`,\r\n            //       opcNombre: o.opcNombre,\r\n            //       ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0]\r\n            //     }))\r\n            //   }\r\n            // ))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoadingOpciones(false)\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success('Profile saved successfully')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Profile deleted')\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Profile {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Name\">\r\n                  <Input id=\"perNombre\" name=\"perNombre\" label='Name' type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Level\">\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"State\">\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? 'ACTIVE' : 'INACTIVE'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>Options</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? 'Saving' : 'Save'}\r\n                    </Button>\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Form, Spin, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst columnas = [\r\n    {\r\n        title: '',\r\n        render: (e) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'nombres',\r\n        render: (_, r) => `${r.nombres}`\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'apellidos',\r\n        render: (_, r) => `${r.apellidos}`\r\n    },\r\n    {\r\n        title: 'Country',\r\n        dataIndex: 'pais',\r\n        render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n            <Tooltip title={pais.catDescripcion}>\r\n                <img\r\n                    src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={pais.catDescripcion}></img>\r\n            </Tooltip>\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: <div style={{ textAlign: 'center' }}>Role</div>,\r\n        dataIndex: 'role',\r\n        render: (_, { perfiles }) => <div style={{ textAlign: 'center' }}>\r\n            {perfiles[0].perNombre}\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>View</Button>\r\n    }\r\n]\r\n\r\nconst statistics = [\r\n    {\r\n        id: 1,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#54873C',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER OF TRAINERS</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 2,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#70B450',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 3,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#385A28',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>APPLICANTS</Typography.Text>,\r\n            value: 80,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 4,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#636466',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>BENEFICIARIES</Typography.Text>,\r\n            value: 150,\r\n            precision: 0,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: ''\r\n        },\r\n        description: <>&nbsp;</>\r\n    }\r\n]\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n\r\n    const renderStatistics = ({ id, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}\r\n        >\r\n            <Card\r\n                {...props}\r\n            >\r\n                <Statistic\r\n                    {...data}\r\n                    valueStyle={{\r\n                        color: '#ffffff',\r\n                    }}\r\n                />\r\n                {description}\r\n            </Card>\r\n        </Col>\r\n\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject\r\n                setUsers(usuarios)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[15, 15]}>\r\n                {\r\n                    statistics && statistics.map(s => renderStatistics(s))\r\n                }\r\n            </Row>\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Table\r\n                                {...tableProps}\r\n                                rowKey='usuId'\r\n                                columns={columnas}\r\n                                dataSource={users}>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Badge, Card, Alert } from 'antd'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entModalidad, entNombre, entPais, numPostulantes }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>Regresar al inicio</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            usuario.perfiles && usuario.perfiles[0].perNombre\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Trainings</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description=\"Trainings not found.\"\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n            {/* <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/dashboard'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        Gestión de Usuario\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider> */}\r\n            {/* {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Espere un momento...</Typography.Text>\r\n                    </div> :\r\n                    <Form\r\n                        layout={'vertical'}\r\n                        form={form}\r\n                        initialValues={{\r\n                            layout: 'vertical',\r\n                        }}\r\n                    >\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Identificación\">\r\n                                    <Input id=\"documento\" name=\"documento\" label='Identificación' type='text' value={usuario.documento} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Tipo de Identificación\">\r\n                                    <Select defaultValue={usuario.tipoDocumento} value={usuario.tipoDocumento} onChange={onChangeTipoIdentificacion}>\r\n                                        {\r\n                                            tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Nombres\">\r\n                                    <Input id=\"nombres\" name=\"nombres\" label='Nombres' type='text' value={usuario.nombres} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Apellidos\">\r\n                                    <Input id=\"apellidos\" name=\"apellidos\" label='Apellidos' type='text' value={usuario.apellidos} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                                <Form.Item label=\"Dirección\">\r\n                                    <Input id=\"direccion\" name=\"direccion\" label='Dirección' type='text' value={usuario.direccion} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Email\">\r\n                                    <Input id=\"email\" name=\"email\" label='Email' type='text' value={usuario.email} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Teléfono\">\r\n                                    <Input id=\"telefono\" name=\"telefono\" label='Teléfono' type='text' value={usuario.telefono} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Login\">\r\n                                    <Input id=\"login\" name=\"login\" label='Login' type='text' value={usuario.login} onChange={onChange} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Contraseña\">\r\n                                    <Input.Password id=\"password\" name=\"password\" label='Contraseña' value={usuario.password} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Estado\">\r\n                                    <Select\r\n                                        defaultValue={usuario.estado.catValor}\r\n                                        value={usuario.estado.catValor}\r\n                                        onChange={onChangeEstado}\r\n                                    >\r\n                                        {\r\n                                            estados && estados.map(e => renderEstado(e))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" onClick={(e) => guardar(e)} disabled={isSaving}\r\n                                loading={isSaving}\r\n                            >\r\n                                {isSaving ? 'Guardando...' : 'Guardar'}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsSaving(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0) {\r\n                handleUpload(usuarioActualizado)\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(\"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setError(\"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>Return to home</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        New User\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Please wait...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='Upload your profile picture'\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >Select Photo</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label=\"First Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete first Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label=\"Last Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete last Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label='Sex'\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select sex',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label=\"Date of birth\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select date of birth',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>ID Number</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                This is the unique identification number issued by the country of residence.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete ID Number',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label=\"Country\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label=\"City\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete city',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Country Code\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country code',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Phone Number\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete phone number',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>Are you currently working?</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                Please write the complete name of the institution.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label=\"Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label=\"Additional Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete additional email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Additional email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Create your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Create your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Confirm your password\"\r\n                                            name='passwordConfirm'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Confirm your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                    specialChar: \"Password has special characters.\",\r\n                                                    number: \"Password has a number.\",\r\n                                                    capital: \"Password has a capital letter.\",\r\n                                                    match: \"Passwords match.\",\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label='Profile'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select profile',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label='State'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select state',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >Cancel</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving}>Save</Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      toast.error(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        toast.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  My Account\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => { formUser.submit() }}>Save</Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={currentlyWorking}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card, Checkbox } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [state, setState] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado, cursoList }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Space direction='horizontal'>\r\n                                <Typography.Text type='secondary'>\r\n                                    {cursoList.length} courses\r\n                                </Typography.Text>\r\n                                <Typography.Text type='secondary'>\r\n                                    {numPostulantes} applicants\r\n                                </Typography.Text>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                View\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        let trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        if (state) {\r\n            trainer = { ...trainer, estado: !state }\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mgeCard\" style={{\r\n                paddingTop: '15px',\r\n                paddingBottom: '15px'\r\n            }}>\r\n                <Row>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    >\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                            Trainings\r\n                        </h3>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                        style={{\r\n                            textAlign: 'right'\r\n                        }}\r\n                    >\r\n                        <Space>\r\n                            <Button\r\n                                type='default'\r\n                                loading={isLoading}\r\n                                disabled={isLoading}\r\n                                style={{ width: '120px' }}\r\n                                onClick={() => {\r\n                                    fetchData()\r\n                                }}>Refresh</Button>\r\n                            <Button\r\n                                type='primary'\r\n                                disabled={isLoading}\r\n                                style={{ width: '120px' }}\r\n                                onClick={() => {\r\n                                    navigate.push('/trainingnew')\r\n                                }}>New Training</Button>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'end', paddingTop: '10px', paddingBottom: '10px' }}>\r\n                    <Checkbox checked={state} onChange={(e) => setState(e.target.checked)}>Inactive only</Checkbox>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\"\r\nconst config = { headers: { \"Accept-Language\": 'en_US' } }\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, Alert, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst baseTraining = {\r\n  entCultura: 'en_US'\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `Then email ${postulant} already exists.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${postulant} successfully added.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${email} successfully removed.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      ...values,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar cursos\r\n        const requests = []\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`It was not possible to add the applicant: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(\"An error occurred.\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      New Training\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >Save Draft</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                      onClick={() => {\r\n                        toast.success('Training published')\r\n                      }}\r\n                    >Publish</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24} style={{ display: 'none' }}>\r\n                <Form.Item\r\n                  name='entCultura'\r\n                  label=\"Culture\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select Culture',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label=\"Country\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select country',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select name='idPais'>\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {/* <Col span={16}>\r\n                <Form.Item\r\n                  name='name'\r\n                  label=\"Training name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete training name',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col> */}\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label=\"Modality\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select modality',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label=\"Start Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select start date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label=\"End Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select end date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='entLimBen'\r\n                  label=\"Number of beneficiaries\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Number of beneficiaries',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row >\r\n            <Form layout='vertical' style={{ width: '100%' }}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label='Courses'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select courses',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Form>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label='Applicants emails'\r\n                  extra='Press enter to add email'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete applicants',\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: 'Email is not valid'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList.filter(a => a.posEstado.catValor === 'EST_ENR'))\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.filter(p => p.posEstado.catValor === 'EST_ENR')}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadInformByName, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Descriptions, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              Download\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n          }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              Comments:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'TYP_INF_WPL' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, approve\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending\r\n                  }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >Approve</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, reject\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >Reject</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Certificate&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Expires: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n              >Download</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByUuid(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": 'en_US',\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({ cerUuid }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      if (data) toast.success('Attendance successfully saved')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      if (data) toast.success('Email sent successfully')\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'TYP_INF_WPL' ? commentWorkplan : catValor === 'TYP_INF_FIR' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = {\r\n      idEntrenamiento: idTraining,\r\n      posId: id\r\n    }\r\n    try {\r\n      const { data } = await postulantService.getByTraining({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].entId.cursoList\r\n        const postulant = data.listObject[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error('An error occurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Role:\r\n                            </Typography.Text>\r\n                            <br />Applicant\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Invited by:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label=\"First Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label=\"Last Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label=\"Sex\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label=\"Date Birth\"\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label=\"Country\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label=\"City\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label=\"Country Code\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label=\"Phone number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label=\"ID Number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label=\"Currenty Working\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label=\"Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label=\"Additional Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Attendance\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >Save</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const fileName = 'WorkplanTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            loading={uploading || sending}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : sending ? 'Sending' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_WPL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Workplan template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Collapse, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n        const fileName = 'FinalReportTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>\r\n                                            Copy evidence link\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label='URL'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            loading={uploading || isLoading || sending}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : isLoading ? 'Saving' : sending ? 'Sending' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ idInforme }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId: idInforme }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Evidence sended successfully')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_FIR')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Final Report template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                postulant && postulant.beneficiarioList && postulant.beneficiarioList.length >= postulant.entId.entLimBen ?\r\n                                    <Collapse\r\n                                        accordion\r\n                                        bordered={false}\r\n                                        expandIconPosition='end'\r\n                                        style={{\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                        }\r\n                                    </Collapse>\r\n                                    :\r\n                                    <Result\r\n                                        title={`There must be at least ${postulant.entId && postulant.entId.entLimBen} registered beneficiaries to upload your final report.`}\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/beneficiaries/registry')\r\n                                                }}\r\n                                            >\r\n                                                Register Beneficiaries\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Result } from 'antd'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": 'en_US',\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0\r\n                                &&\r\n                                postulant.certificadoList.length > 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <Result\r\n                                    title=\"You will see your certificate once your final report is approved and you submit your beneficiary list.\"\r\n                                    extra={\r\n                                        <Button type=\"primary\" key=\"console\"\r\n                                            onClick={\r\n                                                () => {\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                        navigate.push('/finalreport') : navigate.push('/beneficiaries/qualification')\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                    'Send Final Report' : 'Send list of beneficiaries'\r\n                                            }\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography } from 'antd'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Classes = () => {\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        try {\r\n            const { data } = await postulantService.getTraining({ navigate, postulant: { idUsuario: getDatosUsuario().usuarioId } })\r\n            const postulant = data.listObject[0]\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(postulant.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Trainings\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin, Typography } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading, message } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col style={{ textAlign: 'center' }}>\r\n                                <Spin size='large'></Spin>\r\n                                {\r\n                                    message && <Typography.Paragraph>\r\n                                        {message}\r\n                                    </Typography.Paragraph>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    message: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, List, Card, Checkbox, Image, Alert, Tooltip, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\nconst { Option } = Select\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadCourse, setLoadCourse] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' ?\r\n                            <>\r\n                                <Tooltip title='Click to send invitation email'>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `Then email ${posEmail} already exists.`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${posEmail} successfully saved.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${postulant.posEmail} successfully deleted.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setTraining({\r\n                    ...training,\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setLoadCourse(false)\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject[0].postulanteList\r\n                setPostulants(postulants)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        const training = {\r\n            entId: values.entId,\r\n            entCultura: values.entCultura,\r\n            entFechaFin: values.entFechaFin\r\n        }\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await trainingService.set({ navigate, training })\r\n            if (data) {\r\n                toast.success(`Training ${data.listObject[0].entNombre} updated successfully`)\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error('Could not send email', { position: 'bottom-center' })\r\n            else\r\n                toast.success('Email sent successfully', { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\", { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (courses.length < 1 || postulants.length < 1) {\r\n            toast.error('Add at least one course and one applicant')\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            entCultura: training.entCultura,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error('Could not send email')\r\n                                    else\r\n                                        toast.success('Email sent successfully')\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\")\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadCourse) {\r\n            fetchCourses()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving || isPublishing || isSendingEmail}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        Edit Training\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >Save Draft</Button>\r\n                                                    <Popconfirm title=\"Are you sure to publish the training?\" okText=\"Yes, publish\" cancelText=\"No\" onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >Publish</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col span={24} style={{ display: 'none' }}>\r\n                                    <Form.Item\r\n                                        name='entId'\r\n                                        label=\"Id Training\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete ID',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name='entCultura'\r\n                                        label=\"Culture\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Select Culture',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                            <Form.Item\r\n                                                name={['entPais', 'catId']}\r\n                                                label=\"Country\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select country',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select>\r\n                                                    {\r\n                                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                    }\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label=\"Trainig name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete trainig name',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label=\"Modality\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select modality',\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'\r\n                                                >\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label=\"Start Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select start date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label=\"End Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select end date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entLimBen'\r\n                                                label=\"Number of beneficiaries\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Number of beneficiaries',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <InputNumber style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Typography.Paragraph>\r\n                                    <Typography.Text type='danger'>*</Typography.Text>&nbsp;Courses\r\n                                </Typography.Paragraph>\r\n                                {\r\n                                    training.entEstado.catValor === 'ACTIVE' ?\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={training.cursoList}\r\n                                            renderItem={({ curNombre }) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            checked\r\n                                                        >\r\n                                                            {curNombre.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                        :\r\n                                        getCatalogos().cursos &&\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={getCatalogos().cursos}\r\n                                            renderItem={(item) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            disabled={isSaving || isLoadingCourse}\r\n                                                            checked={\r\n                                                                courses.filter(c => c.curNombre.catId === item.catId).length > 0\r\n                                                            }\r\n                                                            onChange={(e) => {\r\n                                                                setCourse({\r\n                                                                    checked: e.target.checked,\r\n                                                                    idNombreCurso: item.catId,\r\n                                                                    curId: courses.filter(c => c.curNombre.catId === item.catId).length > 0 ? courses.filter(c => c.curNombre.catId === item.catId)[0].curId : 0\r\n                                                                })\r\n                                                            }}>\r\n                                                            {item.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                }\r\n                            </Col>\r\n                        </Row >\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={(isLoadingCourse || isSaving || isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label='Applicants emails'\r\n                                                extra='Press enter to add email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete applicants',\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row >\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/trainingapplicant/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nconst trainingService = new TrainingService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n                            }\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = {\r\n            entId: idTraining\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject[0].cursoList\r\n                const postulant = data.listObject[0].postulanteList.filter(p => p.posId === parseInt(id))[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error('An error occurred')\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />Applicant\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Invited by:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            Attendance\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import { getDatosUsuario } from \"./Utils\"\r\nconst getCulture = () => getDatosUsuario().cultura || 'en_US'\r\nexport const labels = {\r\n    ok: 'ok',\r\n    save: 'save',\r\n    accept: 'accept',\r\n    yes: 'yes',\r\n    no: 'no',\r\n    cancel: 'cancel',\r\n    minimumBeneficiaries: 'minimumBeneficiaries',\r\n    beneficiaryTitle: 'beneficiaryTitle',\r\n    beneficiariesTitle: 'beneficiariesTitle',\r\n    deleteBeneficiaryTitle: 'deleteBeneficiaryTitle',\r\n    reConfirmDeleteBeneficiary: 'reConfirmDeleteBeneficiary',\r\n    sendBeneficiaryListTitle: 'sendBeneficiaryListTitle',\r\n    sendBeneficiaryListConfirm: 'sendBeneficiaryListConfirm'\r\n}\r\nconst contents = [\r\n    {\r\n        id: 'ok',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'OK'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'OK'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'save',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Save'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Guardar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'accept',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Accept'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Aceptar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'yes',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Yes'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Si'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'no',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'No'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'No'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'cancel',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Cancel'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Cancelar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'minimumBeneficiaries',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Minimum Beneficiaries'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Mínimo de Beneficiaries'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'beneficiaryTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Beneficiary'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Beneficiario'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'beneficiariesTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Beneficiaries'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Beneficiaries'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'deleteBeneficiaryTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Delete Beneficiary'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Eliminar Beneficiario'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'reConfirmDeleteBeneficiary',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'If you do not meet the minimum number of registered beneficiaries, your final report will be disabled. Continue anyway?'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Si no cumple con el mínimo de beneficiarios registrados se deshabilitara su reporte final. ¿Continuar de todos modos?'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sendBeneficiaryListTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Send Beneciary List'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Enviar Lista de Beneciarios'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sendBeneficiaryListConfirm',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Check beneficiary qualification/participation. Once sent, further editing will not be allowed and the certificate will be generated. Are you sure you want to send the list of beneficiaries?'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Verifique la calificación/participación de los beneficiarios. Una vez enviado, no se permitirán más ediciones y se generará el certificado. ¿Estás seguro de que quieres enviar la lista de beneficiarios?'\r\n            }\r\n        ]\r\n    }\r\n]\r\nexport const getLabel = (id) => contents.filter(c => c.id === id)[0].labels.filter(l => l.culture === getCulture())[0].label\r\n","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { deleteBeneficiary, getBeneficiariesByPostulant, getBeneficiaryById, insertBeneficiary, updateBeneficiary, validateBeneficiary } from '../utils/urls'\r\nexport class BeneficiaryService {\r\n    put = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).put(insertBeneficiary(), beneficiary)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(updateBeneficiary(), beneficiary)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiaryById(), beneficiary)\r\n    }\r\n    getByPostulant = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiariesByPostulant(), beneficiary)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(deleteBeneficiary(), beneficiary)\r\n    }\r\n    val = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(validateBeneficiary(), beneficiary)\r\n    }\r\n}\r\n\r\nexport default BeneficiaryService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, downloadCertificateByUuid, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n    downloadByUuid = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByUuid(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React from 'react'\r\nimport { Col, Row, Space, Button, Form, Select, InputNumber, Input, Switch } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            alt={e.catNombre}\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.substr(0, 2).toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n        ></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst Beneficiary = ({ type, beneficiary, saveBeneficiary, isSaving, closeBeneficiary }) => {\r\n    const [formBeneficiary] = Form.useForm()\r\n\r\n    if (type === 1)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete de ID Number'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Country'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete City'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Sex'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name='benTrabaja'\r\n                                label='Are you currently working?'\r\n                                valuePropName='checked'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idNivelInt']}\r\n                                label='Level Instruction'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Level Instruction'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().educationLevels}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? 'Saving' : 'Save'\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n    if (type === 2)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete ID Number'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Country'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete City'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Sex'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benIdEmpresa']}\r\n                                label='Company ID'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Company ID'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNomEmpresa']}\r\n                                label='Company Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Company Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCargo']}\r\n                                label='Job Title'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Job Title'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNumPer']}\r\n                                label='Total Collaborators'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Total Collaborators'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Row gutter={[10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benHombres']}\r\n                                        label='Men'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Number of men'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benMujeres']}\r\n                                        label='Women'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Number of women'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? 'Saving' : 'Save'\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default Beneficiary","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Col, Row, Space, Button, Table, Image, Drawer, Typography, Collapse, Popconfirm, Switch, Result, Modal } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport { getCatalogos, getDatosUsuario, toCapitalize } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport BeneficiaryService from './../../service/BeneficiaryService'\r\nimport CertificateService from '../../service/CertificateService'\r\nimport Beneficiary from './Beneficiary'\r\n\r\nconst postulantService = new PostulantService()\r\nconst beneficiaryService = new BeneficiaryService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst { Title, Paragraph, Text } = Typography\r\nconst { confirm } = Modal\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst Beneficiaries = () => {\r\n    const navigate = useHistory()\r\n    const { operation } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isOpening, setIsOpening] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingBeneficiaries, setIsLoadingBeneficiaries] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n    const [postulant, setPostulant] = useState({})\r\n    const [beneficiaryC1, setBeneficiaryC1] = useState(null)\r\n    const [beneficiaryC2, setBeneficiaryC2] = useState(null)\r\n    const [openC1, setOpenC1] = useState(false)\r\n    const [openC2, setOpenC2] = useState(false)\r\n    const [selectedBeneficiary, setSelectedBeneficiary] = useState({ benId: 0 })\r\n    const [openDeleteBeneficiary, setOpenDeleteBeneficiary] = useState(false);\r\n\r\n    const [isGenerating, setIsGenerating] = useState(false)\r\n    const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n\r\n    const closeBeneficiaryC1 = () => {\r\n        setOpenC1(false)\r\n    }\r\n\r\n    const getBeneficiaryC1 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC1(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                idNivelInt: data.listObject[0].benNivelInt.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC1(beneficiary)\r\n            setOpenC1(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC1 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC1()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const newBeneficiary = time => new Promise(resolve => setTimeout(resolve, time * 1000))\r\n\r\n    const closeBeneficiaryC2 = () => {\r\n        setOpenC2(false)\r\n    }\r\n\r\n    const getBeneficiaryC2 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC2(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC2(beneficiary)\r\n            setOpenC2(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC2 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC2()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const showReconfirmDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(true)\r\n    }\r\n\r\n    const confirmDeleteBeneficiary = async () => {\r\n        setIsDeleting(true)\r\n        try {\r\n            const { data } = await beneficiaryService.del({ navigate, beneficiary: selectedBeneficiary })\r\n            if (data) {\r\n                toast.success('Beneficiary successfully removed')\r\n                fetchData(2)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setSelectedBeneficiary({ benId: 0 })\r\n            setIsDeleting(false)\r\n            setOpenDeleteBeneficiary(false)\r\n        }\r\n    }\r\n\r\n    const cancelDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(false)\r\n    }\r\n\r\n    const delBeneficiary = async ({ benId }) => {\r\n        setSelectedBeneficiary({ benId })\r\n        if ((postulant.beneficiarioList.length - 1) < postulant.entId.entLimBen) {\r\n            showReconfirmDeleteBeneficiary()\r\n        } else {\r\n            setIsDeleting(true)\r\n            try {\r\n                const { data } = await beneficiaryService.del({ navigate, beneficiary: { benId } })\r\n                if (data) {\r\n                    toast.success('Beneficiary successfully removed')\r\n                    fetchData(2)\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n            } finally {\r\n                setSelectedBeneficiary({ benId: 0 })\r\n                setIsDeleting(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateBeneficiary = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = await beneficiaryService.val({ navigate, beneficiary })\r\n            if (data)\r\n                toast.success('Beneficiary successfully updated')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendCertificate = async ({ cerId }) => {\r\n        setIsSendingCertificate(true)\r\n        try {\r\n            const certificate = { cerId }\r\n            const { data } = await certificateService.send({ navigate, certificate })\r\n            if (data) toast.success('Certificate sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Certificate send failed')\r\n        } finally {\r\n            setIsSendingCertificate(false)\r\n        }\r\n    }\r\n\r\n    const generate = async ({ idCurso, idPostulante }) => {\r\n        setIsGenerating(true)\r\n        try {\r\n            const course = { idCurso, idPostulante }\r\n            const { data } = await certificateService.generate({ navigate, course })\r\n            const certificate = data.listObject[0]\r\n            toast.success('Certificate generated successfully')\r\n            sendCertificate(certificate)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    const sendBeneficiaries = async ({ idCurso, idPostulante }) => {\r\n        confirm({\r\n            title: getLabel(labels.sendBeneficiaryListTitle),\r\n            icon: <anticons.ExclamationCircleFilled />,\r\n            content: getLabel(labels.sendBeneficiaryListConfirm),\r\n            okText: getLabel(labels.ok),\r\n            cancelText: getLabel(labels.cancel),\r\n            onOk() {\r\n                generate({ idCurso, idPostulante })\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCourse = ({ curId, curNombre }, posId) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            operation === 'registry' &&\r\n                            <>\r\n                                {\r\n                                    postulant.beneficiarioList && postulant.beneficiarioList.filter(b => b.idCurso === curId && b.idPostulante === posId).length >= postulant.entId.entLimBen ?\r\n                                        <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                        :\r\n                                        <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                }\r\n                            </>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' &&\r\n                            <>\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.filter(c => c.idCurso === curId && c.idPostulante === posId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                            <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                            :\r\n                                            <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                    }\r\n                                </>\r\n                            </>\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography>\r\n                            <Text strong style={{ fontSize: '1.1em' }}>\r\n                                {curNombre.catNombre}\r\n                            </Text>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            <Row>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Typography>\r\n                        <Paragraph>\r\n                            <Text type='secondary' strong>\r\n                                {`${getLabel(labels.minimumBeneficiaries)} (${postulant.entId.entLimBen})`}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    style={{ textAlign: 'right' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type='default'\r\n                            loading={isLoading || isLoadingBeneficiaries}\r\n                            disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                            onClick={() => {\r\n                                fetchData(2)\r\n                            }}>Refresh</Button>\r\n                        {\r\n                            postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 && <Button\r\n                                type='primary'\r\n                                loading={isOpening}\r\n                                disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                                onClick={() => {\r\n                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC1(null)\r\n                                            setBeneficiaryC1({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_NAT'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC1(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC2(null)\r\n                                            setBeneficiaryC2({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_LEG'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC2(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    }\r\n                                }}>New Beneficiary</Button>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                            <Button type='primary'\r\n                                loading={isGenerating || isSendingCertificate}\r\n                                disabled={isGenerating || isSendingCertificate || isLoading || isLoadingBeneficiaries}\r\n                                onClick={() => sendBeneficiaries(\r\n                                    {\r\n                                        idCurso: curId,\r\n                                        idPostulante: posId\r\n                                    })}\r\n                            >\r\n                                {\r\n                                    isGenerating || isSendingCertificate ? 'Sending' : 'Send'\r\n                                }\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                postulant && postulant.beneficiarioList &&\r\n                <Table\r\n                    loading={isLoading || isLoadingBeneficiaries}\r\n                    {...tableProps}\r\n                    rowKey='benId'\r\n                    columns={[\r\n                        {\r\n                            title: 'ID Number',\r\n                            dataIndex: 'benDocumento',\r\n                            render: (_, { benDocumento }) => `${benDocumento}`,\r\n                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        {\r\n                            title: 'Name',\r\n                            dataIndex: 'benNombres',\r\n                            render: (_, { benNombres }) => `${benNombres}`\r\n                        },\r\n                        {\r\n                            title: 'Country',\r\n                            dataIndex: 'benPais',\r\n                            render: (_, { benPais }) =>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png`}\r\n                                        srcSet={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${benPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                        width=\"32\"\r\n                                        height=\"24\"\r\n                                        alt={benPais.catNombre}></img>\r\n                                </div>\r\n                        },\r\n                        {\r\n                            title: 'City',\r\n                            dataIndex: 'ciudad',\r\n                            render: (_, { ciudad }) => `${ciudad}`,\r\n                            responsive: ['sm', 'md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Sex',\r\n                                    dataIndex: 'benSexo',\r\n                                    render: (_, { benSexo }) => `${benSexo.catNombre}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Job Title',\r\n                                    dataIndex: 'benCargo',\r\n                                    render: (_, { benCargo }) => `${benCargo}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Is Working',\r\n                                    dataIndex: 'benTrabaja',\r\n                                    render: (_, { benTrabaja }) => <>{benTrabaja ? 'Yes' : 'No'}</>,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Company',\r\n                                    dataIndex: 'benNomEmpresa',\r\n                                    render: (_, { benNomEmpresa }) => `${benNomEmpresa}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Ins. Level',\r\n                                    dataIndex: 'benNivelInt',\r\n                                    render: (_, { benNivelInt }) => `${benNivelInt.catNombre}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Total Persons',\r\n                                    dataIndex: 'benNumPer',\r\n                                    render: (_, { benNumPer }) => `${benNumPer}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        {\r\n                            title: 'Actions',\r\n                            dataIndex: '',\r\n                            render: (_, record) =>\r\n                                <Space>\r\n                                    <Button type='primary'\r\n                                        icon={<anticons.FolderOpenFilled />}\r\n                                        onClick={() => {\r\n                                            if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                                getBeneficiaryC1(record)\r\n                                            } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                                getBeneficiaryC2(record)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    {\r\n                                        operation === 'registry' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                                        <>\r\n                                            <Popconfirm title=\"Are you sure you want to delete the beneficiary?\" okText={getLabel(labels.yes)} cancelText={getLabel(labels.cancel)} onConfirm={() => delBeneficiary(record)}\r\n                                                okButtonProps={{\r\n                                                    loading: isDeleting,\r\n                                                    disabled: isDeleting\r\n                                                }}\r\n                                            >\r\n                                                <Button type='default'\r\n                                                    danger\r\n                                                    icon={<anticons.DeleteFilled />}\r\n                                                    loading={isDeleting}\r\n                                                    disabled={isDeleting}\r\n                                                />\r\n                                            </Popconfirm>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        operation === 'qualification' &&\r\n                                        <Switch\r\n                                            defaultChecked={record.benValidado}\r\n                                            onChange={(e) => {\r\n                                                validateBeneficiary({ ...record, benValidado: e })\r\n                                            }}\r\n                                            loading={isSaving}\r\n                                            disabled={postulant.certificadoList.filter(c => c.idCurso === curId).length > 0}\r\n                                        />\r\n                                    }\r\n                                </Space>\r\n                        }\r\n                    ]}\r\n                    dataSource={postulant.beneficiarioList.filter(b => b.idCurso === curId)}>\r\n                </Table>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const fetchData = async (typeLoad) => {\r\n        setLoad(false)\r\n        if (typeLoad) {\r\n            if (typeLoad === 1) {\r\n                setIsLoading(true)\r\n            } else if (typeLoad === 2) {\r\n                setIsLoadingBeneficiaries(true)\r\n            }\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            if (typeLoad) {\r\n                if (typeLoad === 1) {\r\n                    setIsLoading(false)\r\n                } else if (typeLoad === 2) {\r\n                    setIsLoadingBeneficiaries(false)\r\n                }\r\n            } else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px 20px 6px 20px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                        <Typography>\r\n                            <Title type='secondary' level={3}>\r\n                                {getLabel(labels.beneficiariesTitle)} {` ${toCapitalize(operation)}`}\r\n                            </Title>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row justify='center'>\r\n                {\r\n                    isLoading ?\r\n                        <AlertWait message='Loading...' isLoading={isLoading} />\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                operation === 'registry' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={`\r\n                                        There must be at least one approved workplan to register beneficiaries.\r\n                                        `}\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/workplan')\r\n                                                        }}\r\n                                                    >\r\n                                                        Send Workplan\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n                            {\r\n                                operation === 'qualification' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title=\"There must be at least one approved final report to qualify beneficiaries.\"\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/finalreport')\r\n                                                        }}\r\n                                                    >\r\n                                                        Send Final Report\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </Col>\r\n                }\r\n            </Row >\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC1} open={openC1}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC1}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC1 && <Beneficiary type={1} beneficiary={beneficiaryC1} saveBeneficiary={saveBeneficiaryC1} closeBeneficiary={closeBeneficiaryC1} isSaving={isSaving} />\r\n                }\r\n            </Drawer >\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC2} open={openC2}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC2}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC2 && <Beneficiary type={2} beneficiary={beneficiaryC2} saveBeneficiary={saveBeneficiaryC2} closeBeneficiary={closeBeneficiaryC2} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Modal\r\n                title={getLabel(labels.deleteBeneficiaryTitle)}\r\n                open={openDeleteBeneficiary}\r\n                onOk={confirmDeleteBeneficiary}\r\n                confirmLoading={isDeleting}\r\n                onCancel={cancelDeleteBeneficiary}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.cancel)}\r\n            >\r\n                <p>\r\n                    {\r\n                        getLabel(labels.reConfirmDeleteBeneficiary)\r\n                    }\r\n                </p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beneficiaries","import React, { useState, useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport { Route, useLocation } from \"react-router-dom\";\n\nimport AppTopbar from \"./AppTopbar\";\nimport AppFooter from \"./AppFooter\";\nimport AppRightPanel from \"./AppRightPanel\";\n\nimport { Tooltip } from \"primereact/tooltip\";\n\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./App.scss\";\n\nimport Usuarios from \"./components/usuario\";\nimport Usuario from \"./components/usuario/Usuario\";\nimport Opciones from \"./components/opcion\";\nimport Perfiles from \"./components/perfil\";\nimport Perfil from \"./components/perfil/Perfil\";\n\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport UserInfo from \"./components/dashboard/UserInfo\";\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\nimport Courses from \"./components/courses/Courses\";\nimport Course from \"./components/courses/Course\";\nimport Applicants from \"./components/Applicant/Applicants\";\nimport Applicant from \"./components/Applicant/Applicant\";\nimport WorkPlan from \"./components/workplan/WorkPlan\";\nimport FinalReport from \"./components/finalReport/FinalReport\";\nimport Certificate from \"./components/certificate/Certificate\";\nimport Classes from \"./components/classes/Classes\";\nimport Training from \"./components/training/Training\";\n\nimport { getDatosUsuario, getOpcionesMenu } from \"./utils/Utils\";\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\nimport Beneficiaries from \"./components/beneficiary/Beneficiaries\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst App = (props) => {\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\n  const [sidebarStatic, setSidebarStatic] = useState(true);\n  const [sidebarActive, setSidebarActive] = useState(true);\n  const [menuActive, setMenuActive] = useState(false);\n  const [configActive, setConfigActive] = useState(false);\n  const [rightPanelActive, setRightPanelActive] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\n  const copyTooltipRef = useRef();\n  const location = useLocation();\n\n  const menu = getOpcionesMenu();\n\n  let menuClick;\n  let rightPanelClick;\n  let configClick;\n  let searchClick;\n  let topbarUserMenuClick;\n\n  useEffect(() => {\n    copyTooltipRef &&\n      copyTooltipRef.current &&\n      copyTooltipRef.current.updateTargetEvents();\n  }, [location]);\n\n  useEffect(() => {\n    if (staticMenuMobileActive) {\n      blockBodyScroll();\n    } else {\n      unblockBodyScroll();\n    }\n  }, [staticMenuMobileActive]);\n\n  useEffect(() => {\n    setResetActiveIndex(true);\n    setMenuActive(false);\n  }, []);\n\n  const onMenuItemClick = (event) => {\n    if (!event.item.items) {\n      setResetActiveIndex(true);\n      hideOverlayMenu();\n    }\n    if (!event.item.items && (isSlim() || isHorizontal())) {\n      setMenuActive(false);\n    }\n  };\n\n  const onMenuClick = (event) => {\n    if (menuActive && event.target.className === \"layout-menu-container\") {\n      setResetActiveIndex(true);\n      setMenuActive(false);\n    }\n    menuClick = true;\n  };\n\n  const blockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.add(\"blocked-scroll\");\n    } else {\n      document.body.className += \" blocked-scroll\";\n    }\n  };\n\n  const unblockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.remove(\"blocked-scroll\");\n    } else {\n      document.body.className = document.body.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n    }\n  };\n\n  const onMenuButtonClick = (event) => {\n    menuClick = true;\n    setTopbarUserMenuActive(false);\n    setRightPanelActive(false);\n\n    if (isMobile()) {\n      setStaticMenuMobileActive(\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\n      );\n      if (staticMenuMobileActive) {\n        blockBodyScroll();\n      } else {\n        unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 991;\n  };\n\n  const isHorizontal = () => {\n    return \"sideBar\" === \"horizontal\";\n  };\n\n  const isSlim = () => {\n    return \"sideBar\" === \"slim\";\n  };\n\n  const hideOverlayMenu = () => {\n    setStaticMenuMobileActive(false);\n    unblockBodyScroll();\n  };\n\n  const onRightPanelClick = () => {\n    rightPanelClick = true;\n  };\n\n  const onRightPanelButtonClick = () => {\n    setRightPanelActive((prevState) => !prevState);\n    rightPanelClick = true;\n  };\n\n  const onTopbarSearchToggle = () => {\n    setSearchActive((prevState) => !prevState);\n    searchClick = true;\n  };\n\n  const onTopbarSearchClick = () => {\n    searchClick = true;\n  };\n\n  const onTopbarUserMenuClick = () => {\n    setTopbarUserMenuActive((prevState) => !prevState);\n    topbarUserMenuClick = true;\n  };\n\n  const onDocumentClick = () => {\n    if (!searchClick && searchActive) {\n      setSearchActive(false);\n      searchClick = false;\n    }\n\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\n      setTopbarUserMenuActive(false);\n      topbarUserMenuClick = false;\n    }\n\n    if (!rightPanelClick && rightPanelActive) {\n      setRightPanelActive(false);\n    }\n\n    if (!configClick && configActive) {\n      setConfigActive(false);\n    }\n\n    if (!menuClick) {\n      if (isSlim() || isHorizontal()) {\n        setResetActiveIndex(true);\n        setMenuActive(false);\n      }\n\n      if (staticMenuMobileActive) {\n        hideOverlayMenu();\n      }\n\n      unblockBodyScroll();\n    }\n\n    searchClick = false;\n    topbarUserMenuClick = false;\n    rightPanelClick = false;\n    configClick = false;\n    menuClick = false;\n  };\n\n  const onSidebarMouseOver = () => {\n    setSidebarActive(!isMobile());\n  };\n\n  const onSidebarMouseLeave = () => {\n    setSidebarActive(false);\n  };\n\n  const onToggleMenu = (event) => {\n    menuClick = true;\n    setSidebarStatic((prevState) => !prevState);\n\n    event.preventDefault();\n  };\n\n  const onRootMenuItemClick = () => {\n    setMenuActive((prevMenuActive) => !prevMenuActive);\n  };\n\n  const layoutClassName = classNames(\n    \"layout-wrapper\",\n    {\n      \"layout-sidebar\": \"sidebar\",\n      \"layout-static\": \"sidebar\" && sidebarStatic,\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\n      \"layout-rightpanel-active\": rightPanelActive,\n      \"layout-slim\": \"sidebar\" === \"slim\",\n      \"layout-mobile-active\": staticMenuMobileActive,\n      \"p-input-filled\": \"filled\",\n      \"p-ripple-disabled\": false,\n    },\n    \"layout-menu-light layout-topbar-light\"\n  );\n\n  return (\n    <div\n      className={layoutClassName}\n      onClick={onDocumentClick}\n      style={{ backgroundColor: \"#F0F0F0\" }}\n    >\n      <Tooltip\n        ref={copyTooltipRef}\n        target=\".block-action-copy\"\n        position=\"bottom\"\n        content=\"Copied to clipboard\"\n        event=\"focus\"\n      />\n\n      <AppTopbar\n        topbarScheme={\"light\"}\n        onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive}\n        onTopbarSearchToggle={onTopbarSearchToggle}\n        onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive}\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu}\n        menuActive={menuActive}\n        onRootMenuItemClick={onRootMenuItemClick}\n        mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick}\n        menuMode={\"sidebar\"}\n        sidebarStatic={sidebarStatic}\n        sidebarActive={sidebarActive}\n        onSidebarMouseOver={onSidebarMouseOver}\n        onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu}\n        onMenuButtonClick={onMenuButtonClick}\n        resetActiveIndex={resetActiveIndex}\n        onMenuClick={onMenuClick}\n      />\n\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n      <div className=\"layout-main\">\n        <div\n          className=\"mgeBG\"\n          style={{\n            opacity: \"0.3\",\n            height: \"100vh\",\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: \"0\",\n            right: \"0\",\n          }}\n        >\n          &nbsp;\n        </div>\n        <div className=\"layout-content\">\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return getDatosUsuario() &&\n                getDatosUsuario().opciones &&\n                getDatosUsuario().opciones.length > 0 ? (\n                <Redirect to={getDatosUsuario().opciones[0].actionOpcion} />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/user/:id\" exact component={UserInfo} />\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\n          <Route\n            path=\"/trainingapplicant/:id/:idTraining\"\n            exact\n            component={TrainingApplicant}\n          />\n\n          <Route path=\"/users\" exact component={Usuarios} />\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\n          <Route path=\"/users/:id\" exact component={Usuario} />\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\n\n          <Route path=\"/opciones\" exact component={Opciones} />\n          <Route path=\"/perfiles\" exact component={Perfiles} />\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\n\n          <Route path=\"/training\" exact component={Courses} />\n          <Route path=\"/training/:id\" exact component={Applicants} />\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\n          <Route path=\"/trainingnew\" exact component={Course} />\n\n          <Route path=\"/applicants\" exact component={Applicants} />\n          <Route\n            path=\"/applicants/:id/:idTraining\"\n            exact\n            component={Applicant}\n          />\n\n          <Route path=\"/classes\" exact component={Classes} />\n          <Route path=\"/workplan\" exact component={WorkPlan} />\n          <Route\n            path=\"/beneficiaries/:operation\"\n            exact\n            component={Beneficiaries}\n          />\n          <Route path=\"/finalreport\" exact component={FinalReport} />\n          <Route path=\"/certificate\" exact component={Certificate} />\n        </div>\n\n        <AppFooter />\n      </div>\n      <div className=\"layout-mask modal-in\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\"\r\nimport { getAutenticarUrl, getAutorizarUrl, updatePassword, recoveryPassword, validateUserUuid } from \"../utils/urls\"\r\n\r\nconst config = { headers: { \"Accept-Language\": 'en_US' } }\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales, config)\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales, config)\r\n    }\r\n    validateResetPassword = ({ datos }) => (axios.post(validateUserUuid(), datos, config))\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos, config)\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos, config)\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nconst headers = {\r\n    \"Accept-Language\": 'en_US'\r\n}\r\nexport default class CatalogoService {\r\n    getPaises = () => this.getPorPadre({ catalogo: { catValor: \"CAT_PAISES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catValor: \"CAT_MODALIDAD\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catValor: \"CAT_CURSOS\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catValor: \"CAT_SEXO\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_ENT\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TIP_INF\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_INF\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_REG\" } })\r\n    getEducationLevel = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EDU_LEV\" } })\r\n    getTypePerson = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TYP_PER\" } })\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const visible = true\r\n                const { opciones } = data.listObject[0]\r\n                const opcionesVisible = opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/') >= 0 ? { ...o, visible: false } : { ...o, visible }))\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones: opcionesVisible })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                requests.push(catalogoService.getEducationLevel())\r\n                requests.push(catalogoService.getTypePerson())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject,\r\n                                cursos: results[1].data.listObject,\r\n                                modalidades: results[2].data.listObject,\r\n                                generos: results[3].data.listObject,\r\n                                trainingStatus: results[4].data.listObject,\r\n                                reportType: results[5].data.listObject,\r\n                                reportStatus: results[6].data.listObject,\r\n                                states: results[7].data.listObject,\r\n                                educationLevels: results[8].data.listObject,\r\n                                typePersons: results[9].data.listObject\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        'The requested resource is not available or cannot be found.'\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].perId }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        'The requested resource is not available or cannot be found.'\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    Welcome back\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    Log in to access your account\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label=\"Log in with your email\"\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter you email',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Enter your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter your password'\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password id=\"password\" name=\"password\" label='Password' />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Log in</Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>Forgot your password?</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, idInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: idInvitadoPor, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        requests.push(catalogoService.getEducationLevel())\r\n        requests.push(catalogoService.getTypePerson())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject,\r\n                        cursos: results[1].data.listObject,\r\n                        modalidades: results[2].data.listObject,\r\n                        generos: results[3].data.listObject,\r\n                        trainingStatus: results[4].data.listObject,\r\n                        reportType: results[5].data.listObject,\r\n                        reportStatus: results[6].data.listObject,\r\n                        states: results[7].data.listObject,\r\n                        educationLevels: results[8].data.listObject,\r\n                        typePersons: results[9].data.listObject\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('Your account has been created successfully. Please log in.')\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            cultura: 'en_US',\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label='Upload your profile picture'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select your profile picture'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >Select Photo</Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Country Code\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Phone Number\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>Are you currently working?</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                Please write the complete name of the institution.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Additional email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item label=\"Email\"\r\n                                        name='email'\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email is not valid'\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete your email',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >Recover Password</Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useEffect, useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport AlertWait from \"./AlertWait\"\r\nimport toast from \"react-hot-toast\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [validate, setValidate] = useState(true)\r\n    const [isValidating, setIsValidating] = useState(false)\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [isResetting, setIsResetting] = useState(false)\r\n    const [isReset, setIsReset] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const reset = async (values) => {\r\n        setOkMsg(null)\r\n        setIsResetting(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            if (data) {\r\n                setOkMsg(<>Password has been successfully changed. <br />Please log in again.</>)\r\n                setIsReset(true)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsResetting(false)\r\n        }\r\n    }\r\n\r\n    const validateRequest = async () => {\r\n        setValidate(false)\r\n        setIsValidating(true)\r\n        try {\r\n            const datos = { usuId: id, uuid }\r\n            const { data } = await cuentaService.validateResetPassword({ datos })\r\n            if (data) setIsValid(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(\"The requested resource is not available or cannot be found.\")\r\n            } else if (response.status === 409) {\r\n                setIsValid(false)\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        }\r\n        finally {\r\n            setIsValidating(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validate) validateRequest()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                <Row justify='center'>\r\n                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n\r\n                                {\r\n                                    isValidating ?\r\n                                        <>\r\n                                            <AlertWait isLoading={isValidating} message='Please wait...' />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {\r\n                                                isValid ?\r\n                                                    <>\r\n                                                        {\r\n                                                            isReset && okMsg ?\r\n                                                                <>\r\n                                                                    <Result\r\n                                                                        status='success'\r\n                                                                        title='Password Reset'\r\n                                                                        subTitle={okMsg}\r\n                                                                        extra={\r\n                                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                                onClick={() => {\r\n                                                                                    navigate.push('/login')\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Log in\r\n                                                                            </Button>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                                                    <Form\r\n                                                                        layout={'vertical'}\r\n                                                                        onFinish={reset}\r\n                                                                    >\r\n                                                                        <Form.Item label=\"New Password\"\r\n                                                                            name='password'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Complete new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item label=\"Confirm new password\"\r\n                                                                            name='passwordConfirm'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Confirme new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item>\r\n                                                                            <PasswordChecklist\r\n                                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                                minLength={8}\r\n                                                                                value={password}\r\n                                                                                valueAgain={passwordConfirm}\r\n                                                                                messages={{\r\n                                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                                    specialChar: \"Password has special characters.\",\r\n                                                                                    number: \"Password has a number.\",\r\n                                                                                    capital: \"Password has a capital letter.\",\r\n                                                                                    match: \"Passwords match.\",\r\n                                                                                }}\r\n                                                                                onChange={(isValid) => { }}\r\n                                                                            />\r\n                                                                        </Form.Item>\r\n                                                                        <div style={{\r\n                                                                            paddingTop: '10px'\r\n                                                                        }}>\r\n                                                                            <Form.Item>\r\n                                                                                <Button\r\n                                                                                    type='primary'\r\n                                                                                    htmlType='submit'\r\n                                                                                    loading={isResetting}\r\n                                                                                    disabled={isResetting}\r\n                                                                                    block>\r\n                                                                                    {\r\n                                                                                        isResetting ? 'Changing Password' : 'Reset Password'\r\n                                                                                    }\r\n                                                                                </Button>\r\n                                                                            </Form.Item>\r\n                                                                        </div>\r\n                                                                    </Form>\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <Result\r\n                                                        status='404'\r\n                                                        title='Page does not exist.'\r\n                                                        subTitle='Sorry, the page you visited does not exist.'\r\n                                                        extra={\r\n                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/login')\r\n                                                                }}\r\n                                                            >\r\n                                                                Log in\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                            }\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Layout >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from \"react\";\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport RecuperarPassword from \"./pages/RecuperarPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nexport const ctx = React.createContext();\n\nconst AppWrapper = (props) => {\n  let location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  const [colorScheme, setColorScheme] = useState(\"light\");\n\n  switch (props.location.pathname) {\n    case \"/login\":\n      return (\n        <Route\n          path=\"/login\"\n          render={() => <Login colorScheme={colorScheme} />}\n        />\n      );\n    case \"/signup\":\n      return (\n        <Route\n          path=\"/signup\"\n          render={() => <Signup colorScheme={colorScheme} />}\n        />\n      );\n    case \"/recover\":\n      return (\n        <Route\n          path=\"/recover\"\n          render={() => <RecuperarPassword colorScheme={colorScheme} />}\n        />\n      );\n    case \"/reset\":\n      return (\n        <Route\n          path=\"/reset\"\n          render={() => <ResetPassword colorScheme={colorScheme} />}\n        />\n      );\n    default:\n      return <App setColorScheme={setColorScheme} />;\n  }\n};\n\nexport default withRouter(AppWrapper);\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}