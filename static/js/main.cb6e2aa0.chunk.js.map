{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","components/user/User.jsx","components/cuenta/MiCuenta.jsx","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","service/CatalogoService.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","service/TrainingService.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","utils/AxiosInstanceBlob.jsx","service/InformService.jsx","service/CertificateService.jsx","components/Applicant/Applicant.jsx","components/user/Users.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","components/training/Training.jsx","App.js","service/CuentaService.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","pages/Signup.jsx","pages/AlertWait.jsx","pages/Login.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","current","focus","logo","fontSize","margin","onMenuButtonClick","id","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perfil","push","gutter","removeItem","AppFooter","display","AppRightPanel","onRightPanelClick","Option","Select","User","user","navigate","Form","useForm","formUser","isLoading","isSaving","currentlyWorking","setCurrentlyWorking","update","values","a","message","info","go","submit","span","size","tip","Paragraph","justify","xs","sm","md","lg","xl","xxl","form","layout","initialValues","onFinish","preview","Item","name","rules","required","width","fieldNames","showSearch","options","generos","optionFilterProp","format","direction","title","placement","paises","p","catId","catDescripcion","srcSet","catNombre","catValor","defaultChecked","onChange","c","MiCuenta","usuarioId","headers","AxiosInstance","axiosInstance","axios","create","interceptors","request","use","config","token","undefined","toast","error","Promise","reject","response","status","apiURL","getRecuperarPasswordUrl","getCatalogosPorPadreUrl","downloadInformByName","downloadWorkplan","downloadFinalReport","downloadCertificateByName","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","set","put","upLoadPhoto","datos","getLessPostulants","CatalogoService","getTiposIdentificacion","getCatalogo","catalogo","getTiposPersona","getActividadesEconomicas","getBancos","getPorPadre","getTiposCuenta","getFuentesIngreso","getPaises","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","del","usuarioService","catalogoService","Usuario","useParams","setIsLoading","setIsSaving","estados","setEstados","tiposIdentificacion","setTiposIdentificacion","setUsuario","setError","fetchData","then","data","listObject","usuId","password","messageText","checked","guardar","md5","success","usuarioActualizado","subTitle","extra","align","Title","level","documento","defaultValue","tipoDocumento","v","direccion","email","telefono","login","Password","estado","blnEstado","renderEstado","loading","OpcionService","getsPorPadre","opcId","patch","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","requests","forEach","all","results","catch","msgError","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","onClose","open","opcIcono","PerfilService","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","columnas","dataIndex","render","responsive","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","onChangePerfil","_perfiles","unique","perNombre","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","bordered","showHeader","pagination","position","rowKey","columns","dataSource","min","max","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","perfilActualizado","eliminar","TrainingService","getByTraining","trainer","getById","training","pub","trainingService","Courses","courses","setCourses","load","setLoad","idUsuario","entId","entNombre","entFechaIni","entFechaFin","entModalidad","numPostulantes","entEstado","color","hoverable","fontWeight","strong","reverse","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CourseService","course","baseTraining","postulantService","courseService","Course","formPostulante","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","startDate","setStartDate","endDate","setEndDate","removePostulant","newPostulantsList","save","idEstado","trainingStatus","s","htmlType","Group","buttonStyle","modalidades","m","Button","renderModality","disabledDate","startOf","endOf","mode","cursos","_","option","resetFields","showIcon","posEmail","closeIcon","borderRadius","tableProps","Applicants","setCourse","entPais","postulanteList","pais","asistenciaList","asiValor","informeList","cursoList","curNombre","substr","idCurso","curId","infTipo","infEstado","certificadoList","tc","cerEstado","posId","AttendanceService","attendance","AxiosInstanceBlob","axiosInstanceBlob","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","CertificateService","generate","send","certificate","download","attendanceService","informService","certificateService","panelStyle","marginBottom","backgroundColor","border","Applicant","idTraining","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","isDownloading","setIsDownloading","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","paddingBottom","downloadInform","column","eviUrl","TextArea","setInform","reportStatus","danger","renderInform","downloadCertificate","cerNombre","cerRuta","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","stringify","xhr","blob","Blob","saveAs","setAttendance","sendCertificate","cerId","idPostulante","sendRateEmail","informe","centered","letterSpacing","posInvitadoPor","fechanac","readOnly","formatter","parser","accordion","expandIconPosition","w","cerFechaCad","cerFechaReg","renderCertificate","codigotel","celular","Users","users","setUsers","_usuarios","u","background","precision","valueStyle","prefix","suffix","Upload","Dragger","WorkPlan","setPostulant","fileList","setFileList","uploading","setUploading","selectedWorkplan","setSelectedWorkplan","onRemove","file","newFileList","slice","splice","beforeUpload","renderWorkplan","sendLoadEmail","handleUpload","FormData","append","reportType","t","downloadWorkplanTemplate","autoComplete","multiple","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","informInserted","newInform","sendFinalReport","idInforme","downloadFinalReportTemplate","f","Certificate","Classes","Training","loadCourse","setLoadCourse","loadPostulant","setLoadPostulant","isLoadingCourse","setIsLoadingCourse","setIsLoadingPostulant","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","newCourse","idEntrenamiento","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","moment","dayjs","$d","modTraining","envios","reduce","promise","fn","resolve","itemLayout","grid","renderItem","idNombreCurso","posEstado","posEnvio","renderApplicants","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","location","useLocation","getOpcionesMenu","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","register","registerPersona","recoverPassword","resetPassword","changePassword","recoveryPassword","updatePassword","cuentaService","RecuperarPassword","okMsg","setOkMsg","emailSent","setEmailSent","recuperar","statusText","textTransform","description","banner","ResetPassword","search","decodeURIComponent","uuid","setPassword","passwordConfirm","setPasswordConfirm","passwordChanged","setPasswordChanged","reset","minLength","valueAgain","messages","specialChar","number","capital","match","isValid","renderError","messageCode","Signup","photoFile","setPhotoFile","URL","createObjectURL","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validForm","setValidForm","validPostulant","setValidPostulant","posUuid","validPostulantInfo","postulantInfo","invitadopor","fetchCatalogos","mgeCatalogos","setItem","registrar","trabaja","AlertWait","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","actions","renderPerfil","backgroundImage","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.cb6e2aa0.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n            // style={{\n            //   backgroundColor: \"#70B450\",\n            //   color: \"#ffffff\",\n            // }}\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  // const history = useHistory();\n\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  // const logo = {\n  //   fontSize: \"1.5em\",\n  //   padding: 0,\n  //   margin: 0,\n  // };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\n      </div>\n      {/* <div className=\"sidebar-logo\">\n        <button className=\"p-link\" onClick={() => history.push(\"/\")}>\n          <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n            MG\n          </span>\n          <span className=\"mge mge-bold mge-green\" style={logo}>\n            E\n          </span>\n        </button>\n        <button\n          className=\"sidebar-pin p-link\"\n          onClick={(event) => props.onToggleMenu(event)}\n        >\n          <span className=\"pin\"></span>\n        </button>\n      </div> */}\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\";\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nconst toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nexport const getResponsable = () => getDatosUsuario().idPymeInv\r\nconst getSolicitudes = () => localStorage.getItem('mgeSolicitudes') ? JSON.parse(localStorage.getItem('mgeSolicitudes')) : []\r\nexport const getSolicitudUsuarioOferta = (idOfertaInv) => {\r\n    const mgeSolicitudes = getSolicitudes()\r\n    const idUsuario = parseInt(getDatosUsuario().idUsuario)\r\n    const usuario = mgeSolicitudes.filter(u => u.idUsuario === idUsuario)\r\n    const solicitudUsuarioOferta = usuario.length === 1 ? usuario[0].solicitudes.filter(s => s.idOfertaInv === parseInt(idOfertaInv)) : []\r\n    return solicitudUsuarioOferta\r\n}\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const opciones = getDatosUsuario().opciones || []\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getEstiloFerificada = () => ({\r\n    style: {\r\n        fontWeight: '600'\r\n    }\r\n})\r\nexport const getURLImagenRandom = (i) => `https://joesch.moe/api/v1/random?v=${i}`\r\nexport const getURLImagenPYMERandom = (i) => `https://picsum.photos/600/400?v=${i}`\r\nexport const getCalificaciones = () => ['Malo', 'Normal', 'Bueno', 'Muy Bueno', 'Excelente']\r\n\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport AppMenu from \"./AppMenu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Space, Typography } from \"antd\";\nimport { getDatosUsuario } from \"./utils/Utils\";\n\nconst AppTopbar = (props) => {\n  const history = useHistory();\n  const searchPanelDesktop = useRef(null);\n  const searchPanelMobile = useRef(null);\n\n  useEffect(() => {\n    if (props.searchActive) {\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\n      else searchPanelMobile.current.focus();\n    }\n  }, [props.searchActive]);\n\n  const datosUsuario = (e) => {\n    history.push(\"/myaccount\");\n  };\n\n  const cerrarSesion = (e) => {\n    localStorage.removeItem(\"mgeToken\");\n    localStorage.removeItem(\"mgeDatosUsuario\");\n    history.push(\"/login\");\n  };\n\n  const logo = {\n    fontSize: \"1.5em\",\n    padding: 0,\n    margin: 0,\n  };\n\n  return (\n    <div className=\"layout-topbar\">\n      <div className=\"layout-topbar-wrapper\">\n        <div className=\"layout-topbar-left\">\n          <button\n            tabIndex=\"0\"\n            className=\"menu-button p-link\"\n            onClick={props.onMenuButtonClick}\n          >\n            <i className=\"pi pi-bars\"></i>\n          </button>\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n              MG\n            </span>\n            <span className=\"mge mge-bold mge-green\" style={logo}>\n              E\n            </span>\n          </div>\n        </div>\n\n        <AppMenu\n          menuMode={props.menuMode}\n          sidebarActive={props.sidebarActive}\n          sidebarStatic={props.sidebarStatic}\n          model={props.menu}\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          onMobileMenuActive={props.onMobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          onSidebarMouseOver={props.onSidebarMouseOver}\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\n          onToggleMenu={props.onToggleMenu}\n          resetActiveIndex={props.resetActiveIndex}\n          onMenuClick={props.onMenuClick}\n        />\n\n        <div className=\"layout-topbar-right\">\n          <ul className=\"layout-topbar-actions\">\n            <li\n              className={classNames(\"topbar-item user-profile\", {\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\n              })}\n            >\n              <button\n                className=\"p-link\"\n                style={{ cursor: \"pointer\" }}\n                onClick={props.onTopbarUserMenuClick}\n              >\n                {getDatosUsuario() && (\n                  <Row>\n                    <Col\n                      style={{\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        textAlign: \"right\",\n                        lineHeight: \"1em\",\n                      }}\n                    >\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\n                        {`${getDatosUsuario().nombres || \"\"} ${\n                          getDatosUsuario().apellidos || \"\"\n                        }`}\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\n                          <>\n                            <br />\n                            <Typography.Text\n                              type=\"secondary\"\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\n                            >\n                              {`${getDatosUsuario().perfiles[0].perfil}`}\n                            </Typography.Text>\n                          </>\n                        )}\n                      </Typography.Text>\n                    </Col>\n                    <Col>\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\n                    </Col>\n                  </Row>\n                )}\n              </button>\n              <ul className=\"fadeInDown\">\n                <li onClick={datosUsuario}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-user-gear\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Profile</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                {/* <li onClick={changePassword}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-key\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Cambiar Contraseña</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li> */}\n                <li onClick={cerrarSesion}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-right-from-bracket\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Sign off</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppTopbar;\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from 'react';\n\nconst AppRightPanel = (props) => {\n\n\treturn (\n\t\t<div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n\t\t\t<div className=\"rightpanel-wrapper\" >\n\t\t\t\t<div className=\"rightpanel-section weather-section\">\n\t\t\t\t\t<div className=\"section-header\">\n\t\t\t\t\t\t<h6>Today</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"weather\">\n\t\t\t\t\t\t<img src=\"assets/demo/images/rightpanel/icon-sun.svg\" alt=\"freya-layout\" />\n\t\t\t\t\t\t<div className=\"weather-info\">\n\t\t\t\t\t\t\t<h6>Ankara, 22 May</h6>\n\t\t\t\t\t\t\t<h1>24º</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppRightPanel;","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, message } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport { getCatalogos } from './../../utils/Utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const update = async (values) => {\r\n    message.info('Saved')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  My Account\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    disabled={isLoading}\r\n                    onClick={() => { formUser.submit() }}>Save</Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          user && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={user}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                          Upload your profile picture\r\n                        </Typography.Paragraph>\r\n                      </Col>\r\n                      <Col span={24}>\r\n                        <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                          <Image src='./../assets/user.png' preview={false} />\r\n                        </Typography.Paragraph>\r\n                      </Col>\r\n                      <Col span={24} style={{ textAlign: 'center' }}>\r\n                        <Form.Item>\r\n                          <Button type='primary'>Upload photo</Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexoId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='paisId'\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='codigotel'\r\n                      label=\"Country Code\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label=\"Phone Number\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        },\r\n                        {\r\n                          type: 'number',\r\n                          message: 'Phone number is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space>\r\n                          Are you currently working?\r\n                          <Switch defaultChecked onChange={(c) => { setCurrentlyWorking(c) }} />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: 'Are you currently working?',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  {/* <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Button type='primary' htmlType='submit' loading={isSaving} disabled={isSaving} block>Save</Button>\r\n                    </Form.Item>\r\n                  </Col> */}\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst headers = {}\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error('The session has expired. Please log in again.')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    // Agregar una respuesta al interceptor\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    toast.error('The session has expired. Please log in again.')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","\r\n// EN ARCHIVO package.json SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY:\r\n// \"proxy\": \"http://20.65.110.204:8080\",\r\n\r\n// SOLO PARA PRODUCCION\r\n// const apiURL = 'http://20.65.110.204/uprime-mge-web/uprime/api'\r\nconst apiURL = 'https://mygreenenterprise.org/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA DESARROLLO Y PRUEBAS\r\n// const apiURL = '/uprime-mge-web/uprime/api'\r\n\r\nexport const getAutenticarUrl = () => `${apiURL}/UsuarioServicioRest/authenticateUsuario`\r\nexport const getAutorizarUrl = () => `${apiURL}/UsuarioServicioRest/authorizationUsuario`\r\nexport const getRecuperarPasswordUrl = () => `${apiURL}/UsuarioServicioRest/recuperarPassword`\r\nexport const getResetPasswordUrl = () => `${apiURL}/UsuarioServicioRest/resetPassword`\r\nexport const getChangePasswordUrl = () => `${apiURL}/UsuarioServicioRest/changePassword`\r\nexport const getRegistrarUrl = () => `${apiURL}/InversionistaServicioRest/insertInversionista`\r\n\r\nexport const getRegistrarPersonaUrl = () => `${apiURL}/PersonaServicioRest/insertPersona`\r\n\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogosList`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogoByFilter`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogosListByFather`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogoById`\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/insertCatalogo`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/deleteCatalogo`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/updateCatalogo`\r\n\r\nexport const getOpcionesUrl = () => `${apiURL}/OpcionServicioRest/getOpcionesList`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OpcionServicioRest/getOpcionesListByFather`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OpcionServicioRest/getOpcionById`\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OpcionServicioRest/insertOpcion`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OpcionServicioRest/deleteOpcion`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OpcionServicioRest/updateOpcion`\r\n\r\nexport const getPerfilesUrl = () => `${apiURL}/PerfilServicioRest/getPerfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/PerfilServicioRest/getPerfilById`\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/PerfilServicioRest/insertPerfil`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/PerfilServicioRest/updatePerfil`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/PerfilServicioRest/deletePerfil`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/PerfilOpcionServicioRest/getOpcionesPorPerfilList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/insertPerfilOpcion`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/updatePerfilOpcion`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/deletePerfilOpcion`\r\n\r\nexport const getUsuariosUrl = () => `${apiURL}/UsuarioServicioRest/getUsuariosList`\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UsuarioServicioRest/getUsuariosListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UsuarioServicioRest/getUsuarioById`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UsuarioServicioRest/updateUsuario`\r\n\r\n/* MGE */\r\nexport const insertUsuario = () => `${apiURL}/UsuarioServicioRest/insertUsuario`\r\nexport const enrollUsuario = () => `${apiURL}/UsuarioServicioRest/enrollPostulante`\r\nexport const recoveryPassword = () => `${apiURL}/UsuarioServicioRest/recoveryPassword`\r\nexport const updatePassword = () => `${apiURL}/UsuarioServicioRest/updatePassword`\r\nexport const uploadPhotoUser = () => `${apiURL}/UsuarioServicioRest/uploadFotoUsuario`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UsuarioServicioRest/getUsuariosLessPostulants`\r\n\r\nexport const insertTraining = () => `${apiURL}/EntrenamientoServicioRest/insertEntrenamiento`\r\nexport const updateTraining = () => `${apiURL}/EntrenamientoServicioRest/updateEntrenamiento`\r\nexport const getTrainingById = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulanteServicioRest/insertPostulante`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulanteServicioRest/sendEmailRegistro`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulanteServicioRest/getPostulanteByEntrenamiento`\r\nexport const deletePostulant = () => `${apiURL}/PostulanteServicioRest/deletePostulante`\r\nexport const validatePostulant = () => `${apiURL}/PostulanteServicioRest/validatePostulante`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulanteServicioRest/getEntrenamientoByPostulante`\r\n\r\nexport const insertCourse = () => `${apiURL}/CursoServicioRest/insertCurso`\r\nexport const getCourseByTraining = () => `${apiURL}/CursoServicioRest/getCursosByEntrenamiento`\r\nexport const deleteCourse = () => `${apiURL}/CursoServicioRest/deleteCurso`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AsistenciaServicioRest/insertAsistencia`\r\nexport const getAttendanceById = () => `${apiURL}/AsistenciaServicioRest/getAsistenciaById`\r\nexport const updateAttendance = () => `${apiURL}/AsistenciaServicioRest/updateAsistencia`\r\n\r\nexport const insertInform = () => `${apiURL}/InformeServicioRest/insertInforme`\r\nexport const updateInform = () => `${apiURL}/InformeServicioRest/updateInforme`\r\nexport const getInformById = () => `${apiURL}/InformeServicioRest/getInformeById`\r\nexport const downloadInformByName = () => `${apiURL}/InformeServicioRest/downloadInformeByName`\r\nexport const downloadWorkplan = () => `${apiURL}/InformeServicioRest/downloadPlanTrabajo`\r\nexport const downloadFinalReport = () => `${apiURL}/InformeServicioRest/downloadInformeFinal`\r\nexport const sendEmailLoadInform = () => `${apiURL}/InformeServicioRest/sendEmailLoadInforme`\r\nexport const sendEmailRateInform = () => `${apiURL}/InformeServicioRest/sendEmailRateInforme`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenciaServicioRest/insertEvidencia`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificadoServicioRest/generateCertificado`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificadoServicioRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificadoServicioRest/downloadCertificateByName`\r\n\r\nexport const getInversionistaPorIdUrl = () => `${apiURL}/InversionistaServicioRest/getInversionistaById`\r\nexport const getActualizarInversionistaUrl = () => `${apiURL}/InversionistaServicioRest/updateUsuario`\r\n\r\n/* KC */\r\nexport const getOfertasInversionUrl = () => `${apiURL}/OfertaInversionServicioRest/getOfertaInversionList`\r\nexport const getOfertaInversionByIdUrl = () => `${apiURL}/OfertaInversionServicioRest/getOfertaInversionById`\r\n\r\nexport const getSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/getSolicitudInversionList`\r\nexport const getTablaAmortizacionUrl = () => `${apiURL}/SolicitudInversionServicioRest/getTablaAmortizacion`\r\nexport const getInsertarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/insertSolicitudInversion`\r\nexport const getActualizarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/updateSolicitudInversion`\r\nexport const getEliminarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/deleteSolicitudInversion`\r\nexport const getSolicitudInversionPorIdUrl = () => `${apiURL}/SolicitudInversionServicioRest/getSolicitudInversionById`\r\n\r\nexport const getInversionUrl = () => `${apiURL}/InversionServicioRest/getInversionList`\r\nexport const getInversionesPorInversionistaUrl = () => `${apiURL}/InversionServicioRest/getInversionesByInversionista`\r\nexport const getInversionPorIdUrl = () => `${apiURL}/InversionServicioRest/getInversionById`\r\nexport const getInsertarInversionUrl = () => `${apiURL}/InversionServicioRest/insertInversion`\r\nexport const getActualizarInversionUrl = () => `${apiURL}/InversionServicioRest/updateInversion`\r\nexport const getEliminarInversionUrl = () => `${apiURL}/InversionServicioRest/deleteInversion`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, uploadPhotoUser } from \"./../utils/urls\"\r\n\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nexport default class CatalogoService {\r\n    getTiposIdentificacion = () => this.getCatalogo({ catalogo: { catNombre: \"TIPO IDENTIFICACION\" } })\r\n    getTiposPersona = () => this.getCatalogo({ catalogo: { catNombre: \"TIPO PERSONA\" } })\r\n    getActividadesEconomicas = () => this.getCatalogo({ catalogo: { catNombre: \"ACTIVIDAD ECONOMICA\" } })\r\n    getBancos = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"INSTITUCIONES FINANCIERAS\" } })\r\n    getTiposCuenta = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"TIPOS DE CUENTA\" } })\r\n    getFuentesIngreso = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"FUENTE INGRESO\" } })\r\n    getPaises = () => this.getPorPadre({ catalogo: { catNombre: \"COUNTRIES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catNombre: \"MODALITY\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catNombre: \"COURSES\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catNombre: \"SEX\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catNombre: \"TRAINING STATUS\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catNombre: \"REPORT TYPE\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catNombre: \"STATUS REPORT\" } })\r\n\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n        // return AxiosInstance(navigate).post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, message } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport CatalogoService from './../../service/CatalogoService'\r\n\r\nimport md5 from 'md5'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst catalogoService = new CatalogoService()\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [estados, setEstados] = useState([])\r\n  const [tiposIdentificacion, setTiposIdentificacion] = useState([])\r\n  const [usuario, setUsuario] = useState({})\r\n  const [error, setError] = useState(null)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n\r\n        catalogoService.getPorPadre({ navigate, catalogo: { catNombre: 'ESTADOS' } }).then(r => {\r\n          const { data } = r\r\n          setEstados(data.listObject[0])\r\n        })\r\n\r\n        catalogoService.getTiposIdentificacion(navigate).then(r => {\r\n          const { data } = r\r\n          setTiposIdentificacion(data.listObject[0])\r\n        })\r\n\r\n        try {\r\n          const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n          if (data) {\r\n            setUsuario({ ...data.listObject[0], password: '' })\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener el usuario\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          const { response } = error\r\n          setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el usuario\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate, id])\r\n\r\n  const onChange = (e) => {\r\n    setUsuario({ ...usuario, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangeEstado = (v, o) => {\r\n    setUsuario({ ...usuario, blnEstado: { catId: v, catValor: o.children } })\r\n  }\r\n\r\n  const onChangeTipoIdentificacion = (v, o) => {\r\n    setUsuario({ ...usuario, tipoDocumento: v })\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setError('')\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario: { ...usuario, password: md5(usuario.password) } })\r\n      setIsSaving(false)\r\n      message.success('Usuario guardado correctamente')\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"No pudimos hacer la solicitud para guardar el usuario\")\r\n    }\r\n  }\r\n\r\n  const renderEstado = e => <Option key={e.catId} value={e.catId}>{e.catNombre}</Option>\r\n  const renderCatalogoValor = e => <Option key={e.catValor} value={e.catValor}>{e.catNombre}</Option>\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/usuarios'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/usuarios'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Gestión de Usuario\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Espere un momento...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Identificación\">\r\n                  <Input id=\"documento\" name=\"documento\" label='Identificación' type='text' value={usuario.documento} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Tipo de Identificación\">\r\n                  <Select defaultValue={usuario.tipoDocumento} value={usuario.tipoDocumento} onChange={onChangeTipoIdentificacion}>\r\n                    {\r\n                      tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Nombres\">\r\n                  <Input id=\"nombres\" name=\"nombres\" label='Nombres' type='text' value={usuario.nombres} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Apellidos\">\r\n                  <Input id=\"apellidos\" name=\"apellidos\" label='Apellidos' type='text' value={usuario.apellidos} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Dirección\">\r\n                  <Input id=\"direccion\" name=\"direccion\" label='Dirección' type='text' value={usuario.direccion} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Email\">\r\n                  <Input id=\"email\" name=\"email\" label='Email' type='text' value={usuario.email} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Teléfono\">\r\n                  <Input id=\"telefono\" name=\"telefono\" label='Teléfono' type='text' value={usuario.telefono} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Login\">\r\n                  <Input id=\"login\" name=\"login\" label='Login' type='text' value={usuario.login} onChange={onChange} disabled />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Contraseña\">\r\n                  <Input.Password id=\"password\" name=\"password\" label='Contraseña' value={usuario.password} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n             <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Estado\">\r\n                  <Select\r\n                    defaultValue={usuario.estado.catValor}\r\n                    value={usuario.estado.catValor}\r\n                    onChange={onChangeEstado}\r\n                  >\r\n                    {\r\n                      estados && estados.map(e => renderEstado(e))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item>\r\n              <Button type=\"primary\" onClick={(e) => guardar(e)} disabled={isSaving}\r\n                loading={isSaving}\r\n              >\r\n                {isSaving ? 'Guardando...' : 'Guardar'}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport OpcionService from './../../service/OpcionService'\r\n\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject[0].filter(o => o.opcNivel === 1).map(o => ({ title: o.opcNombre, key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`, children: o.opcHijos.map(o => ({ title: o.opcNombre, key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}` })) }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener los opciones\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los opciones\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    // const opcionPadre = nodo.key ? { opcIdPadre: nodo.key.split('_')[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n        // ...opcionPadre,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(\"Hubo un error al obtener la opción\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener la opción\")\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para guardar la opción\")\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar la opción\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n// import AxiosInstance from './../../utils/AxiosInstance'\r\n// import { getPerfilesUrl, getEliminarPerfilUrl, getActualizarPerfilUrl, getInsertarPerfilUrl } from './../../utils/urls'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Nivel',\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Estado',\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? 'Habilitado' : 'Deshabilitado'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject[0].map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener los perfiles\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los perfiles\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success('Perfil guardado correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para guardar el perfil\")\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar los perfiles: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Perfil eliminado correctamente')\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error('No fue posible eliminar el perfil')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el perfil\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Perfiles\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar los perfiles seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading} icon={<anticons.SearchOutlined />}>Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Perfil\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nivel\">\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" label='Nivel' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='perEstado' name='perEstado' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar el perfil?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre Opción',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Lectura',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura}/>\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Escritura',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({  navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`Opción ${perfilOpcionActualizado.pfoOpcId.opcNombre} actualizada correctamente`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"No pudimos hacer la solicitud para guardar la opción del perfil\")\r\n    }\r\n  }\r\n  \r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setIsLoading(false)\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setIsLoading(false)\r\n        setError(\"Hubo un error al obtener el perfil\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el perfil\")\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n        \r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject[0].filter(o => o.opcNivel === 1)\r\n              .map((o) => ({\r\n                key: `${o.opcId}`,\r\n                opcNombre: o.opcNombre,\r\n                ..._opcionesPerfil.filter((op) => op.idOpcion === o.opcId)[0],\r\n                children: o.opcHijos.map((o) => ({\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter((op) => op.idOpcion === o.opcId)[0]\r\n                }))\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(\"Hubo un error al obtener los opciones\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los opciones\")\r\n        }\r\n\r\n      } else {\r\n        setIsLoadingOpciones(false)\r\n        setError(\"Hubo un error al obtener las opciones del perfil\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpciones(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener las opciones del perfil\")\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success('Perfil guardado correctamente')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"No pudimos hacer la solicitud para guardar el perfil\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Perfil eliminado')\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error('No fue posible eliminar el perfil')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el perfil\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Perfil {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Espere un momento...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Nombre\">\r\n                  <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Nivel\">\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" label='Nivel' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Estado\">\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? 'Habilitado' : 'Deshabilitado'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>Opciones</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                      icon={<anticons.SaveFilled />}\r\n                    >\r\n                      {isSaving ? 'Guardando' : 'Guardar'}\r\n                    </Button>\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar el perfil?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text type='secondary'>\r\n                                {numPostulantes} applicants\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                View\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        const trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"mgeCard\">\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-4\">\r\n                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                    Trainings\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                <Space>\r\n                                    <Button\r\n                                        type='default'\r\n                                        loading={isLoading}\r\n                                        disabled={isLoading}\r\n                                        style={{ width: '120px' }}\r\n                                        onClick={() => {\r\n                                            fetchData()\r\n                                        }}>Refresh</Button>\r\n                                    <Button\r\n                                        type='primary'\r\n                                        disabled={isLoading}\r\n                                        style={{ width: '120px' }}\r\n                                        onClick={() => {\r\n                                            navigate.push('/trainingnew')\r\n                                        }}>New Training</Button>\r\n                                </Space>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\";\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, List, Alert, Typography } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst baseTraining = {\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `Then email ${postulant} already exists.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${postulant} successfully added.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${email} successfully removed.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      ...values,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar cursos\r\n        const requests = []\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`It was not possible to add the applicant: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(\"An error occurred.\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      New Training\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >Save Draft</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                      onClick={() => {\r\n                        toast.success('Training published')\r\n                      }}\r\n                    >Publish</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label=\"Country\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select country',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select name='idPais'>\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {/* <Col span={16}>\r\n                <Form.Item\r\n                  name='name'\r\n                  label=\"Training name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete training name',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col> */}\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label=\"Modality\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select modality',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label=\"Start Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select start date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label=\"End Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select end date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row >\r\n            <Form layout='vertical' style={{ width: '100%' }}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label='Courses'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select courses',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Form>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label='Applicants emails'\r\n                  extra='Press enter to add email'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete applicants',\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: 'Email is not valid'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setError(null)\r\n                setCourse(data.listObject[0])\r\n            } else {\r\n                setError(\"Hubo un error al obtener el entrenamiento\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el entrenamiento\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (e) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import axios from \"axios\"\r\nimport { getToken } from \"./Utils\"\r\n\r\n// responseType: 'arraybuffer'\r\nconst headers = {\r\n}\r\n\r\nconst AxiosInstanceBlob = (navigate) => {\r\n\r\n    const axiosInstanceBlob = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstanceBlob.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                // navigate.push('/login')\r\n            }\r\n            config.headers[\"Authorization\"] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    // Agregar una respuesta al interceptor\r\n    axiosInstanceBlob.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                // localStorage.removeItem('mgeCatalogos')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    // localStorage.removeItem('mgeCatalogos')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n\r\n    return axiosInstanceBlob\r\n\r\n}\r\n\r\nexport default AxiosInstanceBlob","import AxiosInstance from '../utils/AxiosInstance'\r\nimport AxiosInstanceBlob from '../utils/AxiosInstanceBlob'\r\nimport { downloadFinalReport, downloadInformByName, downloadWorkplan, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    downloadWorkplan = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstanceBlob(navigate).get(downloadWorkplan())\r\n    }\r\n    downloadFinalReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(downloadFinalReport())\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    download = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Tooltip, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\nconst trainingService = new TrainingService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n  const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              Download\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 2,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n          }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              Comments:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'PLAN_TRABAJO' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'PLAN_TRABAJO' ? 'workplan' : infTipo.catValor === 'INFORME_FINAL' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, approve\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending || isGenerating || isSendingCertificate\r\n                  }}\r\n                  disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                    disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                  >Approve</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'PLAN_TRABAJO' ? 'workplan' : infTipo.catValor === 'INFORME_FINAL' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, reject\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending || isGenerating || isSendingCertificate }}\r\n                  disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                    disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                  >Reject</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'PLAN_TRABAJO' ? 'Workplan - ' : infTipo.catValor === 'INFORME_FINAL' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const downloadCertificate = async (cerNombre, cerRuta) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        cerNombre,\r\n        cerRuta\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Certificate&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Expires: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n              >Download</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      toast.success('Attendance successfully saved')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendCertificate = async ({ cerId }) => {\r\n    setIsSendingCertificate(true)\r\n    try {\r\n      const certificate = { cerId }\r\n      const { data } = await certificateService.send({ navigate, certificate })\r\n      toast.success('Certificate sent successfully')\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSendingCertificate(false)\r\n    }\r\n  }\r\n\r\n  const generate = async ({ idCurso }) => {\r\n    setIsGenerating(true)\r\n    try {\r\n      const course = {\r\n        idCurso: idCurso,\r\n        idPostulante: postulant.posId\r\n      }\r\n      const { data } = await certificateService.generate({ navigate, course })\r\n      const certificate = data.listObject[0]\r\n      toast.success('Certificate generated successfully')\r\n      sendCertificate(certificate)\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n    } finally {\r\n      setIsGenerating(false)\r\n    }\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId, infTipo, infEstado, idCurso }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      toast.success('Email sent successfully')\r\n      if (infTipo.catValor === 'INFORME_FINAL' && infEstado.catValor === 'EST_INF_APR') {\r\n        generate({ idCurso })\r\n      } else {\r\n        setLoad(true)\r\n      }\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'PLAN_TRABAJO' ? commentWorkplan : catValor === 'INFORME_FINAL' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = {\r\n      entId: idTraining\r\n    }\r\n    try {\r\n      const { data } = await trainingService.getById({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].cursoList\r\n        const postulant = data.listObject[0].postulanteList.filter(p => p.posId === parseInt(id))[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error('An error occurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      message.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                      {/* <Space>\r\n                        <Button type='primary'>Edit</Button>\r\n                      </Space> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          <Image preview src='./assets/user.png' />\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Role:\r\n                            </Typography.Text>\r\n                            <br />Applicant\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Invited by:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <Typography.Text type='danger'> Agregar este campo a servicio</Typography.Text>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label=\"First Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label=\"Last Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label=\"Sex\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label=\"Date Birth\"\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label=\"Country\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label=\"City\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label=\"Country Code\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label=\"Phone number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label=\"ID Number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label=\"Currenty Working\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label=\"Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label=\"Additional Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Attendance\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >Save</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'PLAN_TRABAJO' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'INFORME_FINAL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs >\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Input, Form, Spin } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst applicants = [\r\n    {\r\n        id: 1,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'ecuador.png',\r\n            name: 'Ecuador'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'minus.png'\r\n        },\r\n        finalReport: {\r\n            value: 'minus.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 2,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'mexico.png',\r\n            name: 'México'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'accept.png'\r\n        },\r\n        finalReport: {\r\n            value: 'minus.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 3,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'peru.png',\r\n            name: 'Perú'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'accept.png'\r\n        },\r\n        finalReport: {\r\n            value: 'cancel.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 4,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'venezuela.png',\r\n            name: 'Venezuela'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'cancel.png'\r\n        },\r\n        workPlan: {\r\n            value: 'minus.png'\r\n        },\r\n        finalReport: {\r\n            value: 'minus.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 5,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'colombia.png',\r\n            name: 'Colombia'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'accept.png'\r\n        },\r\n        finalReport: {\r\n            value: 'accept.png'\r\n        },\r\n        certificate: {\r\n            value: 'download.png'\r\n        }\r\n    }\r\n]\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst columnas = [\r\n    {\r\n        title: '',\r\n        dataIndex: 'id',\r\n        render: (e) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'nombres',\r\n        render: (_, r) => `${r.nombres} ${r.apellidos}`\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Phone',\r\n        dataIndex: 'telefono',\r\n        render: (_, r) => `+${r.codigotel} ${r.celular}`,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'City',\r\n        dataIndex: 'ciudad',\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    }\r\n    ,\r\n    // {\r\n    //     title: 'Country',\r\n    //     dataIndex: 'country',\r\n    //     render: (_, { country }) => <div style={{ textAlign: 'center' }}><img alt='' src={`./assets/${country.img}`} width={32} height={32} /></div>,\r\n    //     responsive: ['md', 'lg', 'xl', 'xxl']\r\n    // },\r\n    // {\r\n    //     title: 'Role',\r\n    //     dataIndex: 'role',\r\n    //     responsive: ['lg', 'xl', 'xxl']\r\n    // },\r\n    {\r\n        title: 'Actions',\r\n        dataIndex: '',\r\n        render: (_, record) => <Button type='primary' href={`/#/usuario/${record.usuId}`}>View</Button>\r\n    }\r\n]\r\n\r\nconst Users = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setError(null)\r\n        try {\r\n            const { data } = await usuarioService.getsFiltro({ navigate, filtros: {} })\r\n            if (data) {\r\n                const _usuarios = data.listObject[0].map(u => ({ ...u, unique: { key: u.usuId, label: `${u.nombres} ${u.apellidos}` } }))\r\n                setUsers(_usuarios)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setError(\"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[15, 15]}>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#54873C',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={28}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#70B450',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={80}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#385A28',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={25}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#636466',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={30}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        {/* <Form.Item\r\n                            label='Search expression'\r\n                        >\r\n                            <Input />\r\n                        </Form.Item> */}\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Table\r\n                                {...tableProps}\r\n                                rowKey='usuId'\r\n                                columns={columnas}\r\n                                dataSource={users}>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n            {/* <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                            <Col>\r\n                                <img alt='' src='./../../assets/accept.png' height={24} width={24} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Typography.Title level={5}>\r\n                                    Attendance\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                            <Col style={{ textAlign: 'end' }}>\r\n                                <Space>\r\n                                    <Input />\r\n                                    <Button type='primary'>Save</Button>\r\n                                </Space>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const metaData = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, \"WorkplanTemplate.docx\")\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        {/* <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infFechaReg.substring(0, 10)}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        {\r\n                            infFechaSAprRec && <Col>\r\n                                <Typography.Title level={5}>\r\n                                    {infFechaSAprRec.substring(0, 10)}\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        } */}\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            // disabled={fileList.length === 0}\r\n                                            loading={uploading}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        // fileList.forEach((file) => {\r\n        //     inform.append('file', file)\r\n        //     inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'PLAN_TRABAJO')[0].catId)\r\n        //     inform.append('idCurso', postulant.entId.cursoList[0].curId)\r\n        //     inform.append('idPostulante', postulant.posId)\r\n        // });\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'PLAN_TRABAJO')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Upload successfully')\r\n            // setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Workplan template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n\r\n            {/* {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                                ?\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Upload {...props}>\r\n                                            <Button icon={<anticons.UploadOutlined />}>Select File</Button>\r\n                                        </Upload>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            onClick={handleUpload}\r\n                                            disabled={fileList.length === 0}\r\n                                            loading={uploading}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                : <>\r\n                                </>\r\n                        }\r\n                    </>\r\n\r\n            } */}\r\n\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Upload your workplan\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Dragger {...props}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <anticons.InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                        </Dragger>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24} style={{ textAlign: 'end' }}>\r\n                    <Button type='primary'>Send</Button>\r\n                </Col>\r\n            </Row> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Tooltip, Collapse } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n\r\n        const metaData = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, \"FinalReportTemplate.docx\")\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        {/* <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infFechaReg.substring(0, 10)}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        {\r\n                            infFechaSAprRec && <Col>\r\n                                <Typography.Title level={5}>\r\n                                    {infFechaSAprRec.substring(0, 10)}\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        } */}\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>\r\n                                            Copy evidence link\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label='URL'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            // disabled={fileList.length === 0}\r\n                                            loading={uploading}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        // fileList.forEach((file) => {\r\n        //     inform.append('file', file)\r\n        //     inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'INFORME_FINAL')[0].catId)\r\n        //     inform.append('idCurso', postulant.entId.cursoList[0].curId)\r\n        //     inform.append('idPostulante', postulant.posId)\r\n        // });\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'INFORME_FINAL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0].infId\r\n            sendLoadEmail(informe)\r\n            toast.success('Evidence sended successfully')\r\n            // setLoad(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Final Report template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n\r\n            {/* {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' &&\r\n                                w.infEstado.catValor === 'EST_INF_APR'\r\n                            ).length > 0\r\n                                &&\r\n                                (\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length < 1\r\n                                    ||\r\n                                    (\r\n                                        postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                    )\r\n                                )\r\n                                ?\r\n                                <Form\r\n                                    onFinish={handleUpload}\r\n                                    autoComplete='off'\r\n                                    layout='vertical'\r\n                                >\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Typography.Title level={5}>\r\n                                                Upload your final report\r\n                                            </Typography.Title>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='file'\r\n                                                label='File'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Upload\r\n                                                    multiple={false}\r\n                                                    {...props}\r\n                                                >\r\n                                                    <Button\r\n                                                        icon={<anticons.UploadOutlined />}\r\n                                                        disabled={\r\n                                                            fileList.length > 0\r\n                                                        }\r\n                                                    >Select File</Button>\r\n                                                </Upload>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            <Typography.Title level={5}>\r\n                                                Copy evidence link\r\n                                            </Typography.Title>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='url'\r\n                                                label='URL'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'url',\r\n                                                        warningOnly: true,\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'string',\r\n                                                        min: 6,\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                disabled={fileList.length === 0}\r\n                                                loading={uploading}\r\n                                            >\r\n                                                {uploading ? 'Uploading' : 'Send'}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                                : <>\r\n                                </>\r\n                        }\r\n                    </>\r\n\r\n            } */}\r\n\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Upload your final report\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Dragger {...props}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <anticons.InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                        </Dragger>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Copy evidence link\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Form.Item>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={24} style={{ textAlign: 'end' }}>\r\n                    <Button type='primary'>Send</Button>\r\n                </Col>\r\n            </Row> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Divider, Result } from 'antd'\r\nimport QRCode from 'react-qr-code'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' &&\r\n                                w.infEstado.catValor === 'EST_INF_APR'\r\n                            ).length > 0\r\n                                &&\r\n                                postulant.certificadoList.length >= 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <Result\r\n                                        title=\"You will see your certificate once your final report is approved\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/finalreport')\r\n                                                }}\r\n                                            >\r\n                                                Send Final Report\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                                </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React from 'react'\r\nimport { Layout, Row, Col, Typography } from 'antd'\r\n\r\nconst Classes = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Classes\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, List, Card, Checkbox, Image, Alert } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\nimport { sendEmailRegister } from '../../utils/urls'\r\n\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\nconst { Option } = Select\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadCourse, setLoadCourse] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isLoadingPostulant, setIsLoadingPostulant] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' ?\r\n                            <>\r\n                                <i className=\"fa-solid fa-paper-plane\"></i>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    setError(null)\r\n                    fetchCourses()\r\n                } else {\r\n                    setError(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    setError(null)\r\n                    fetchCourses()\r\n                } else {\r\n                    setError(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `Then email ${posEmail} already exists.`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${posEmail} successfully saved.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                setError(null)\r\n                fetchPostulants()\r\n            } else {\r\n                setError(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${postulant.posEmail} successfully deleted.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                setError(null)\r\n                fetchPostulants()\r\n            } else {\r\n                setError(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setError(null)\r\n                setTraining({\r\n                    ...training,\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setLoadCourse(false)\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setError(null)\r\n                setCourses(courses)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        setIsLoadingPostulant(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject\r\n                setError(null)\r\n                setPostulants(postulants)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingPostulant(false)\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        toast.success(`Training ${training.entNombre} update succesfully`)\r\n        // // const training = {\r\n        // //     ...values,\r\n        // //     idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n        // //     idUsuario: getDatosUsuario().usuarioId\r\n        // // }\r\n        // setIsSaving(true)\r\n        // // try {\r\n        // //     const { data } = await trainingService.put({ navigate, training })\r\n        // //     if (data) {\r\n        // //         setError(null)\r\n        // // Asignar cursos\r\n        // const requests = []\r\n        // if (courses.length > 0) {\r\n        //     courses.forEach(p => {\r\n        //         requests.push(courseService.put({\r\n        //             navigate, course: {\r\n        //                 \"idEntrenamiento\": training.entId,\r\n        //                 \"idNombreCurso\": p.catId\r\n        //             }\r\n        //         }))\r\n        //     });\r\n        // }\r\n        // // Asignar postulantes\r\n        // if (training.postulanteList.length > 0) {\r\n        //     training.postulanteList.filter(p => p.posId === undefined || p.posId === null).forEach(p => {\r\n        //         requests.push(postulantService.put({\r\n        //             navigate, postulant: {\r\n        //                 \"idEntrenamiento\": training.entId,\r\n        //                 \"posEmail\": p.posEmail,\r\n        //                 \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n        //             }\r\n        //         }))\r\n        //     });\r\n        // }\r\n        // if (requests.length > 0) {\r\n        //     Promise.all(requests)\r\n        //         .then((results) => {\r\n        //             toast.success(`Training ${training.entNombre} update succesfully`)\r\n        //             // navigate.push('/training')\r\n        //             setLoad(true)\r\n        //         }).catch(error => {\r\n        //             const { response } = error\r\n        //             const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        //             message.error(`It was not possible to add the applicant: ${msgError}`)\r\n        //         })\r\n        //     // } else {\r\n        //     //     toast.success(`Training ${data.listObject[0].entNombre} update succesfully`)\r\n        //     //     // navigate.push('/training')\r\n        //     //     setLoad(true)\r\n        //     // }\r\n        //     //     } else {\r\n        //     //         setError(\"An error occurred.\")\r\n        //     //     }\r\n        //     // } catch (error) {\r\n        //     //     const { response } = error\r\n        //     //     setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        //     // } finally {\r\n        //     //     setIsSaving(false)\r\n        // }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (courses.length < 1 || postulants.length < 1) {\r\n            toast.error('Add at least one course and one applicant')\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                setError(null)\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error('Could not send email')\r\n                                    else\r\n                                        toast.success('Email sent successfully')\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\")\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadCourse) {\r\n            fetchCourses()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        Edit Training\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >Save Draft</Button>\r\n                                                    <Popconfirm title=\"Are you sure to publish the training?\" okText=\"Yes, publish\" cancelText=\"No\" onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >Publish</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                            <Form.Item\r\n                                                name={['entPais', 'catId']}\r\n                                                label=\"Country\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select country',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select>\r\n                                                    {\r\n                                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                    }\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label=\"Trainig name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete trainig name',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label=\"Modality\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select modality',\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'>\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label=\"Start Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select start date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label=\"End Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select end date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Typography.Paragraph>\r\n                                    <Typography.Text type='danger'>*</Typography.Text>&nbsp;Courses\r\n                                </Typography.Paragraph>\r\n                                {\r\n                                    training.entEstado.catValor === 'ACTIVE' ?\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={training.cursoList}\r\n                                            renderItem={({ curNombre }) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            checked\r\n                                                        >\r\n                                                            {curNombre.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                        :\r\n                                        getCatalogos().cursos &&\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={getCatalogos().cursos}\r\n                                            renderItem={(item) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            disabled={isSaving || isLoadingCourse}\r\n                                                            checked={\r\n                                                                courses.filter(c => c.curNombre.catId === item.catId).length > 0\r\n                                                            }\r\n                                                            onChange={(e) => {\r\n                                                                setCourse({\r\n                                                                    checked: e.target.checked,\r\n                                                                    idNombreCurso: item.catId,\r\n                                                                    curId: courses.filter(c => c.curNombre.catId === item.catId).length > 0 ? courses.filter(c => c.curNombre.catId === item.catId)[0].curId : 0\r\n                                                                })\r\n                                                            }}>\r\n                                                            {item.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                }\r\n                            </Col>\r\n                        </Row >\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isLoadingCourse}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label='Applicants emails'\r\n                                                extra='Press enter to add email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete applicants',\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            <Row gutter={[15, 15]}>\r\n                                                {\r\n                                                    postulants && postulants.map(a => renderApplicants(a))\r\n                                                }\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row >\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport { Route, useLocation } from \"react-router-dom\";\n\nimport AppTopbar from \"./AppTopbar\";\nimport AppFooter from \"./AppFooter\";\nimport AppRightPanel from \"./AppRightPanel\";\n\n// import Dashboard from './components/Dashboard';\n// import FormLayoutDemo from \"./components/FormLayoutDemo\";\n// import InputDemo from \"./components/InputDemo\";\n// import FloatLabelDemo from \"./components/FloatLabelDemo\";\n// import InvalidStateDemo from \"./components/InvalidStateDemo\";\n// import ButtonDemo from \"./components/ButtonDemo\";\n// import TableDemo from \"./components/TableDemo\";\n// import ListDemo from \"./components/ListDemo\";\n// import TreeDemo from \"./components/TreeDemo\";\n// import PanelDemo from \"./components/PanelDemo\";\n// import OverlayDemo from \"./components/OverlayDemo\";\n// import MediaDemo from \"./components/MediaDemo\";\n// import MenuDemo from \"./components/MenuDemo\";\n// import MessagesDemo from \"./components/MessagesDemo\";\n// import FileDemo from \"./components/FileDemo\";\n// import ChartDemo from \"./components/ChartDemo\";\n// import MiscDemo from \"./components/MiscDemo\";\n// import Documentation from \"./components/Documentation\";\n// import IconsDemo from \"./utilities/IconsDemo\";\n// import CrudDemo from \"./pages/CrudDemo\";\n// import CalendarDemo from \"./pages/CalendarDemo\";\n// import TimelineDemo from \"./pages/TimelineDemo\";\n// import Invoice from \"./pages/Invoice\";\n// import Help from \"./pages/Help\";\n// import EmptyPage from \"./pages/EmptyPage\";\n// import BlocksDemo from \"./components/BlocksDemo\";\nimport { Tooltip } from \"primereact/tooltip\";\n\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./App.scss\";\n\n// import Inversiones from \"./components/inversiones/Inversiones\";\n// import MisInversiones from \"./components/inversiones/MisInversiones\";\n// import Inversion from \"./components/inversiones/Inversion\";\n// import Invertir from \"./components/inversiones/Invertir\";\n// import Reportes from \"./components/Reportes\";\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\n// import Usuarios from \"./components/usuario\";\nimport Usuario from \"./components/usuario/Usuario\";\n// import Catalogos from \"./components/catalogo\";\n// import Catalogo from \"./components/catalogo/Catalogo\";\nimport Opciones from \"./components/opcion\";\nimport Perfiles from \"./components/perfil\";\nimport Perfil from \"./components/perfil/Perfil\";\n// import ChangePassword from \"./components/cuenta/ChangePassword\";\n// import Home from \"./pages/Home\";\n\nimport Courses from \"./components/courses/Courses\";\nimport Course from \"./components/courses/Course\";\nimport Applicants from \"./components/Applicant/Applicants\";\nimport Applicant from \"./components/Applicant/Applicant\";\nimport Users from \"./components/user/Users\";\nimport User from \"./components/user/User\";\nimport WorkPlan from \"./components/workplan/WorkPlan\";\nimport FinalReport from \"./components/finalReport/FinalReport\";\nimport Certificate from \"./components/certificate/Certificate\";\nimport Classes from \"./components/classes/Classes\";\nimport Training from \"./components/training/Training\";\n\nimport { getOpcionesMenu } from \"./utils/Utils\";\n\nconst App = (props) => {\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\n  const [sidebarStatic, setSidebarStatic] = useState(true);\n  const [sidebarActive, setSidebarActive] = useState(true);\n  const [menuActive, setMenuActive] = useState(false);\n  const [configActive, setConfigActive] = useState(false);\n  const [rightPanelActive, setRightPanelActive] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\n  const copyTooltipRef = useRef();\n  const location = useLocation();\n\n  const menu = getOpcionesMenu();\n\n  let menuClick;\n  let rightPanelClick;\n  let configClick;\n  let searchClick;\n  let topbarUserMenuClick;\n\n  useEffect(() => {\n    copyTooltipRef &&\n      copyTooltipRef.current &&\n      copyTooltipRef.current.updateTargetEvents();\n  }, [location]);\n\n  useEffect(() => {\n    if (staticMenuMobileActive) {\n      blockBodyScroll();\n    } else {\n      unblockBodyScroll();\n    }\n  }, [staticMenuMobileActive]);\n\n  useEffect(() => {\n    setResetActiveIndex(true);\n    setMenuActive(false);\n  }, []);\n\n  const onMenuItemClick = (event) => {\n    if (!event.item.items) {\n      setResetActiveIndex(true);\n      hideOverlayMenu();\n    }\n    if (!event.item.items && (isSlim() || isHorizontal())) {\n      setMenuActive(false);\n    }\n  };\n\n  const onMenuClick = (event) => {\n    if (menuActive && event.target.className === \"layout-menu-container\") {\n      setResetActiveIndex(true);\n      setMenuActive(false);\n    }\n    menuClick = true;\n  };\n\n  const blockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.add(\"blocked-scroll\");\n    } else {\n      document.body.className += \" blocked-scroll\";\n    }\n  };\n\n  const unblockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.remove(\"blocked-scroll\");\n    } else {\n      document.body.className = document.body.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n    }\n  };\n\n  const onMenuButtonClick = (event) => {\n    menuClick = true;\n    setTopbarUserMenuActive(false);\n    setRightPanelActive(false);\n\n    if (isMobile()) {\n      setStaticMenuMobileActive(\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\n      );\n      if (staticMenuMobileActive) {\n        blockBodyScroll();\n      } else {\n        unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 991;\n  };\n\n  const isHorizontal = () => {\n    return \"sideBar\" === \"horizontal\";\n  };\n\n  const isSlim = () => {\n    return \"sideBar\" === \"slim\";\n  };\n\n  const hideOverlayMenu = () => {\n    setStaticMenuMobileActive(false);\n    unblockBodyScroll();\n  };\n\n  const onRightPanelClick = () => {\n    rightPanelClick = true;\n  };\n\n  const onRightPanelButtonClick = () => {\n    setRightPanelActive((prevState) => !prevState);\n    rightPanelClick = true;\n  };\n\n  const onTopbarSearchToggle = () => {\n    setSearchActive((prevState) => !prevState);\n    searchClick = true;\n  };\n\n  const onTopbarSearchClick = () => {\n    searchClick = true;\n  };\n\n  const onTopbarUserMenuClick = () => {\n    setTopbarUserMenuActive((prevState) => !prevState);\n    topbarUserMenuClick = true;\n  };\n\n  const onDocumentClick = () => {\n    if (!searchClick && searchActive) {\n      setSearchActive(false);\n      searchClick = false;\n    }\n\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\n      setTopbarUserMenuActive(false);\n      topbarUserMenuClick = false;\n    }\n\n    if (!rightPanelClick && rightPanelActive) {\n      setRightPanelActive(false);\n    }\n\n    if (!configClick && configActive) {\n      setConfigActive(false);\n    }\n\n    if (!menuClick) {\n      if (isSlim() || isHorizontal()) {\n        setResetActiveIndex(true);\n        setMenuActive(false);\n      }\n\n      if (staticMenuMobileActive) {\n        hideOverlayMenu();\n      }\n\n      unblockBodyScroll();\n    }\n\n    searchClick = false;\n    topbarUserMenuClick = false;\n    rightPanelClick = false;\n    configClick = false;\n    menuClick = false;\n  };\n\n  const onSidebarMouseOver = () => {\n    setSidebarActive(!isMobile());\n  };\n\n  const onSidebarMouseLeave = () => {\n    setSidebarActive(false);\n  };\n\n  const onToggleMenu = (event) => {\n    menuClick = true;\n    setSidebarStatic((prevState) => !prevState);\n\n    event.preventDefault();\n  };\n\n  const onRootMenuItemClick = () => {\n    setMenuActive((prevMenuActive) => !prevMenuActive);\n  };\n\n  const layoutClassName = classNames(\n    \"layout-wrapper\",\n    {\n      \"layout-sidebar\": \"sidebar\",\n      \"layout-static\": \"sidebar\" && sidebarStatic,\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\n      \"layout-rightpanel-active\": rightPanelActive,\n      \"layout-slim\": \"sidebar\" === \"slim\",\n      \"layout-mobile-active\": staticMenuMobileActive,\n      \"p-input-filled\": \"filled\",\n      \"p-ripple-disabled\": false,\n    },\n    \"layout-menu-light layout-topbar-light\"\n  );\n\n  // return <Route path=\"/signup/:id/:email\" exact component={Signup} />;\n\n  return (\n    <div\n      className={layoutClassName}\n      onClick={onDocumentClick}\n      style={{ backgroundColor: \"#F0F0F0\" }}\n    >\n      {/* <Toaster /> */}\n\n      <Tooltip\n        ref={copyTooltipRef}\n        target=\".block-action-copy\"\n        position=\"bottom\"\n        content=\"Copied to clipboard\"\n        event=\"focus\"\n      />\n\n      <AppTopbar\n        topbarScheme={\"light\"}\n        onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive}\n        onTopbarSearchToggle={onTopbarSearchToggle}\n        onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive}\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu}\n        menuActive={menuActive}\n        onRootMenuItemClick={onRootMenuItemClick}\n        mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick}\n        menuMode={\"sidebar\"}\n        sidebarStatic={sidebarStatic}\n        sidebarActive={sidebarActive}\n        onSidebarMouseOver={onSidebarMouseOver}\n        onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu}\n        onMenuButtonClick={onMenuButtonClick}\n        resetActiveIndex={resetActiveIndex}\n        onMenuClick={onMenuClick}\n      />\n\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n      <div className=\"layout-main\">\n        <div\n          className=\"mgeBG\"\n          style={{\n            opacity: \"0.3\",\n            height: \"100vh\",\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: \"0\",\n            right: \"0\",\n          }}\n        >\n          &nbsp;\n        </div>\n        <div className=\"layout-content\">\n          <Route path=\"/\" exact component={Courses} />\n          {/* <Route path=\"/misinversiones/:filtro\" exact component={MisInversiones} />\n          <Route path=\"/inversion/:id\" exact component={Inversion} />\n          <Route path=\"/invertir/:id\" exact component={Invertir} />\n          <Route path=\"/reportes\" exact component={Reportes} />\n          <Route path=\"/cuenta\" exact component={MiCuenta} />\n          <Route path=\"/change\" exact component={ChangePassword} />\n          <Route path=\"/usuarios\" exact component={Usuarios} /> */}\n          <Route path=\"/usuario/:id\" exact component={Usuario} />\n          {/* <Route path=\"/catalogos\" exact component={Catalogos} />\n          <Route path=\"/catalogo/:id/:nombre\" exact component={Catalogo} /> */}\n          <Route path=\"/opciones\" exact component={Opciones} />\n          <Route path=\"/perfiles\" exact component={Perfiles} />\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\n\n          <Route path=\"/training\" exact component={Courses} />\n          <Route path=\"/training/:id\" exact component={Applicants} />\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\n          <Route path=\"/trainingnew\" exact component={Course} />\n\n          <Route path=\"/applicants\" exact component={Applicants} />\n          <Route\n            path=\"/applicants/:id/:idTraining\"\n            exact\n            component={Applicant}\n          />\n\n          <Route path=\"/users\" exact component={Users} />\n          <Route path=\"/users/:id\" exact component={User} />\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\n\n          <Route path=\"/classes\" exact component={Classes} />\n          <Route path=\"/workplan\" exact component={WorkPlan} />\n          <Route path=\"/finalreport\" exact component={FinalReport} />\n          <Route path=\"/certificate\" exact component={Certificate} />\n\n          {/* <Route path=\"/start/documentation\" component={Documentation} />\n          <Route path=\"/uikit/formlayout\" component={FormLayoutDemo} />\n          <Route path=\"/uikit/floatlabel\" component={FloatLabelDemo} />\n          <Route path=\"/uikit/input\" component={InputDemo} />\n          <Route path=\"/uikit/invalidstate\" component={InvalidStateDemo} />\n          <Route path=\"/uikit/button\" component={ButtonDemo} />\n          <Route path=\"/uikit/table\" component={TableDemo} />\n          <Route path=\"/uikit/list\" component={ListDemo} />\n          <Route path=\"/uikit/tree\" component={TreeDemo} />\n          <Route path=\"/uikit/panel\" component={PanelDemo} />\n          <Route path=\"/uikit/overlay\" component={OverlayDemo} />\n          <Route path=\"/uikit/menu\" component={MenuDemo} />\n          <Route path=\"/uikit/message\" component={MessagesDemo} />\n          <Route path=\"/uikit/media\" component={MediaDemo} />\n          <Route path=\"/uikit/file\" component={FileDemo} />\n          <Route path=\"/uikit/chart\" render={() => <ChartDemo colorMode={\"light\"} location={location} />} />\n          <Route path=\"/uikit/misc\" component={MiscDemo} />\n          <Route path=\"/utilities/icons\" component={IconsDemo} />\n          <Route path=\"/pages/crud\" component={CrudDemo} />\n          <Route path=\"/pages/calendar\" component={CalendarDemo} />\n          <Route path=\"/pages/help\" render={() => <Help colorScheme={\"light\"} />} location={location} />\n          <Route path=\"/pages/invoice\" component={Invoice} />\n          <Route path=\"/pages/empty\" component={EmptyPage} />\n          <Route path=\"/pages/timeline\" component={TimelineDemo} />\n          <Route path=\"/uiblocks/blocks\" component={BlocksDemo} /> */}\n        </div>\n\n        <AppFooter />\n      </div>\n      <div className=\"layout-mask modal-in\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { getAutenticarUrl, getAutorizarUrl, getRegistrarUrl, getRecuperarPasswordUrl, getChangePasswordUrl, getRegistrarPersonaUrl, updatePassword, recoveryPassword, uploadPhotoUser } from \"../utils/urls\"\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales)\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales)\r\n    }\r\n    register = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRegistrarUrl(), datos)\r\n    }\r\n    registerPersona = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRegistrarPersonaUrl(), datos)\r\n    }\r\n    recoverPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRecuperarPasswordUrl(), datos)\r\n    }\r\n    resetPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRecuperarPasswordUrl(), datos)\r\n    }\r\n    changePassword = (props) => {\r\n        const { navigate, datos } = props\r\n        return AxiosInstance(navigate).post(getChangePasswordUrl(), datos)\r\n    }\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos)\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos)\r\n    }\r\n}","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item label=\"Email\"\r\n                                        name='email'\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email is not valid'\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete your email',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >Recover Password</Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useState } from \"react\"\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result, Alert } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [error, setError] = useState(null)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [passwordChanged, setPasswordChanged] = useState(true)\r\n    const [form] = Form.useForm()\r\n\r\n    const reset = async (values) => {\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setPasswordChanged(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            setOkMsg(<>Password has been successfully changed. <br />Please click <Link to='/login'>here</Link> log in again.</>)\r\n            setPasswordChanged(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n\r\n                {\r\n                    passwordChanged === true && okMsg ?\r\n                        <Result\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Form\r\n                                            layout={'vertical'}\r\n                                            form={form}\r\n                                            onFinish={reset}\r\n                                        >\r\n                                            <Form.Item label=\"New Password\"\r\n                                                name='password'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete new password',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Confirm new password\"\r\n                                                name='passwordConfirm'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Confirme new password',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                            </Form.Item>\r\n                                            <Form.Item>\r\n                                                <PasswordChecklist\r\n                                                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                    minLength={8}\r\n                                                    value={password}\r\n                                                    valueAgain={passwordConfirm}\r\n                                                    messages={{\r\n                                                        minLength: \"Password has more than 8 characters.\",\r\n                                                        specialChar: \"Password has special characters.\",\r\n                                                        number: \"Password has a number.\",\r\n                                                        capital: \"Password has a capital letter.\",\r\n                                                        match: \"Passwords match.\",\r\n                                                    }}\r\n                                                    onChange={(isValid) => { }}\r\n                                                />\r\n                                            </Form.Item>\r\n\r\n                                            {\r\n                                                error &&\r\n                                                <Alert\r\n                                                    message=''\r\n                                                    description={error}\r\n                                                    type='warning'\r\n                                                    showIcon\r\n                                                    closable\r\n                                                    banner\r\n                                                />\r\n                                            }\r\n\r\n                                            {\r\n                                                okMsg &&\r\n                                                <Alert\r\n                                                    message=''\r\n                                                    description={okMsg}\r\n                                                    type='success'\r\n                                                    showIcon\r\n                                                    closable\r\n                                                    banner\r\n                                                />\r\n                                            }\r\n                                            <div style={{\r\n                                                paddingTop: '10px'\r\n                                            }}>\r\n                                                <Form.Item>\r\n                                                    <Button\r\n                                                        type='primary'\r\n                                                        htmlType='submit'\r\n                                                        loading={isLoading}\r\n                                                        disabled={isLoading}\r\n                                                        block>Reset Password</Button>\r\n                                                </Form.Item>\r\n                                            </div>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                                {/* <AlertWait error={error} isLoading={isLoading} /> */}\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n\r\n            </Layout>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, posInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: posInvitadoPor.usuId, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject[0],\r\n                        cursos: results[1].data.listObject[0],\r\n                        modalidades: results[2].data.listObject[0],\r\n                        generos: results[3].data.listObject[0],\r\n                        trainingStatus: results[4].data.listObject[0],\r\n                        reportType: results[5].data.listObject[0],\r\n                        reportStatus: results[6].data.listObject[0]\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('Your account has been created successfully. Please log in.')\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label='Upload your profile picture'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >Select Photo</Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Country Code\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Phone Number\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>Are you currently working?</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                Please write the complete name of the institution.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Additional email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col>\r\n                                <Spin size='large'></Spin>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario, getOpcionesMenu } from '../utils/Utils'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const { opciones } = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject[0],\r\n                                cursos: results[1].data.listObject[0],\r\n                                modalidades: results[2].data.listObject[0],\r\n                                generos: results[3].data.listObject[0],\r\n                                trainingStatus: results[4].data.listObject[0],\r\n                                reportType: results[5].data.listObject[0],\r\n                                reportStatus: results[6].data.listObject[0]\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                // if (credenciales.perId === 5) {\r\n                //     history.push(\"/workplan\")\r\n                // } else {\r\n                //     history.push(\"/\")\r\n                // }\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        \"El recurso solicitado no esta disponible o no se encuentra\"\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].idPerfil }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        \"El recurso solicitado no esta disponible o no se encuentra\"\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    Welcome back\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    Log in to access your account\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label=\"Log in with your email\"\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter you email',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Enter your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter your password'\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password id=\"password\" name=\"password\" label='Password' />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Log in</Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>Forgot your password?</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react';\nimport { Route, withRouter, useLocation } from 'react-router-dom';\nimport App from './App';\n// import { Error } from './pages/Error';\n// import { NotFound } from './pages/NotFound';\n// import { Access } from './pages/Access';\n// import Register from './pages/Register';\nimport RecuperarPassword from './pages/RecuperarPassword';\nimport ResetPassword from './pages/ResetPassword';\n// import RegisterPYME from './pages/RegisterPersona';\n// import Help from './pages/Help';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n\nexport const ctx = React.createContext()\n\nconst AppWrapper = (props) => {\n\tlet location = useLocation();\n\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0)\n\t}, [location]);\n\n\tconst [colorScheme, setColorScheme] = useState('light')\n\n\tswitch (props.location.pathname) {\n\t\tcase '/login':\n\t\t\treturn <Route path=\"/login\" render={() => <Login colorScheme={colorScheme} />} />\n\t\t// case '/register':\n\t\t// \treturn <Route path=\"/register\" render={() => <Register colorScheme={colorScheme} />} />\n\t\tcase '/signup':\n\t\t\treturn <Route path=\"/signup\" render={() => <Signup colorScheme={colorScheme} />} />\n\t\t// case '/registerpyme':\n\t\t// \treturn <Route path=\"/registerpyme\" render={() => <RegisterPYME colorScheme={colorScheme} />} />\n\t\tcase '/recover':\n\t\t\treturn <Route path=\"/recover\" render={() => <RecuperarPassword colorScheme={colorScheme} />} />\n\t\tcase '/reset':\n\t\t\t\treturn <Route path=\"/reset\" render={() => <ResetPassword colorScheme={colorScheme} />} />\n\t\t// case '/error':\n\t\t// \treturn <Route path=\"/error\" render={() => <Error colorScheme={colorScheme} />} />\n\t\t// case '/notfound':\n\t\t// \treturn <Route path=\"/notfound\" render={() => <NotFound colorScheme={colorScheme} />} />\n\t\t// case '/access':\n\t\t// \treturn <Route path=\"/access\" render={() => <Access colorScheme={colorScheme} />} />\n\t\t// case '/help':\n\t\t// \treturn <Route path=\"/help\" render={() => <Help colorScheme={colorScheme} />} />\n\t\tdefault:\n\t\t\treturn <App setColorScheme={setColorScheme} />;\n\t}\n\n}\n\nexport default withRouter(AppWrapper);","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}