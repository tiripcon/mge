{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/Internationalization.jsx","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CountryTrainingService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","service/InformService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","pages/AlertWait.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","service/BeneficiaryService.jsx","service/CertificateService.jsx","components/beneficiary/Beneficiary.jsx","components/beneficiary/Beneficiaries.jsx","App.js","service/CuentaService.jsx","service/CatalogoService.jsx","pages/Login.jsx","pages/Signup.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getOpcionesMenu","informs","w","infTipo","catValor","infEstado","opcionesSubOpciones","undefined","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","id","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perNombre","push","gutter","removeItem","AppFooter","display","AppRightPanel","onRightPanelClick","getCulture","cultura","labels","contents","culture","getLabel","c","l","headers","AxiosInstance","navigate","axiosInstance","axios","create","interceptors","request","use","config","token","toast","error","Promise","reject","response","status","apiURL","getCatalogosPorPadreUrl","updateTraining","downloadInformByName","downloadCertificateByName","downloadCertificateByUuid","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","new","put","set","patch","upLoadPhoto","datos","getLessPostulants","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setError","documento","setDocumento","email","setEmail","setNombres","estado","setEstado","columnas","title","dataIndex","render","_","imagen","responsive","codigotel","celular","record","usuId","fetchData","a","estadoId","data","listObject","messageText","subTitle","extra","span","justify","Title","level","layout","xs","sm","md","lg","xl","Item","onChange","Group","states","s","catId","catNombre","direction","loading","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","fileList","setFileList","onRemove","file","newFileList","slice","splice","beforeUpload","URL","createObjectURL","handleUpload","FormData","append","success","update","values","trabaja","countryCode","sexoId","sexo","paisId","pais","usuarioActualizado","newUsuario","fechanac","moment","$d","align","initialValues","onFinish","xxl","name","width","multiple","rules","required","message","fieldNames","showSearch","options","generos","optionFilterProp","placement","paises","p","catDescripcion","srcSet","checked","htmlType","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","requests","forEach","all","then","results","catch","msgError","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","onClose","open","form","opcIcono","PerfilService","perfil","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","defaultChecked","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","guardar","perfilActualizado","eliminar","tableProps","statistics","hoverable","background","color","precision","prefix","suffix","description","Dashboard","users","setUsers","valueStyle","renderStatistics","tip","Paragraph","TrainingService","getByTraining","trainer","getById","training","pub","trainingService","UserInfo","trainings","setTrainings","fetchTrainings","idUsuario","centered","letterSpacing","strong","readOnly","t","entEstado","entFechaFin","entFechaIni","entId","entNombre","entModalidad","entPais","numPostulantes","marginBottom","reverse","renderTraining","showIcon","borderRadius","border","UsuarioNew","password","setPassword","passwordConfirm","setPasswordConfirm","validForm","setValidForm","insert","md5","fetchProfiles","Password","minLength","valueAgain","messages","specialChar","number","capital","match","isValid","User","user","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","state","setState","courses","setCourses","paddingBottom","cursoList","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CountryTrainingService","countryTraining","CourseService","course","baseTraining","entCultura","postulantService","countryTrainingService","courseService","Course","formPostulante","postulants","setPostulants","setPaises","setMessage","selectedModality","setSelectedModality","startDate","setStartDate","endDate","setEndDate","removePostulant","newPostulantsList","save","idRegion","idModalidad","idEstado","trainingStatus","regions","mode","option","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","cursos","resetFields","posEmail","closeIcon","Applicants","setCourse","applicants","setApplicants","postulanteList","posEstado","entRegion","criteria","searchCriteria","ciudad","filteredCourse","asistenciaList","asiValor","informeList","curNombre","substr","idCurso","curId","certificadoList","tc","cerEstado","posId","AttendanceService","attendance","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","attendanceService","informService","panelStyle","backgroundColor","Applicant","idTraining","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","isDownloading","setIsDownloading","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","downloadInform","column","eviUrl","whiteSpace","TextArea","showCount","maxLength","setInform","reportStatus","danger","renderInform","downloadCertificate","cerUuid","cerNombre","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","stringify","xhr","blob","Blob","saveAs","setAttendance","sendRateEmail","informe","idEntrenamiento","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","cerFechaCad","cerId","cerFechaReg","cerRuta","renderCertificate","WorkPlan","setPostulant","uploading","setUploading","sending","setSending","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","reportType","setItem","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","idInforme","sendFinalReport","informInserted","newInform","downloadFinalReportTemplate","beneficiarioList","entLimBen","f","Certificate","Classes","AlertWait","Training","loadPostulant","setLoadPostulant","setIsLoadingCountry","setIsLoadingCourse","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","setCountry","country","fetchCountries","newCourse","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","countries","countryTrainingList","paePais","modTraining","envios","reduce","promise","fn","resolve","flag","idPais","onDeselect","paeId","idNombreCurso","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","BeneficiaryService","beneficiary","getByPostulant","val","CertificateService","generate","send","certificate","downloadByUuid","renderPaisValor","Beneficiary","saveBeneficiary","closeBeneficiary","formBeneficiary","editDisabled","valuePropName","educationLevels","beneficiaryService","certificateService","Typography","confirm","Modal","Beneficiaries","operation","isOpening","setIsOpening","isLoadingBeneficiaries","setIsLoadingBeneficiaries","beneficiaryC1","setBeneficiaryC1","beneficiaryC2","setBeneficiaryC2","openC1","setOpenC1","openC2","setOpenC2","benId","selectedBeneficiary","setSelectedBeneficiary","openDeleteBeneficiary","setOpenDeleteBeneficiary","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","closeBeneficiaryC1","getBeneficiaryC1","idTipo","benTipo","benPais","idSexo","benSexo","idNivelInt","benNivelInt","saveBeneficiaryC1","newBeneficiary","time","closeBeneficiaryC2","getBeneficiaryC2","saveBeneficiaryC2","confirmDeleteBeneficiary","delBeneficiary","validateBeneficiary","sendCertificate","idPostulante","sendBeneficiaries","onOk","b","benTrabaja","typePersons","catReferencia","benDocumento","benNombres","benCargo","benNomEmpresa","benNumPer","benValidado","typeLoad","Collapse","confirmLoading","onCancel","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","location","useLocation","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","validateResetPassword","recoveryPassword","updatePassword","CatalogoService","getPaises","getPorPadre","catalogo","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","getEducationLevel","getTypePerson","getRegion","getCatalogo","cuentaService","catalogoService","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","opcionesVisible","mgeCatalogos","statusText","textTransform","actions","renderPerfil","backgroundImage","renderError","messageCode","Signup","search","decodeURIComponent","uuid","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","invitadopor","fetchCatalogos","registrar","RecuperarPassword","okMsg","setOkMsg","emailSent","setEmailSent","recuperar","banner","ResetPassword","setValidate","isValidating","setIsValidating","setIsValid","isResetting","setIsResetting","isReset","setIsReset","reset","validateRequest","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9ff0f23e.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\n      </div>\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nexport const toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nconst getInforms = () => localStorage.getItem('mgeInformList') ? JSON.parse(localStorage.getItem('mgeInformList')) : []\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const informs = getInforms()\r\n    let opciones = getDatosUsuario().opciones || []\r\n    //  Si existe informes se muestran las opciones de beneficiarios para registro y calificación.\r\n    if (informs.length > 1) {\r\n        // Si existe un WP aprobado y no existe un reporte final aprobado se habilita el registro de beneficiarios.\r\n        if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/registry') >= 0 ? { ...o, visible: true } : { ...o }))\r\n        else if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/qualification') >= 0 ? { ...o, visible: true } : { ...o }))\r\n    }\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined && o.visible === true)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getCultures = () => [\r\n    {\r\n        id: 'es_EC',\r\n        value: 'Español'\r\n    },\r\n    {\r\n        id: 'en_US',\r\n        value: 'English'\r\n    }\r\n]\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport AppMenu from \"./AppMenu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Typography } from \"antd\";\nimport { getDatosUsuario } from \"./utils/Utils\";\n\nconst AppTopbar = (props) => {\n  const history = useHistory();\n  const searchPanelDesktop = useRef(null);\n  const searchPanelMobile = useRef(null);\n\n  useEffect(() => {\n    if (props.searchActive) {\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\n      else searchPanelMobile.current.focus();\n    }\n  }, [props.searchActive]);\n\n  const datosUsuario = (e) => {\n    history.push(\"/myaccount\");\n  };\n\n  const cerrarSesion = (e) => {\n    localStorage.removeItem(\"mgeToken\");\n    localStorage.removeItem(\"mgeDatosUsuario\");\n    localStorage.removeItem(\"mgeInformList\");\n    history.push(\"/login\");\n  };\n\n  const logo = {\n    fontSize: \"1.5em\",\n    padding: 0,\n    margin: 0,\n  };\n\n  return (\n    <div className=\"layout-topbar\">\n      <div className=\"layout-topbar-wrapper\">\n        <div className=\"layout-topbar-left\">\n          <button\n            tabIndex=\"0\"\n            className=\"menu-button p-link\"\n            onClick={props.onMenuButtonClick}\n          >\n            <i className=\"pi pi-bars\"></i>\n          </button>\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n              MG\n            </span>\n            <span className=\"mge mge-bold mge-green\" style={logo}>\n              E\n            </span>\n          </div>\n        </div>\n\n        <AppMenu\n          menuMode={props.menuMode}\n          sidebarActive={props.sidebarActive}\n          sidebarStatic={props.sidebarStatic}\n          model={props.menu}\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          onMobileMenuActive={props.onMobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          onSidebarMouseOver={props.onSidebarMouseOver}\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\n          onToggleMenu={props.onToggleMenu}\n          resetActiveIndex={props.resetActiveIndex}\n          onMenuClick={props.onMenuClick}\n        />\n\n        <div className=\"layout-topbar-right\">\n          <ul className=\"layout-topbar-actions\">\n            <li\n              className={classNames(\"topbar-item user-profile\", {\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\n              })}\n            >\n              <button\n                className=\"p-link\"\n                style={{ cursor: \"pointer\" }}\n                onClick={props.onTopbarUserMenuClick}\n              >\n                {getDatosUsuario() && (\n                  <Row>\n                    <Col\n                      style={{\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        textAlign: \"right\",\n                        lineHeight: \"1em\",\n                      }}\n                    >\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\n                        {`${getDatosUsuario().nombres || \"\"} ${\n                          getDatosUsuario().apellidos || \"\"\n                        }`}\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\n                          <>\n                            <br />\n                            <Typography.Text\n                              type=\"secondary\"\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\n                            >\n                              {`${getDatosUsuario().perfiles[0].perNombre}`}\n                            </Typography.Text>\n                          </>\n                        )}\n                      </Typography.Text>\n                    </Col>\n                    <Col>\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\n                    </Col>\n                  </Row>\n                )}\n              </button>\n              <ul className=\"fadeInDown\">\n                <li onClick={datosUsuario}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-user-gear\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Profile</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                <li onClick={cerrarSesion}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-right-from-bracket\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Sign off</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppTopbar;\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from 'react';\n\nconst AppRightPanel = (props) => {\n\n\treturn (\n\t\t<div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n\t\t\t<div className=\"rightpanel-wrapper\" >\n\t\t\t\t<div className=\"rightpanel-section weather-section\">\n\t\t\t\t\t<div className=\"section-header\">\n\t\t\t\t\t\t<h6>Today</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"weather\">\n\t\t\t\t\t\t<img src=\"assets/demo/images/rightpanel/icon-sun.svg\" alt=\"freya-layout\" />\n\t\t\t\t\t\t<div className=\"weather-info\">\n\t\t\t\t\t\t\t<h6>Ankara, 22 May</h6>\n\t\t\t\t\t\t\t<h1>24º</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppRightPanel;","import { getDatosUsuario } from \"./Utils\"\r\nexport const getCulture = () => getDatosUsuario().cultura || 'en_US'\r\nexport const labels = {\r\n    resourceNotAvailable: 'resourceNotAvailable',\r\n    welcomeBack: 'welcomeBack',\r\n    loginAccess: 'loginAccess',\r\n    emailLogin: 'emailLogin',\r\n    passwordLogin: 'passwordLogin',\r\n    login: 'login',\r\n    enterEmail: 'enterEmail',\r\n    enterPassword: 'enterPassword',\r\n    emailNotValid: 'emailNotValid',\r\n    forgotPassword: 'forgotPassword',\r\n    recoverPassword: 'recoverPassword',\r\n    email: 'email',\r\n    completeEmail: 'completeEmail',\r\n    ok: 'ok',\r\n    save: 'save',\r\n    accept: 'accept',\r\n    yes: 'yes',\r\n    no: 'no',\r\n    cancel: 'cancel',\r\n    minimumBeneficiaries: 'minimumBeneficiaries',\r\n    beneficiaryTitle: 'beneficiaryTitle',\r\n    beneficiariesTitle: 'beneficiariesTitle',\r\n    deleteBeneficiaryTitle: 'deleteBeneficiaryTitle',\r\n    reConfirmDeleteBeneficiary: 'reConfirmDeleteBeneficiary',\r\n    sendBeneficiaryListTitle: 'sendBeneficiaryListTitle',\r\n    sendBeneficiaryListConfirm: 'sendBeneficiaryListConfirm'\r\n}\r\nconst contents = [\r\n    { id: 'resourceNotAvailable', labels: [{ culture: 'en_US', label: 'The requested resource is not available or cannot be found.' }, { culture: 'es_EC', label: 'El recurso solicitado no está disponible o no existe.' }] },\r\n    { id: 'welcomeBack', labels: [{ culture: 'en_US', label: 'Welcome back' }, { culture: 'es_EC', label: 'Bienvenido' }] },\r\n    { id: 'loginAccess', labels: [{ culture: 'en_US', label: 'Log in to access your account' }, { culture: 'es_EC', label: 'Ingresa para acceder a tu cuenta' }] },\r\n    { id: 'emailLogin', labels: [{ culture: 'en_US', label: 'Log in with your email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'passwordLogin', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'login', labels: [{ culture: 'en_US', label: 'Log in' }, { culture: 'es_EC', label: 'Ingresar' }] },\r\n    { id: 'enterEmail', labels: [{ culture: 'en_US', label: 'Enter you email' }, { culture: 'es_EC', label: 'Ingresa tu correo' }] },\r\n    { id: 'enterPassword', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Ingresa tu contraseña' }] },\r\n    { id: 'emailNotValid', labels: [{ culture: 'en_US', label: 'Email is not valid' }, { culture: 'es_EC', label: 'Correo no válido' }] },\r\n    { id: 'forgotPassword', labels: [{ culture: 'en_US', label: 'Forgot your password?' }, { culture: 'es_EC', label: '¿Olvidaste tu contraseña?' }] },\r\n    { id: 'recoverPassword', labels: [{ culture: 'en_US', label: 'Recover password' }, { culture: 'es_EC', label: 'Recuperar Contraseña' }] },\r\n    { id: 'email', labels: [{ culture: 'en_US', label: 'Email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'completeEmail', labels: [{ culture: 'en_US', label: 'Complete your email' }, { culture: 'es_EC', label: 'Ingresa tu correo' }] },\r\n    {\r\n        id: 'ok',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'OK'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'OK'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'save',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Save'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Guardar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'accept',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Accept'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Aceptar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'yes',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Yes'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Si'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'no',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'No'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'No'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'cancel',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Cancel'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Cancelar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'minimumBeneficiaries',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Minimum Beneficiaries'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Mínimo de Beneficiaries'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'beneficiaryTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Beneficiary'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Beneficiario'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'beneficiariesTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Beneficiaries'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Beneficiaries'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'deleteBeneficiaryTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Delete Beneficiary'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Eliminar Beneficiario'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'reConfirmDeleteBeneficiary',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'If you do not meet the minimum number of registered beneficiaries, your final report will be disabled. Continue anyway?'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Si no cumple con el mínimo de beneficiarios registrados se deshabilitara su reporte final. ¿Continuar de todos modos?'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sendBeneficiaryListTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Send Beneciary List'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Enviar Lista de Beneciarios'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sendBeneficiaryListConfirm',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Check beneficiary qualification/participation. Once sent, further editing will not be allowed and the certificate will be generated. Are you sure you want to send the list of beneficiaries?'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Verifique la calificación/participación de los beneficiarios. Una vez enviado, no se permitirán más ediciones y se generará el certificado. ¿Estás seguro de que quieres enviar la lista de beneficiarios?'\r\n            }\r\n        ]\r\n    }\r\n]\r\nexport const getLabel = (id) => contents.filter(c => c.id === id)[0].labels.filter(l => l.culture === getCulture())[0].label || 'Label undefined'\r\n","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport { getCulture } from './Internationalization'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst headers = {\r\n    \"Accept-Language\": getCulture()\r\n}\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                localStorage.removeItem('mgeInformList')\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    localStorage.removeItem('mgeInformList')\r\n                    toast.error('The session has expired. Please log in again.')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","// SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY EN ARCHIVO package.json\r\n// \"proxy\": \"http://20.65.110.204:44613\",\r\n\r\n// SOLO PARA DESARROLLO Y PRUEBAS\r\n// const apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA QA\r\n// const apiURL = 'http://qa.mygreenenterprise.org:8082/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA PRODUCCION\r\n// const apiURL = 'https://mygreenenterprise.org/uprime-mge-web/uprime/api'\r\nconst apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n//SERVICIOS MGE\r\n\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/insertCatalog`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogServiceRest/getCatalogByFilter`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/updateCatalog`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/deleteCatalog`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogServiceRest/getCatalogById`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsListByFather`\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsList`\r\n\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OptionServiceRest/insertOption`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OptionServiceRest/deleteOption`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OptionServiceRest/updateOption`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OptionServiceRest/getOptionsListByFather`\r\nexport const getOpcionesUrl = () => `${apiURL}/OptionServiceRest/getOptionsList`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OptionServiceRest/getOptionById`\r\n\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/ProfileServiceRest/insertProfile`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/ProfileServiceRest/updateProfile`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/ProfileServiceRest/deleteProfile`\r\nexport const getPerfilesUrl = () => `${apiURL}/ProfileServiceRest/getProfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/ProfileServiceRest/getProfileById`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/ProfileOptionServiceRest/getOptionsByProfileList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/insertProfileOption`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOptionServiceRest/updateProfileOption`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/deleteProfileOption`\r\n\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UserServiceRest/getUsersListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UserServiceRest/getUserById`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UserServiceRest/getUsersLessPostulants`\r\nexport const getAutenticarUrl = () => `${apiURL}/UserServiceRest/authenticateUser`\r\nexport const getAutorizarUrl = () => `${apiURL}/UserServiceRest/authorizeUser`\r\nexport const updatePassword = () => `${apiURL}/UserServiceRest/updatePassword`\r\nexport const recoveryPassword = () => `${apiURL}/UserServiceRest/recoveryPassword`\r\nexport const validateUserUuid = () => `${apiURL}/UserServiceRest/validateUserUuid`\r\nexport const addProfileUser = () => `${apiURL}/UserServiceRest/addProfileUser`\r\nexport const insertUsuario = () => `${apiURL}/UserServiceRest/insertUser`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UserServiceRest/updateUser`\r\nexport const enrollUsuario = () => `${apiURL}/UserServiceRest/enrollPostulant`\r\nexport const deletePerfilUsuario = () => `${apiURL}/UserServiceRest/deletePerfilUsuario`\r\nexport const getUsuariosUrl = () => `${apiURL}/UserServiceRest/getUsersList`\r\nexport const uploadPhotoUser = () => `${apiURL}/UserServiceRest/uploadPhotoUser`\r\n\r\nexport const insertTraining = () => `${apiURL}/TrainingServiceRest/insertTraining`\r\nexport const updateTraining = () => `${apiURL}/TrainingServiceRest/updateTraining`\r\nexport const getTrainingById = () => `${apiURL}/TrainingServiceRest/getTrainingById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/TrainingServiceRest/getTrainingByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/TrainingServiceRest/getTrainingList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulantServiceRest/insertPostulant`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulantServiceRest/sendEmailRegistry`\r\nexport const sendEmailEnroll = () => `${apiURL}/PostulantServiceRest/sendEmailEnroll`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulantServiceRest/getPostulantByTraining`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulantServiceRest/getTrainingByPostulant`\r\nexport const deletePostulant = () => `${apiURL}/PostulantServiceRest/deletePostulant`\r\nexport const validatePostulant = () => `${apiURL}/PostulantServiceRest/validatePostulant`\r\n\r\nexport const insertCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/insertCountryTraining`\r\nexport const getCountryTrainingByTraining = () => `${apiURL}/CountryTrainingServiceRest/getCountryTrainingByTraining`\r\nexport const deleteCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/deleteCountryTraining`\r\n\r\nexport const insertCourse = () => `${apiURL}/CourseServiceRest/insertCourse`\r\nexport const getCourseByTraining = () => `${apiURL}/CourseServiceRest/getCoursesByTraining`\r\nexport const deleteCourse = () => `${apiURL}/CourseServiceRest/deleteCourse`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AssistanceServiceRest/insertAssistance`\r\nexport const getAttendanceById = () => `${apiURL}/AssistanceServiceRest/getAssistanceById`\r\nexport const updateAttendance = () => `${apiURL}/AssistanceServiceRest/updateAssistance`\r\n\r\nexport const insertInform = () => `${apiURL}/ReportServiceRest/insertReport`\r\nexport const updateInform = () => `${apiURL}/ReportServiceRest/updateReport`\r\nexport const getInformById = () => `${apiURL}/ReportServiceRest/getReportById`\r\nexport const downloadInformByName = () => `${apiURL}/ReportServiceRest/downloadReportByName`\r\nexport const downloadWorkplan = () => `${apiURL}/ReportServiceRest/downloadWorkPlan`\r\nexport const downloadFinalReport = () => `${apiURL}/ReportServiceRest/downloadFinalReport`\r\nexport const sendEmailLoadInform = () => `${apiURL}/ReportServiceRest/sendEmailLoadReport`\r\nexport const sendEmailRateInform = () => `${apiURL}/ReportServiceRest/sendEmailRateReport`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenceServiceRest/insertEvidence`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificateServiceRest/generateCertificate`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificateServiceRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificateServiceRest/downloadCertificateByName`\r\nexport const downloadCertificateByUuid = () => `${apiURL}/CertificateServiceRest/downloadCertificateByUuid`\r\n\r\nexport const insertBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/insertBeneficiary`\r\nexport const updateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/updateBeneficiary`\r\nexport const getBeneficiaryById = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiaryById`\r\nexport const getBeneficiariesByPostulant = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiariesByPostulant`\r\nexport const deleteBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/deleteBeneficiary`\r\nexport const validateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/validateBeneficiary`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, uploadPhotoUser } from \"./../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\nconst config = { headers: { \"Accept-Language\": getCulture() } }\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos, config)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space, Image } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'usuId',\r\n      render: (_, r) => {\r\n        r.imagen !== undefined && r.imagen !== null && r.imagen.split('/').length > 0 ?\r\n          <img alt='' src={`./images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />\r\n          :\r\n          <img alt='' src='./assets/user.png' width={32} height={32} />\r\n      }\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'nombres',\r\n      render: (_, r) => `${r.nombres} ${r.apellidos}`\r\n    },\r\n    {\r\n      title: 'ID Number',\r\n      dataIndex: 'documento'\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      render: (_, record) => <Button key={record.usuId} type='primary' href={`/#/users/${record.usuId}`}>View</Button>\r\n    }\r\n  ]\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    setUsuarios([])\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Users Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"ID Number\">\r\n              <Input label='ID Number' type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Name\">\r\n              <Input label='Name' type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Email\">\r\n              <Input label='Email' type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"State\">\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n                {/* <Radio value={true}>Activo</Radio>\r\n                <Radio value={false}>Inactivo</Radio> */}\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>New User</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>Refresh</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('User updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('User updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            User\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >Cancel</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving}>Save</Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport OpcionService from './../../service/OpcionService'\r\n\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1).map(o => (\r\n              {\r\n                title: o.opcNombre,\r\n                key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`,\r\n                children: o.opcHijos ? o.opcHijos.map(o => (\r\n                  {\r\n                    title: o.opcNombre,\r\n                    key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`\r\n                  }\r\n                )) : []\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport PerfilService from '../../service/PerfilService'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Level',\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'State',\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? 'ACTIVE' : 'INACTIVE'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject.map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success('Profile saved successfully')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`An error ocurred: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Profile deleted successfully')\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Profiles Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                New Profile\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"Are you sure you want to delete the selected profiles?\" okText=\"Yes, deleter\" cancelText=\"No\" onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? 'Deleting' : 'Delete'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>Refresh</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Name\">\r\n                <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Level\">\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"State\">\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? 'Active' : 'Inactive'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? 'Saving' : 'Save'}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`Option ${perfilOpcionActualizado.pfoOpcId.opcNombre} updated successfully`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1)\r\n              .map(o => (\r\n                {\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n                }\r\n              ))\r\n            // .map(o => (\r\n            //   {\r\n            //     key: `${o.opcId}`,\r\n            //     opcNombre: o.opcNombre,\r\n            //     ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n            //     children: o.opcHijos.map(o => ({\r\n            //       key: `${o.opcId}`,\r\n            //       opcNombre: o.opcNombre,\r\n            //       ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0]\r\n            //     }))\r\n            //   }\r\n            // ))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoadingOpciones(false)\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success('Profile saved successfully')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Profile deleted')\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Profile {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Name\">\r\n                  <Input id=\"perNombre\" name=\"perNombre\" label='Name' type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Level\">\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"State\">\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? 'ACTIVE' : 'INACTIVE'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>Options</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? 'Saving' : 'Save'}\r\n                    </Button>\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Form, Spin, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst columnas = [\r\n    {\r\n        title: '',\r\n        render: (e) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'nombres',\r\n        render: (_, r) => `${r.nombres}`\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'apellidos',\r\n        render: (_, r) => `${r.apellidos}`\r\n    },\r\n    {\r\n        title: 'Country',\r\n        dataIndex: 'pais',\r\n        render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n            <Tooltip title={pais.catDescripcion}>\r\n                <img\r\n                    src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={pais.catDescripcion}></img>\r\n            </Tooltip>\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: <div style={{ textAlign: 'center' }}>Role</div>,\r\n        dataIndex: 'role',\r\n        render: (_, { perfiles }) => <div style={{ textAlign: 'center' }}>\r\n            {perfiles[0].perNombre}\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>View</Button>\r\n    }\r\n]\r\n\r\nconst statistics = [\r\n    {\r\n        id: 1,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#54873C',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER OF TRAINERS</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 2,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#70B450',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 3,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#385A28',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>APPLICANTS</Typography.Text>,\r\n            value: 80,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 4,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#636466',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>BENEFICIARIES</Typography.Text>,\r\n            value: 150,\r\n            precision: 0,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: ''\r\n        },\r\n        description: <>&nbsp;</>\r\n    }\r\n]\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n\r\n    const renderStatistics = ({ id, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}\r\n        >\r\n            <Card\r\n                {...props}\r\n            >\r\n                <Statistic\r\n                    {...data}\r\n                    valueStyle={{\r\n                        color: '#ffffff',\r\n                    }}\r\n                />\r\n                {description}\r\n            </Card>\r\n        </Col>\r\n\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject\r\n                setUsers(usuarios)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[15, 15]}>\r\n                {\r\n                    statistics && statistics.map(s => renderStatistics(s))\r\n                }\r\n            </Row>\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Table\r\n                                {...tableProps}\r\n                                rowKey='usuId'\r\n                                columns={columnas}\r\n                                dataSource={users}>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Badge, Card, Alert } from 'antd'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entModalidad, entNombre, entPais, numPostulantes }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>Regresar al inicio</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            usuario.perfiles && usuario.perfiles[0].perNombre\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Trainings</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description=\"Trainings not found.\"\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n            {/* <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/dashboard'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        Gestión de Usuario\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider> */}\r\n            {/* {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Espere un momento...</Typography.Text>\r\n                    </div> :\r\n                    <Form\r\n                        layout={'vertical'}\r\n                        form={form}\r\n                        initialValues={{\r\n                            layout: 'vertical',\r\n                        }}\r\n                    >\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Identificación\">\r\n                                    <Input id=\"documento\" name=\"documento\" label='Identificación' type='text' value={usuario.documento} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Tipo de Identificación\">\r\n                                    <Select defaultValue={usuario.tipoDocumento} value={usuario.tipoDocumento} onChange={onChangeTipoIdentificacion}>\r\n                                        {\r\n                                            tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Nombres\">\r\n                                    <Input id=\"nombres\" name=\"nombres\" label='Nombres' type='text' value={usuario.nombres} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Apellidos\">\r\n                                    <Input id=\"apellidos\" name=\"apellidos\" label='Apellidos' type='text' value={usuario.apellidos} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                                <Form.Item label=\"Dirección\">\r\n                                    <Input id=\"direccion\" name=\"direccion\" label='Dirección' type='text' value={usuario.direccion} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Email\">\r\n                                    <Input id=\"email\" name=\"email\" label='Email' type='text' value={usuario.email} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Teléfono\">\r\n                                    <Input id=\"telefono\" name=\"telefono\" label='Teléfono' type='text' value={usuario.telefono} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Login\">\r\n                                    <Input id=\"login\" name=\"login\" label='Login' type='text' value={usuario.login} onChange={onChange} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Contraseña\">\r\n                                    <Input.Password id=\"password\" name=\"password\" label='Contraseña' value={usuario.password} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Estado\">\r\n                                    <Select\r\n                                        defaultValue={usuario.estado.catValor}\r\n                                        value={usuario.estado.catValor}\r\n                                        onChange={onChangeEstado}\r\n                                    >\r\n                                        {\r\n                                            estados && estados.map(e => renderEstado(e))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" onClick={(e) => guardar(e)} disabled={isSaving}\r\n                                loading={isSaving}\r\n                            >\r\n                                {isSaving ? 'Guardando...' : 'Guardar'}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsSaving(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0) {\r\n                handleUpload(usuarioActualizado)\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(\"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setError(\"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>Return to home</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        New User\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Please wait...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='Upload your profile picture'\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >Select Photo</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label=\"First Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete first Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label=\"Last Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete last Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label='Sex'\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select sex',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label=\"Date of birth\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select date of birth',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>ID Number</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                This is the unique identification number issued by the country of residence.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete ID Number',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label=\"Country\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label=\"City\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete city',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Country Code\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country code',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Phone Number\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete phone number',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>Are you currently working?</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                Please write the complete name of the institution.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label=\"Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label=\"Additional Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete additional email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Additional email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Create your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Create your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Confirm your password\"\r\n                                            name='passwordConfirm'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Confirm your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                    specialChar: \"Password has special characters.\",\r\n                                                    number: \"Password has a number.\",\r\n                                                    capital: \"Password has a capital letter.\",\r\n                                                    match: \"Passwords match.\",\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label='Profile'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select profile',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label='State'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select state',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >Cancel</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving}>Save</Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      toast.error(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        toast.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  My Account\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => { formUser.submit() }}>Save</Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={currentlyWorking}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card, Checkbox } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [state, setState] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado, cursoList }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Space direction='horizontal'>\r\n                                <Typography.Text type='secondary'>\r\n                                    {cursoList.length} courses\r\n                                </Typography.Text>\r\n                                <Typography.Text type='secondary'>\r\n                                    {numPostulantes} applicants\r\n                                </Typography.Text>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                View\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        let trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        if (state) {\r\n            trainer = { ...trainer, estado: !state }\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mgeCard\" style={{\r\n                paddingTop: '15px',\r\n                paddingBottom: '15px'\r\n            }}>\r\n                <Row>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    >\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                            Trainings\r\n                        </h3>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                        style={{\r\n                            textAlign: 'right'\r\n                        }}\r\n                    >\r\n                        <Space>\r\n                            <Button\r\n                                type='default'\r\n                                loading={isLoading}\r\n                                disabled={isLoading}\r\n                                style={{ width: '120px' }}\r\n                                onClick={() => {\r\n                                    fetchData()\r\n                                }}>Refresh</Button>\r\n                            <Button\r\n                                type='primary'\r\n                                disabled={isLoading}\r\n                                style={{ width: '120px' }}\r\n                                onClick={() => {\r\n                                    navigate.push('/trainingnew')\r\n                                }}>New Training</Button>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'end', paddingTop: '10px', paddingBottom: '10px' }}>\r\n                    <Checkbox checked={state} onChange={(e) => setState(e.target.checked)}>Inactive only</Checkbox>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\nconst config = { headers: { \"Accept-Language\": getCulture() } }\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { insertCountryTraining, getCountryTrainingByTraining, deleteCountryTraining } from \"../utils/urls\";\r\nexport class CountryTrainingService {\r\n    put = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).put(insertCountryTraining(), countryTraining)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(getCountryTrainingByTraining(), countryTraining)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(deleteCountryTraining(), countryTraining)\r\n    }\r\n}\r\n\r\nexport default CountryTrainingService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, Alert, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getCultures, getDatosUsuario } from '../../utils/Utils'\r\nimport { getCulture } from '../../utils/Internationalization'\r\n\r\nconst baseTraining = {\r\n  entCultura: getCulture()\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [paises, setPaises] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  // const renderCourse = ({ catId, catNombre, catValor }) =>\r\n  //   <Col key={catId} span={24}>\r\n  //     <Form.Item\r\n  //       name={[catValor]}\r\n  //       label={`Number of beneficiaries for ${catNombre}`}\r\n  //       rules={[\r\n  //         {\r\n  //           required: true,\r\n  //           message: `Complete number of beneficiaries for ${catNombre}`\r\n  //         },\r\n  //       ]}\r\n  //     >\r\n  //       <Input />\r\n  //     </Form.Item>\r\n  //   </Col>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `Then email ${postulant} already exists.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${postulant} successfully added.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${email} successfully removed.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      idRegion: values.idRegion,\r\n      entCultura: values.entCultura,\r\n      idModalidad: values.idModalidad,\r\n      entFechaIni: values.entFechaIni,\r\n      entFechaFin: values.entFechaFin,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar Paises\r\n        const requests = []\r\n        if (paises.length > 0) {\r\n          paises.forEach(p => {\r\n            requests.push(countryTrainingService.put({\r\n              navigate, countryTraining: {\r\n                \"idPais\": p.value,\r\n                \"idEntrenamiento\": data.listObject[0].entId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar cursos\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`It was not possible to add the applicant: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(\"An error occurred.\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      New Training\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >Save Draft</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                      onClick={() => {\r\n                        toast.success('Training published')\r\n                      }}\r\n                    >Publish</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n\r\n                <Form.Item\r\n                  name='idRegion'\r\n                  label=\"Region\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select region',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().regions}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entCultura'\r\n                  label=\"Language\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select language',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'value',\r\n                      value: 'id'\r\n                    }}\r\n                    options={getCultures()}\r\n                    showSearch\r\n                    optionFilterProp=\"value\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label=\"Country\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select country',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name='idPais'\r\n                    mode='multiple'\r\n                    onChange={(_, option) => {\r\n                      setPaises(option)\r\n                    }}\r\n                  >\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {/* <Col span={16}>\r\n                <Form.Item\r\n                  name='name'\r\n                  label=\"Training name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete training name',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col> */}\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label=\"Modality\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select modality',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label=\"Start Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select start date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label=\"End Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select end date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {/* <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='entLimBen'\r\n                  label=\"Number of beneficiaries\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Number of beneficiaries',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label='Courses'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select courses',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              {/* <>\r\n                {\r\n                  courses && courses.map(c => renderCourse(c))\r\n                }\r\n              </> */}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label='Applicants emails'\r\n                  extra='Press enter to add email'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete applicants',\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: 'Email is not valid'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList.filter(a => a.posEstado.catValor === 'EST_ENR'))\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        {/* <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col> */}\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.filter(p => p.posEstado.catValor === 'EST_ENR')}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadInformByName, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Descriptions, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport { getCulture } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              Download\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item\r\n            style={{\r\n              whiteSpace: 'pre-wrap'\r\n            }}\r\n            label={\r\n              <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n            }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              Comments:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'TYP_INF_WPL' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, approve\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending\r\n                  }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >Approve</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to reject the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, reject\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >Reject</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Certificate&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Expires: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n              >Download</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByUuid(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": getCulture(),\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({ cerUuid }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      if (data) toast.success('Attendance successfully saved')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      if (data) toast.success('Email sent successfully')\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'TYP_INF_WPL' ? commentWorkplan : catValor === 'TYP_INF_FIR' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = { idEntrenamiento: idTraining, posId: id }\r\n    try {\r\n      const { data } = await postulantService.getByTraining({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].entId.cursoList\r\n        const postulant = data.listObject[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error('An error occurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Role:\r\n                            </Typography.Text>\r\n                            <br />Applicant\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Invited by:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label=\"First Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label=\"Last Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label=\"Sex\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label=\"Date Birth\"\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label=\"Country\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label=\"City\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label=\"Country Code\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label=\"Phone number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label=\"ID Number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label=\"Currenty Working\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label=\"Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label=\"Additional Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Attendance\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >Save</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const fileName = 'WorkplanTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            loading={uploading || sending}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : sending ? 'Sending' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_WPL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Workplan template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Collapse, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n        const fileName = 'FinalReportTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>\r\n                                            Copy evidence link\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label='URL'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            loading={uploading || isLoading || sending}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : isLoading ? 'Saving' : sending ? 'Sending' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ idInforme }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId: idInforme }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Evidence sended successfully')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_FIR')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Final Report template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                postulant && postulant.beneficiarioList && postulant.beneficiarioList.length >= (postulant.entId.entLimBen || 1) ?\r\n                                    <Collapse\r\n                                        accordion\r\n                                        bordered={false}\r\n                                        expandIconPosition='end'\r\n                                        style={{\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                        }\r\n                                    </Collapse>\r\n                                    :\r\n                                    <Result\r\n                                        title={`There must be at least ${postulant.entId && (postulant.entId.entLimBen || 1)} registered beneficiaries to upload your final report.`}\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/beneficiaries/registry')\r\n                                                }}\r\n                                            >\r\n                                                Register Beneficiaries\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Result } from 'antd'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getCulture } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0\r\n                                &&\r\n                                postulant.certificadoList.length > 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <Result\r\n                                    title=\"You will see your certificate once your final report is approved and you submit your beneficiary list.\"\r\n                                    extra={\r\n                                        <Button type=\"primary\" key=\"console\"\r\n                                            onClick={\r\n                                                () => {\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                        navigate.push('/finalreport') : navigate.push('/beneficiaries/qualification')\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                    'Send Final Report' : 'Send list of beneficiaries'\r\n                                            }\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography } from 'antd'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Classes = () => {\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        try {\r\n            const { data } = await postulantService.getTraining({ navigate, postulant: { idUsuario: getDatosUsuario().usuarioId } })\r\n            const postulant = data.listObject[0]\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(postulant.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Trainings\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin, Typography } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading, message } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col style={{ textAlign: 'center' }}>\r\n                                <Spin size='large'></Spin>\r\n                                {\r\n                                    message && <Typography.Paragraph>\r\n                                        {message}\r\n                                    </Typography.Paragraph>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    message: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, List, Card, Checkbox, Image, Alert, Tooltip, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getCatalogos, getCultures, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\nconst postulantService = new PostulantService()\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCountry, setIsLoadingCountry] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' || training.entEstado.catValor === 'ACTIVE' ?\r\n                            <>\r\n                                <Tooltip title='Click to send invitation email'>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCountry = async (country) => {\r\n        setIsSaving(true)\r\n        const countryTraining = { ...country, idEntrenamiento: training.entId }\r\n        if (countryTraining.checked) {\r\n            try {\r\n                const { data } = await countryTrainingService.put({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await countryTrainingService.del({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `Then email ${posEmail} already exists.`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${posEmail} successfully saved.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${postulant.posEmail} successfully deleted.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setTraining({\r\n                    ...training,\r\n                    countries: training.countryTrainingList.map(c => c.paePais.catId),\r\n                    courses: training.cursoList.map(c => c.curNombre.catId),\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n                setPaises(training.countryTrainingList)\r\n                setCourses(training.cursoList)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCountries = async () => {\r\n        setIsLoadingCountry(true)\r\n        const countryTraining = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await countryTrainingService.getByTraining({ navigate, countryTraining })\r\n            if (data) {\r\n                const countries = data.listObject\r\n                setPaises(countries)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCountry(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject[0].postulanteList\r\n                setPostulants(postulants)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        const training = {\r\n            idRegion: values.entRegion.catId,\r\n            entId: values.entId,\r\n            entCultura: values.entCultura,\r\n            entFechaFin: values.entFechaFin\r\n        }\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await trainingService.set({ navigate, training })\r\n            if (data) {\r\n                toast.success(`Training ${data.listObject[0].entNombre} updated successfully`)\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error('Could not send email', { position: 'bottom-center' })\r\n            else\r\n                toast.success('Email sent successfully', { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\", { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (paises.length < 1 || courses.length < 1 || postulants.length < 1) {\r\n            toast.error('Add at least one country, one course and one applicant')\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            entCultura: training.entCultura,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error('Could not send email')\r\n                                    else\r\n                                        toast.success('Email sent successfully')\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\")\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving || isPublishing || isSendingEmail}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        Edit Training\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >Save Draft</Button>\r\n                                                    <Popconfirm title=\"Are you sure to publish the training?\" okText=\"Yes, publish\" cancelText=\"No\" onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >Publish</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col span={24} style={{ display: 'none' }}>\r\n                                    <Form.Item\r\n                                        name='entId'\r\n                                        label=\"Id Training\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete ID',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name={['entRegion', 'catId']}\r\n                                                label=\"Region\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select region',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    showSearch\r\n                                                    options={getCatalogos().regions}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name='entCultura'\r\n                                                label=\"Language\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select language',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'value',\r\n                                                        value: 'id'\r\n                                                    }}\r\n                                                    options={getCultures()}\r\n                                                    showSearch\r\n                                                    optionFilterProp=\"value\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='countries'\r\n                                                label=\"Country\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select country',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    mode='multiple'\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={\r\n                                                        getCatalogos().paises.map(p => {\r\n                                                            const { catNombre, catDescripcion } = p\r\n                                                            const flag = catDescripcion.toLowerCase()\r\n                                                            return (\r\n                                                                {\r\n                                                                    ...p,\r\n                                                                    catNombre: <>\r\n                                                                        <img\r\n                                                                            src={`https://flagcdn.com/24x18/${flag}.png`}\r\n                                                                            srcSet={`https://flagcdn.com/48x36/${flag}.png 2x,https://flagcdn.com/72x54/${flag}.png 3x`}\r\n                                                                            width=\"24\"\r\n                                                                            height=\"18\"\r\n                                                                            alt={catNombre} />&nbsp;\r\n                                                                        {catNombre}\r\n                                                                    </>\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        )\r\n                                                    }\r\n                                                    onSelect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: true,\r\n                                                            idPais: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: false,\r\n                                                            paeId: paises.filter(c => c.paePais.catId === option.catId).length > 0 ? paises.filter(c => c.paePais.catId === option.catId)[0].paeId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label=\"Trainig name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete trainig name',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label=\"Modality\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select modality',\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'\r\n                                                >\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label=\"Start Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select start date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label=\"End Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select end date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {/* <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entLimBen'\r\n                                                label=\"Number of beneficiaries\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Number of beneficiaries',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <InputNumber style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row> */}\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='courses'\r\n                                                label='Courses'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select courses',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    mode='multiple'\r\n                                                    showSearch\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={getCatalogos().cursos}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onSelect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: true,\r\n                                                            idNombreCurso: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: false,\r\n                                                            curId: courses.filter(c => c.curNombre.catId === option.catId).length > 0 ? courses.filter(c => c.curNombre.catId === option.catId)[0].curId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isPublishing || isSendingEmail}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label='Applicants emails'\r\n                                                extra='Press enter to add email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete applicants',\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image, Tag } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        {/* <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col> */}\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, { posId, usuId }) => <div style={{ textAlign: 'center' }}>\r\n                                                {\r\n                                                    usuId ?\r\n                                                        <Button type='primary' href={`/#/trainingapplicant/${posId}/${id}`}>View</Button>\r\n                                                        :\r\n                                                        <Tag color='#108ee9'>Not enrolled</Tag>\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item\r\n                        style={{\r\n                            whiteSpace: 'pre-wrap'\r\n                        }}\r\n                        label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n                            }\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        // const training = { entId: idTraining, posId: id }\r\n        const training = { idEntrenamiento: idTraining, posId: id }\r\n        try {\r\n            // const { data } = await postulantService.getById({ navigate, training })\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                // const courses = data.listObject[0].cursoList\r\n                // const postulant = data.listObject[0].postulanteList.filter(p => p.posId === parseInt(id))[0]\r\n                const courses = data.listObject[0].entId.cursoList\r\n                const postulant = data.listObject[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error('An error occurred')\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />Applicant\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Invited by:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            Attendance\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { deleteBeneficiary, getBeneficiariesByPostulant, getBeneficiaryById, insertBeneficiary, updateBeneficiary, validateBeneficiary } from '../utils/urls'\r\nexport class BeneficiaryService {\r\n    put = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).put(insertBeneficiary(), beneficiary)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(updateBeneficiary(), beneficiary)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiaryById(), beneficiary)\r\n    }\r\n    getByPostulant = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiariesByPostulant(), beneficiary)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(deleteBeneficiary(), beneficiary)\r\n    }\r\n    val = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(validateBeneficiary(), beneficiary)\r\n    }\r\n}\r\n\r\nexport default BeneficiaryService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, downloadCertificateByUuid, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n    downloadByUuid = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByUuid(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React from 'react'\r\nimport { Col, Row, Space, Button, Form, Select, InputNumber, Input, Switch } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            alt={e.catNombre}\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.substr(0, 2).toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n        ></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst Beneficiary = ({ type, beneficiary, saveBeneficiary, isSaving, closeBeneficiary }) => {\r\n    const [formBeneficiary] = Form.useForm()\r\n\r\n    if (type === 1)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete de ID Number'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Country'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete City'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Sex'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name='benTrabaja'\r\n                                label='Are you currently working?'\r\n                                valuePropName='checked'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idNivelInt']}\r\n                                label='Level Instruction'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Level Instruction'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().educationLevels}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? 'Saving' : 'Save'\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n    if (type === 2)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete ID Number'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Country'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete City'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Sex'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benIdEmpresa']}\r\n                                label='Company ID'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Company ID'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNomEmpresa']}\r\n                                label='Company Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Company Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCargo']}\r\n                                label='Job Title'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Job Title'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNumPer']}\r\n                                label='Total Collaborators'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Total Collaborators'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Row gutter={[10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benHombres']}\r\n                                        label='Men'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Number of men'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benMujeres']}\r\n                                        label='Women'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Number of women'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? 'Saving' : 'Save'\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default Beneficiary","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Col, Row, Space, Button, Table, Image, Drawer, Typography, Collapse, Popconfirm, Switch, Result, Modal } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport { getCatalogos, getDatosUsuario, toCapitalize } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport BeneficiaryService from './../../service/BeneficiaryService'\r\nimport CertificateService from '../../service/CertificateService'\r\nimport Beneficiary from './Beneficiary'\r\n\r\nconst postulantService = new PostulantService()\r\nconst beneficiaryService = new BeneficiaryService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst { Title, Paragraph, Text } = Typography\r\nconst { confirm } = Modal\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst Beneficiaries = () => {\r\n    const navigate = useHistory()\r\n    const { operation } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isOpening, setIsOpening] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingBeneficiaries, setIsLoadingBeneficiaries] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n    const [postulant, setPostulant] = useState({})\r\n    const [beneficiaryC1, setBeneficiaryC1] = useState(null)\r\n    const [beneficiaryC2, setBeneficiaryC2] = useState(null)\r\n    const [openC1, setOpenC1] = useState(false)\r\n    const [openC2, setOpenC2] = useState(false)\r\n    const [selectedBeneficiary, setSelectedBeneficiary] = useState({ benId: 0 })\r\n    const [openDeleteBeneficiary, setOpenDeleteBeneficiary] = useState(false);\r\n\r\n    const [isGenerating, setIsGenerating] = useState(false)\r\n    const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n\r\n    const closeBeneficiaryC1 = () => {\r\n        setOpenC1(false)\r\n    }\r\n\r\n    const getBeneficiaryC1 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC1(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                idNivelInt: data.listObject[0].benNivelInt.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC1(beneficiary)\r\n            setOpenC1(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC1 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC1()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const newBeneficiary = time => new Promise(resolve => setTimeout(resolve, time * 1000))\r\n\r\n    const closeBeneficiaryC2 = () => {\r\n        setOpenC2(false)\r\n    }\r\n\r\n    const getBeneficiaryC2 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC2(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC2(beneficiary)\r\n            setOpenC2(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC2 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC2()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const showReconfirmDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(true)\r\n    }\r\n\r\n    const confirmDeleteBeneficiary = async () => {\r\n        setIsDeleting(true)\r\n        try {\r\n            const { data } = await beneficiaryService.del({ navigate, beneficiary: selectedBeneficiary })\r\n            if (data) {\r\n                toast.success('Beneficiary successfully removed')\r\n                fetchData(2)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setSelectedBeneficiary({ benId: 0 })\r\n            setIsDeleting(false)\r\n            setOpenDeleteBeneficiary(false)\r\n        }\r\n    }\r\n\r\n    const cancelDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(false)\r\n    }\r\n\r\n    const delBeneficiary = async ({ benId }) => {\r\n        setSelectedBeneficiary({ benId })\r\n        if ((postulant.beneficiarioList.length - 1) < (postulant.entId.entLimBen || 1)) {\r\n            showReconfirmDeleteBeneficiary()\r\n        } else {\r\n            setIsDeleting(true)\r\n            try {\r\n                const { data } = await beneficiaryService.del({ navigate, beneficiary: { benId } })\r\n                if (data) {\r\n                    toast.success('Beneficiary successfully removed')\r\n                    fetchData(2)\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n            } finally {\r\n                setSelectedBeneficiary({ benId: 0 })\r\n                setIsDeleting(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateBeneficiary = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = await beneficiaryService.val({ navigate, beneficiary })\r\n            if (data)\r\n                toast.success('Beneficiary successfully updated')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendCertificate = async ({ cerId }) => {\r\n        setIsSendingCertificate(true)\r\n        try {\r\n            const certificate = { cerId }\r\n            const { data } = await certificateService.send({ navigate, certificate })\r\n            if (data) toast.success('Certificate sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Certificate send failed')\r\n        } finally {\r\n            setIsSendingCertificate(false)\r\n        }\r\n    }\r\n\r\n    const generate = async ({ idCurso, idPostulante }) => {\r\n        setIsGenerating(true)\r\n        try {\r\n            const course = { idCurso, idPostulante }\r\n            const { data } = await certificateService.generate({ navigate, course })\r\n            const certificate = data.listObject[0]\r\n            toast.success('Certificate generated successfully')\r\n            sendCertificate(certificate)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    const sendBeneficiaries = async ({ idCurso, idPostulante }) => {\r\n        confirm({\r\n            title: getLabel(labels.sendBeneficiaryListTitle),\r\n            icon: <anticons.ExclamationCircleFilled />,\r\n            content: getLabel(labels.sendBeneficiaryListConfirm),\r\n            okText: getLabel(labels.ok),\r\n            cancelText: getLabel(labels.cancel),\r\n            onOk() {\r\n                generate({ idCurso, idPostulante })\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCourse = ({ curId, curNombre }, posId) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            operation === 'registry' &&\r\n                            <>\r\n                                {\r\n                                    postulant.beneficiarioList && postulant.beneficiarioList.filter(b => b.idCurso === curId && b.idPostulante === posId).length >= (postulant.entId.entLimBen || 1) ?\r\n                                        <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                        :\r\n                                        <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                }\r\n                            </>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' &&\r\n                            <>\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.filter(c => c.idCurso === curId && c.idPostulante === posId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                            <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                            :\r\n                                            <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                    }\r\n                                </>\r\n                            </>\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography>\r\n                            <Text strong style={{ fontSize: '1.1em' }}>\r\n                                {curNombre.catNombre}\r\n                            </Text>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            <Row>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Typography>\r\n                        <Paragraph>\r\n                            <Text type='secondary' strong>\r\n                                {`${getLabel(labels.minimumBeneficiaries)} (${postulant.entId.entLimBen || 1})`}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    style={{ textAlign: 'right' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type='default'\r\n                            loading={isLoading || isLoadingBeneficiaries}\r\n                            disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                            onClick={() => {\r\n                                fetchData(2)\r\n                            }}>Refresh</Button>\r\n                        {\r\n                            postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 && <Button\r\n                                type='primary'\r\n                                loading={isOpening}\r\n                                disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                                onClick={() => {\r\n                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC1(null)\r\n                                            setBeneficiaryC1({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_NAT'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC1(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC2(null)\r\n                                            setBeneficiaryC2({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_LEG'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC2(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    }\r\n                                }}>New Beneficiary</Button>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                            <Button type='primary'\r\n                                loading={isGenerating || isSendingCertificate}\r\n                                disabled={isGenerating || isSendingCertificate || isLoading || isLoadingBeneficiaries}\r\n                                onClick={() => sendBeneficiaries(\r\n                                    {\r\n                                        idCurso: curId,\r\n                                        idPostulante: posId\r\n                                    })}\r\n                            >\r\n                                {\r\n                                    isGenerating || isSendingCertificate ? 'Sending' : 'Send'\r\n                                }\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                postulant && postulant.beneficiarioList &&\r\n                <Table\r\n                    loading={isLoading || isLoadingBeneficiaries}\r\n                    {...tableProps}\r\n                    rowKey='benId'\r\n                    columns={[\r\n                        {\r\n                            title: 'ID Number',\r\n                            dataIndex: 'benDocumento',\r\n                            render: (_, { benDocumento }) => `${benDocumento}`,\r\n                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        {\r\n                            title: 'Name',\r\n                            dataIndex: 'benNombres',\r\n                            render: (_, { benNombres }) => `${benNombres}`\r\n                        },\r\n                        {\r\n                            title: 'Country',\r\n                            dataIndex: 'benPais',\r\n                            render: (_, { benPais }) =>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png`}\r\n                                        srcSet={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${benPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                        width=\"32\"\r\n                                        height=\"24\"\r\n                                        alt={benPais.catNombre}></img>\r\n                                </div>\r\n                        },\r\n                        {\r\n                            title: 'City',\r\n                            dataIndex: 'ciudad',\r\n                            render: (_, { ciudad }) => `${ciudad}`,\r\n                            responsive: ['sm', 'md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Sex',\r\n                                    dataIndex: 'benSexo',\r\n                                    render: (_, { benSexo }) => `${benSexo.catNombre}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Job Title',\r\n                                    dataIndex: 'benCargo',\r\n                                    render: (_, { benCargo }) => `${benCargo}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Is Working',\r\n                                    dataIndex: 'benTrabaja',\r\n                                    render: (_, { benTrabaja }) => <>{benTrabaja ? 'Yes' : 'No'}</>,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Company',\r\n                                    dataIndex: 'benNomEmpresa',\r\n                                    render: (_, { benNomEmpresa }) => `${benNomEmpresa}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Ins. Level',\r\n                                    dataIndex: 'benNivelInt',\r\n                                    render: (_, { benNivelInt }) => `${benNivelInt.catNombre}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Total Persons',\r\n                                    dataIndex: 'benNumPer',\r\n                                    render: (_, { benNumPer }) => `${benNumPer}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        {\r\n                            title: 'Actions',\r\n                            dataIndex: '',\r\n                            render: (_, record) =>\r\n                                <Space>\r\n                                    <Button type='primary'\r\n                                        icon={<anticons.FolderOpenFilled />}\r\n                                        onClick={() => {\r\n                                            if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                                getBeneficiaryC1(record)\r\n                                            } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                                getBeneficiaryC2(record)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    {\r\n                                        operation === 'registry' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                                        <>\r\n                                            <Popconfirm title=\"Are you sure you want to delete the beneficiary?\" okText={getLabel(labels.yes)} cancelText={getLabel(labels.cancel)} onConfirm={() => delBeneficiary(record)}\r\n                                                okButtonProps={{\r\n                                                    loading: isDeleting,\r\n                                                    disabled: isDeleting\r\n                                                }}\r\n                                            >\r\n                                                <Button type='default'\r\n                                                    danger\r\n                                                    icon={<anticons.DeleteFilled />}\r\n                                                    loading={isDeleting}\r\n                                                    disabled={isDeleting}\r\n                                                />\r\n                                            </Popconfirm>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        operation === 'qualification' &&\r\n                                        <Switch\r\n                                            defaultChecked={record.benValidado}\r\n                                            onChange={(e) => {\r\n                                                validateBeneficiary({ ...record, benValidado: e })\r\n                                            }}\r\n                                            loading={isSaving}\r\n                                            disabled={postulant.certificadoList.filter(c => c.idCurso === curId).length > 0}\r\n                                        />\r\n                                    }\r\n                                </Space>\r\n                        }\r\n                    ]}\r\n                    dataSource={postulant.beneficiarioList.filter(b => b.idCurso === curId)}>\r\n                </Table>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const fetchData = async (typeLoad) => {\r\n        setLoad(false)\r\n        if (typeLoad) {\r\n            if (typeLoad === 1) {\r\n                setIsLoading(true)\r\n            } else if (typeLoad === 2) {\r\n                setIsLoadingBeneficiaries(true)\r\n            }\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            if (typeLoad) {\r\n                if (typeLoad === 1) {\r\n                    setIsLoading(false)\r\n                } else if (typeLoad === 2) {\r\n                    setIsLoadingBeneficiaries(false)\r\n                }\r\n            } else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px 20px 6px 20px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                        <Typography>\r\n                            <Title type='secondary' level={3}>\r\n                                {getLabel(labels.beneficiariesTitle)} {` ${toCapitalize(operation)}`}\r\n                            </Title>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row justify='center'>\r\n                {\r\n                    isLoading ?\r\n                        <AlertWait message='Loading...' isLoading={isLoading} />\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                operation === 'registry' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={`\r\n                                        There must be at least one approved workplan to register beneficiaries.\r\n                                        `}\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/workplan')\r\n                                                        }}\r\n                                                    >\r\n                                                        Send Workplan\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n                            {\r\n                                operation === 'qualification' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title=\"There must be at least one approved final report to qualify beneficiaries.\"\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/finalreport')\r\n                                                        }}\r\n                                                    >\r\n                                                        Send Final Report\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </Col>\r\n                }\r\n            </Row >\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC1} open={openC1}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC1}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC1 && <Beneficiary type={1} beneficiary={beneficiaryC1} saveBeneficiary={saveBeneficiaryC1} closeBeneficiary={closeBeneficiaryC1} isSaving={isSaving} />\r\n                }\r\n            </Drawer >\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC2} open={openC2}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC2}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC2 && <Beneficiary type={2} beneficiary={beneficiaryC2} saveBeneficiary={saveBeneficiaryC2} closeBeneficiary={closeBeneficiaryC2} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Modal\r\n                title={getLabel(labels.deleteBeneficiaryTitle)}\r\n                open={openDeleteBeneficiary}\r\n                onOk={confirmDeleteBeneficiary}\r\n                confirmLoading={isDeleting}\r\n                onCancel={cancelDeleteBeneficiary}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.cancel)}\r\n            >\r\n                <p>\r\n                    {\r\n                        getLabel(labels.reConfirmDeleteBeneficiary)\r\n                    }\r\n                </p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beneficiaries","import React, { useState, useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport { Route, useLocation } from \"react-router-dom\";\n\nimport AppTopbar from \"./AppTopbar\";\nimport AppFooter from \"./AppFooter\";\nimport AppRightPanel from \"./AppRightPanel\";\n\nimport { Tooltip } from \"primereact/tooltip\";\n\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./App.scss\";\n\nimport Usuarios from \"./components/usuario\";\nimport Usuario from \"./components/usuario/Usuario\";\nimport Opciones from \"./components/opcion\";\nimport Perfiles from \"./components/perfil\";\nimport Perfil from \"./components/perfil/Perfil\";\n\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport UserInfo from \"./components/dashboard/UserInfo\";\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\nimport Courses from \"./components/courses/Courses\";\nimport Course from \"./components/courses/Course\";\nimport Applicants from \"./components/Applicant/Applicants\";\nimport Applicant from \"./components/Applicant/Applicant\";\nimport WorkPlan from \"./components/workplan/WorkPlan\";\nimport FinalReport from \"./components/finalReport/FinalReport\";\nimport Certificate from \"./components/certificate/Certificate\";\nimport Classes from \"./components/classes/Classes\";\nimport Training from \"./components/training/Training\";\n\nimport { getDatosUsuario, getOpcionesMenu } from \"./utils/Utils\";\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\nimport Beneficiaries from \"./components/beneficiary/Beneficiaries\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst App = (props) => {\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\n  const [sidebarStatic, setSidebarStatic] = useState(true);\n  const [sidebarActive, setSidebarActive] = useState(true);\n  const [menuActive, setMenuActive] = useState(false);\n  const [configActive, setConfigActive] = useState(false);\n  const [rightPanelActive, setRightPanelActive] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\n  const copyTooltipRef = useRef();\n  const location = useLocation();\n\n  const menu = getOpcionesMenu();\n\n  let menuClick;\n  let rightPanelClick;\n  let configClick;\n  let searchClick;\n  let topbarUserMenuClick;\n\n  useEffect(() => {\n    copyTooltipRef &&\n      copyTooltipRef.current &&\n      copyTooltipRef.current.updateTargetEvents();\n  }, [location]);\n\n  useEffect(() => {\n    if (staticMenuMobileActive) {\n      blockBodyScroll();\n    } else {\n      unblockBodyScroll();\n    }\n  }, [staticMenuMobileActive]);\n\n  useEffect(() => {\n    setResetActiveIndex(true);\n    setMenuActive(false);\n  }, []);\n\n  const onMenuItemClick = (event) => {\n    if (!event.item.items) {\n      setResetActiveIndex(true);\n      hideOverlayMenu();\n    }\n    if (!event.item.items && (isSlim() || isHorizontal())) {\n      setMenuActive(false);\n    }\n  };\n\n  const onMenuClick = (event) => {\n    if (menuActive && event.target.className === \"layout-menu-container\") {\n      setResetActiveIndex(true);\n      setMenuActive(false);\n    }\n    menuClick = true;\n  };\n\n  const blockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.add(\"blocked-scroll\");\n    } else {\n      document.body.className += \" blocked-scroll\";\n    }\n  };\n\n  const unblockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.remove(\"blocked-scroll\");\n    } else {\n      document.body.className = document.body.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n    }\n  };\n\n  const onMenuButtonClick = (event) => {\n    menuClick = true;\n    setTopbarUserMenuActive(false);\n    setRightPanelActive(false);\n\n    if (isMobile()) {\n      setStaticMenuMobileActive(\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\n      );\n      if (staticMenuMobileActive) {\n        blockBodyScroll();\n      } else {\n        unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 991;\n  };\n\n  const isHorizontal = () => {\n    return \"sideBar\" === \"horizontal\";\n  };\n\n  const isSlim = () => {\n    return \"sideBar\" === \"slim\";\n  };\n\n  const hideOverlayMenu = () => {\n    setStaticMenuMobileActive(false);\n    unblockBodyScroll();\n  };\n\n  const onRightPanelClick = () => {\n    rightPanelClick = true;\n  };\n\n  const onRightPanelButtonClick = () => {\n    setRightPanelActive((prevState) => !prevState);\n    rightPanelClick = true;\n  };\n\n  const onTopbarSearchToggle = () => {\n    setSearchActive((prevState) => !prevState);\n    searchClick = true;\n  };\n\n  const onTopbarSearchClick = () => {\n    searchClick = true;\n  };\n\n  const onTopbarUserMenuClick = () => {\n    setTopbarUserMenuActive((prevState) => !prevState);\n    topbarUserMenuClick = true;\n  };\n\n  const onDocumentClick = () => {\n    if (!searchClick && searchActive) {\n      setSearchActive(false);\n      searchClick = false;\n    }\n\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\n      setTopbarUserMenuActive(false);\n      topbarUserMenuClick = false;\n    }\n\n    if (!rightPanelClick && rightPanelActive) {\n      setRightPanelActive(false);\n    }\n\n    if (!configClick && configActive) {\n      setConfigActive(false);\n    }\n\n    if (!menuClick) {\n      if (isSlim() || isHorizontal()) {\n        setResetActiveIndex(true);\n        setMenuActive(false);\n      }\n\n      if (staticMenuMobileActive) {\n        hideOverlayMenu();\n      }\n\n      unblockBodyScroll();\n    }\n\n    searchClick = false;\n    topbarUserMenuClick = false;\n    rightPanelClick = false;\n    configClick = false;\n    menuClick = false;\n  };\n\n  const onSidebarMouseOver = () => {\n    setSidebarActive(!isMobile());\n  };\n\n  const onSidebarMouseLeave = () => {\n    setSidebarActive(false);\n  };\n\n  const onToggleMenu = (event) => {\n    menuClick = true;\n    setSidebarStatic((prevState) => !prevState);\n\n    event.preventDefault();\n  };\n\n  const onRootMenuItemClick = () => {\n    setMenuActive((prevMenuActive) => !prevMenuActive);\n  };\n\n  const layoutClassName = classNames(\n    \"layout-wrapper\",\n    {\n      \"layout-sidebar\": \"sidebar\",\n      \"layout-static\": \"sidebar\" && sidebarStatic,\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\n      \"layout-rightpanel-active\": rightPanelActive,\n      \"layout-slim\": \"sidebar\" === \"slim\",\n      \"layout-mobile-active\": staticMenuMobileActive,\n      \"p-input-filled\": \"filled\",\n      \"p-ripple-disabled\": false,\n    },\n    \"layout-menu-light layout-topbar-light\"\n  );\n\n  return (\n    <div\n      className={layoutClassName}\n      onClick={onDocumentClick}\n      style={{ backgroundColor: \"#F0F0F0\" }}\n    >\n      <Tooltip\n        ref={copyTooltipRef}\n        target=\".block-action-copy\"\n        position=\"bottom\"\n        content=\"Copied to clipboard\"\n        event=\"focus\"\n      />\n\n      <AppTopbar\n        topbarScheme={\"light\"}\n        onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive}\n        onTopbarSearchToggle={onTopbarSearchToggle}\n        onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive}\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu}\n        menuActive={menuActive}\n        onRootMenuItemClick={onRootMenuItemClick}\n        mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick}\n        menuMode={\"sidebar\"}\n        sidebarStatic={sidebarStatic}\n        sidebarActive={sidebarActive}\n        onSidebarMouseOver={onSidebarMouseOver}\n        onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu}\n        onMenuButtonClick={onMenuButtonClick}\n        resetActiveIndex={resetActiveIndex}\n        onMenuClick={onMenuClick}\n      />\n\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n      <div className=\"layout-main\">\n        <div\n          className=\"mgeBG\"\n          style={{\n            opacity: \"0.3\",\n            height: \"100vh\",\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: \"0\",\n            right: \"0\",\n          }}\n        >\n          &nbsp;\n        </div>\n        <div className=\"layout-content\">\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return getDatosUsuario() &&\n                getDatosUsuario().opciones &&\n                getDatosUsuario().opciones.length > 0 ? (\n                <Redirect to={getDatosUsuario().opciones[0].actionOpcion} />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/user/:id\" exact component={UserInfo} />\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\n          <Route\n            path=\"/trainingapplicant/:id/:idTraining\"\n            exact\n            component={TrainingApplicant}\n          />\n\n          <Route path=\"/users\" exact component={Usuarios} />\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\n          <Route path=\"/users/:id\" exact component={Usuario} />\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\n\n          <Route path=\"/opciones\" exact component={Opciones} />\n          <Route path=\"/perfiles\" exact component={Perfiles} />\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\n\n          <Route path=\"/training\" exact component={Courses} />\n          <Route path=\"/training/:id\" exact component={Applicants} />\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\n          <Route path=\"/trainingnew\" exact component={Course} />\n\n          <Route path=\"/applicants\" exact component={Applicants} />\n          <Route\n            path=\"/applicants/:id/:idTraining\"\n            exact\n            component={Applicant}\n          />\n\n          <Route path=\"/classes\" exact component={Classes} />\n          <Route path=\"/workplan\" exact component={WorkPlan} />\n          <Route\n            path=\"/beneficiaries/:operation\"\n            exact\n            component={Beneficiaries}\n          />\n          <Route path=\"/finalreport\" exact component={FinalReport} />\n          <Route path=\"/certificate\" exact component={Certificate} />\n        </div>\n\n        <AppFooter />\n      </div>\n      <div className=\"layout-mask modal-in\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\"\r\nimport { getAutenticarUrl, getAutorizarUrl, updatePassword, recoveryPassword, validateUserUuid } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nconst config = { headers: { \"Accept-Language\": getCulture() } }\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales, config)\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales, config)\r\n    }\r\n    validateResetPassword = ({ datos }) => (axios.post(validateUserUuid(), datos, config))\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos, config)\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos, config)\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nimport { getCulture } from \"../utils/Internationalization\"\r\nconst headers = {\r\n    \"Accept-Language\": getCulture()\r\n}\r\nexport default class CatalogoService {\r\n    getPaises = () => this.getPorPadre({ catalogo: { catValor: \"CAT_PAISES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catValor: \"CAT_MODALIDAD\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catValor: \"CAT_CURSOS\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catValor: \"CAT_SEXO\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_ENT\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TIP_INF\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_INF\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_REG\" } })\r\n    getEducationLevel = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EDU_LEV\" } })\r\n    getTypePerson = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TYP_PER\" } })\r\n    getRegion = () => this.getPorPadre({ catalogo: { catValor: \"CAT_REGIONS\" } })\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getLabel, labels } from '../utils/Internationalization'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const visible = true\r\n                const { opciones } = data.listObject[0]\r\n                const opcionesVisible = opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/') >= 0 ? { ...o, visible: false } : { ...o, visible }))\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones: opcionesVisible })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                requests.push(catalogoService.getEducationLevel())\r\n                requests.push(catalogoService.getTypePerson())\r\n                requests.push(catalogoService.getRegion())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject,\r\n                                cursos: results[1].data.listObject,\r\n                                modalidades: results[2].data.listObject,\r\n                                generos: results[3].data.listObject,\r\n                                trainingStatus: results[4].data.listObject,\r\n                                reportType: results[5].data.listObject,\r\n                                reportStatus: results[6].data.listObject,\r\n                                states: results[7].data.listObject,\r\n                                educationLevels: results[8].data.listObject,\r\n                                typePersons: results[9].data.listObject,\r\n                                regions: results[10].data.listObject\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].perId }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    {getLabel(labels.welcomeBack)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    {getLabel(labels.loginAccess)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label={getLabel(labels.emailLogin)}\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterEmail),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item label={getLabel(labels.passwordLogin)}\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterPassword)\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>\r\n                                                {getLabel(labels.login)}\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>\r\n                                {\r\n                                    getLabel(labels.forgotPassword)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\nimport { getCulture } from '../utils/Internationalization'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, idInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: idInvitadoPor, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        requests.push(catalogoService.getEducationLevel())\r\n        requests.push(catalogoService.getTypePerson())\r\n        requests.push(catalogoService.getRegion())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject,\r\n                        cursos: results[1].data.listObject,\r\n                        modalidades: results[2].data.listObject,\r\n                        generos: results[3].data.listObject,\r\n                        trainingStatus: results[4].data.listObject,\r\n                        reportType: results[5].data.listObject,\r\n                        reportStatus: results[6].data.listObject,\r\n                        states: results[7].data.listObject,\r\n                        educationLevels: results[8].data.listObject,\r\n                        typePersons: results[9].data.listObject,\r\n                        regions: results[9].data.listObject\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('Your account has been created successfully. Please log in.')\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            cultura: getCulture(),\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label='Upload your profile picture'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select your profile picture'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >Select Photo</Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Country Code\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Phone Number\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>Are you currently working?</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                Please write the complete name of the institution.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Additional email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport { getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item label=\"Email\"\r\n                                        name='email'\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email is not valid'\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete your email',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >Recover Password</Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useEffect, useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport AlertWait from \"./AlertWait\"\r\nimport toast from \"react-hot-toast\"\r\nimport { getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [validate, setValidate] = useState(true)\r\n    const [isValidating, setIsValidating] = useState(false)\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [isResetting, setIsResetting] = useState(false)\r\n    const [isReset, setIsReset] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const reset = async (values) => {\r\n        setOkMsg(null)\r\n        setIsResetting(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            if (data) {\r\n                setOkMsg(<>Password has been successfully changed. <br />Please log in again.</>)\r\n                setIsReset(true)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsResetting(false)\r\n        }\r\n    }\r\n\r\n    const validateRequest = async () => {\r\n        setValidate(false)\r\n        setIsValidating(true)\r\n        try {\r\n            const datos = { usuId: id, uuid }\r\n            const { data } = await cuentaService.validateResetPassword({ datos })\r\n            if (data) setIsValid(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else if (response.status === 409) {\r\n                setIsValid(false)\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        }\r\n        finally {\r\n            setIsValidating(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validate) validateRequest()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                <Row justify='center'>\r\n                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n\r\n                                {\r\n                                    isValidating ?\r\n                                        <>\r\n                                            <AlertWait isLoading={isValidating} message='Please wait...' />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {\r\n                                                isValid ?\r\n                                                    <>\r\n                                                        {\r\n                                                            isReset && okMsg ?\r\n                                                                <>\r\n                                                                    <Result\r\n                                                                        status='success'\r\n                                                                        title='Password Reset'\r\n                                                                        subTitle={okMsg}\r\n                                                                        extra={\r\n                                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                                onClick={() => {\r\n                                                                                    navigate.push('/login')\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Log in\r\n                                                                            </Button>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                                                    <Form\r\n                                                                        layout={'vertical'}\r\n                                                                        onFinish={reset}\r\n                                                                    >\r\n                                                                        <Form.Item label=\"New Password\"\r\n                                                                            name='password'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Complete new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item label=\"Confirm new password\"\r\n                                                                            name='passwordConfirm'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Confirme new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item>\r\n                                                                            <PasswordChecklist\r\n                                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                                minLength={8}\r\n                                                                                value={password}\r\n                                                                                valueAgain={passwordConfirm}\r\n                                                                                messages={{\r\n                                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                                    specialChar: \"Password has special characters.\",\r\n                                                                                    number: \"Password has a number.\",\r\n                                                                                    capital: \"Password has a capital letter.\",\r\n                                                                                    match: \"Passwords match.\",\r\n                                                                                }}\r\n                                                                                onChange={(isValid) => { }}\r\n                                                                            />\r\n                                                                        </Form.Item>\r\n                                                                        <div style={{\r\n                                                                            paddingTop: '10px'\r\n                                                                        }}>\r\n                                                                            <Form.Item>\r\n                                                                                <Button\r\n                                                                                    type='primary'\r\n                                                                                    htmlType='submit'\r\n                                                                                    loading={isResetting}\r\n                                                                                    disabled={isResetting}\r\n                                                                                    block>\r\n                                                                                    {\r\n                                                                                        isResetting ? 'Changing Password' : 'Reset Password'\r\n                                                                                    }\r\n                                                                                </Button>\r\n                                                                            </Form.Item>\r\n                                                                        </div>\r\n                                                                    </Form>\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <Result\r\n                                                        status='404'\r\n                                                        title='Page does not exist.'\r\n                                                        subTitle='Sorry, the page you visited does not exist.'\r\n                                                        extra={\r\n                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/login')\r\n                                                                }}\r\n                                                            >\r\n                                                                Log in\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                            }\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Layout >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from \"react\";\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport RecuperarPassword from \"./pages/RecuperarPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nexport const ctx = React.createContext();\n\nconst AppWrapper = (props) => {\n  let location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  const [colorScheme, setColorScheme] = useState(\"light\");\n\n  switch (props.location.pathname) {\n    case \"/login\":\n      return (\n        <Route\n          path=\"/login\"\n          render={() => <Login colorScheme={colorScheme} />}\n        />\n      );\n    case \"/signup\":\n      return (\n        <Route\n          path=\"/signup\"\n          render={() => <Signup colorScheme={colorScheme} />}\n        />\n      );\n    case \"/recover\":\n      return (\n        <Route\n          path=\"/recover\"\n          render={() => <RecuperarPassword colorScheme={colorScheme} />}\n        />\n      );\n    case \"/reset\":\n      return (\n        <Route\n          path=\"/reset\"\n          render={() => <ResetPassword colorScheme={colorScheme} />}\n        />\n      );\n    default:\n      return <App setColorScheme={setColorScheme} />;\n  }\n};\n\nexport default withRouter(AppWrapper);\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}