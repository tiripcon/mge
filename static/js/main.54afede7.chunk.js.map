{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","components/FormLayoutDemo.js","service/CountryService.js","service/NodeService.js","components/InputDemo.js","components/FloatLabelDemo.js","components/InvalidStateDemo.js","components/ButtonDemo.js","service/CustomerService.js","service/ProductService.js","components/TableDemo.js","components/ListDemo.js","components/TreeDemo.js","components/PanelDemo.js","components/OverlayDemo.js","service/PhotoService.js","components/MediaDemo.js","components/menu/PersonalDemo.js","components/menu/ConfirmationDemo.js","components/menu/PaymentDemo.js","components/menu/SeatDemo.js","components/MenuDemo.js","components/MessagesDemo.js","components/FileDemo.js","components/ChartDemo.js","components/MiscDemo.js","AppCodeHighlight.js","components/Documentation.js","utilities/IconsDemo.js","pages/CrudDemo.js","service/EventService.js","pages/CalendarDemo.js","pages/TimelineDemo.js","pages/Invoice.js","pages/Help.js","pages/EmptyPage.js","BlockViewer.js","components/BlocksDemo.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/InversionService.jsx","components/inversiones/MisInversiones.jsx","service/OfertaInversionService.jsx","service/TablaAmortizacionService.jsx","components/tablaAmortizacion/TablaAmortizacion.jsx","components/inversiones/ResumenInversion.jsx","pages/AlertWait.jsx","service/InversionistaService.jsx","service/CatalogoService.jsx","components/inversionista/Inversionista.jsx","components/inversiones/Inversion.jsx","service/OrigenServices.jsx","components/inversiones/Invertir.jsx","components/Reportes/Reportes.jsx","components/cuenta/MiCuenta.jsx","service/UsuarioService.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","components/catalogo/Catalogos.jsx","components/catalogo/Catalogo.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","components/Titulo.jsx","service/CuentaService.jsx","components/cuenta/ChangePassword.jsx","service/TrainingService.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","utils/AxiosInstanceBlob.jsx","service/InformService.jsx","service/CertificateService.jsx","components/Applicant/Applicant.jsx","components/user/Users.jsx","components/user/User.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","components/training/Training.jsx","App.js","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","pages/Signup.jsx","pages/Login.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","formatoMoneda","v","Intl","NumberFormat","currency","format","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getURLImagenRandom","getURLImagenPYMERandom","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","current","focus","logo","fontSize","margin","onMenuButtonClick","id","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","nombres","apellidos","push","gutter","removeItem","AppFooter","display","AppRightPanel","onRightPanelClick","FormLayoutDemo","dropdownItem","setDropdownItem","htmlFor","type","placeholder","rows","onChange","options","name","code","optionLabel","comparisonFn","prevProps","nextProps","location","pathname","React","memo","CountryService","axios","get","then","res","data","NodeService","InputDemo","floatValue","setFloatValue","autoValue","setAutoValue","selectedAutoValue","setSelectedAutoValue","autoFilteredValue","setAutoFilteredValue","calendarValue","setCalendarValue","inputNumberValue","setInputNumberValue","chipsValue","setChipsValue","sliderValue","setSliderValue","ratingValue","setRatingValue","colorValue","setColorValue","knobValue","setKnobValue","radioValue","setRadioValue","checkboxValue","setCheckboxValue","switchValue","setSwitchValue","listboxValue","setListboxValue","dropdownValue","setDropdownValue","multiselectValue","setMultiselectValue","toggleValue","setToggleValue","selectButtonValue1","setSelectButtonValue1","selectButtonValue2","setSelectButtonValue2","inputGroupValue","setInputGroupValue","selectedNode","setSelectedNode","treeSelectNodes","setTreeSelectNodes","countryService","nodeService","getCountries","getTreeNodes","onCheckboxChange","selectedValue","checked","splice","autoResize","cols","dropdown","multiple","suggestions","completeMethod","query","trim","country","startsWith","field","showIcon","showButtonBar","onValueChange","showButtons","mode","parseInt","width","valueTemplate","step","min","max","inputId","itemTemplate","option","selectedItemTemplate","onLabel","offLabel","binary","FloatLabelDemo","countries","setCountries","filteredCountries","setFilteredCountries","value1","setValue1","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","value6","setValue6","value7","setValue7","value8","setValue8","value9","setValue9","value10","setValue10","cities","filtered","mask","InvalidStateDemo","ButtonDemo","loading1","setLoading1","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","iconPos","loading","CustomerService","ProductService","TableDemo","customers1","setCustomers1","customers2","setCustomers2","customers3","setCustomers3","filters1","setFilters1","idFrozen","setIdFrozen","products","setProducts","expandedRows","setExpandedRows","representatives","image","statuses","customerService","productService","getCustomersLarge","getCustomers","getCustomersMedium","getProductsWithOrdersSmall","initFilters1","d","date","Date","formatCurrency","toLocaleString","matchMode","FilterMatchMode","CONTAINS","operator","FilterOperator","AND","constraints","STARTS_WITH","IN","DATE_IS","EQUALS","OR","BETWEEN","countryBodyTemplate","rowData","Fragment","marginLeft","verticalAlign","representativeBodyTemplate","representative","onError","representativesItemTemplate","dateBodyTemplate","toLocaleDateString","day","month","year","statusBodyTemplate","status","statusItemTemplate","amountBodyTemplate","amount","statusOrderBodyTemplate","searchBodyTemplate","header","_expandedRows","forEach","p","calculateCustomerTotal","total","paginator","showGridlines","dataKey","filters","filterDisplay","responsiveLayout","emptyMessage","filterPlaceholder","minWidth","filterField","body","filterClear","filterClearCallback","filterApply","filterApplyCallback","showFilterMatchModes","filterMenuStyle","filterElement","filterCallback","dataType","dateFormat","balance","locale","showClear","activity","showValue","range","bodyClassName","verified","onIcon","offIcon","scrollable","scrollHeight","scrollDirection","flexGrow","flexBasis","frozen","alignFrozen","onRowToggle","rowExpansionTemplate","orders","sortable","headerStyle","expander","price","rating","readOnly","cancel","inventoryStatus","rowGroupMode","groupRowsBy","sortMode","sortField","sortOrder","rowGroupHeaderTemplate","rowGroupFooterTemplate","colSpan","textAlign","ListDemo","listValue","picklistSourceValue","setPicklistSourceValue","picklistTargetValue","setPicklistTargetValue","orderlistValue","setOrderlistValue","dataviewValue","setDataviewValue","layout","setLayout","sortKey","setSortKey","setSortOrder","setSortField","getProducts","dataviewHeader","description","readonly","category","dataviewListItem","dataviewGridItem","source","sourceHeader","targetHeader","sourceStyle","targetStyle","listStyle","TreeDemo","treeNodes","setTreeNodes","selectedTreeNodeKeys","setSelectedTreeNodeKeys","treeTableNodes","setTreeTableNodes","selectedTreeTableNodeKeys","setSelectedTreeTableNodeKeys","getTreeTableNodes","selectionMode","selectionKeys","onSelectionChange","PanelDemo","menu1","toolbarRightTemplate","menuStyle","cardHeader","toggle","ref","popup","left","marginRight","right","toggleable","legend","align","size","minSize","overflow","OverlayDemo","displayBasic","setDisplayBasic","displayConfirmation","setDisplayConfirmation","visibleLeft","setVisibleLeft","visibleRight","setVisibleRight","visibleTop","setVisibleTop","visibleBottom","setVisibleBottom","visibleFullScreen","setVisibleFullScreen","selectedProduct","setSelectedProduct","op","op2","toast","accept","show","severity","summary","detail","life","reject","getProductsSmall","basicDialogFooter","confirmationDialogFooter","autoFocus","modal","footer","onHide","appendTo","document","showCloseIcon","selection","onRowSelect","hide","boxShadow","baseZIndex","fontWeight","position","fullScreen","confirmPopup","message","PhotoService","MediaDemo","images","setImages","getImages","numVisible","numScroll","responsiveOptions","breakpoint","product","circular","maxWidth","itemImageSrc","thumbnail","thumbnailImageSrc","preview","PersonalDemo","ConfirmationDemo","PaymentDemo","SeatDemo","MenuDemo","contextMenu","useLocation","checkActiveIndex","paths","wizardItems","megamenuItems","end","home","onSelect","path","component","onTabChange","separator","onContextMenu","marginTop","orientation","MessagesDemo","username","setUsername","email","setEmail","required","text","FileDemo","onUpload","maxFileSize","lineData","labels","datasets","fill","backgroundColor","borderColor","tension","barData","pieData","polarData","radarData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","ChartDemo","lineOptions","setLineOptions","barOptions","setBarOptions","pieOptions","setPieOptions","polarOptions","setPolarOptions","radarOptions","setRadarOptions","colorMode","plugins","color","scales","x","ticks","grid","y","MiscDemo","setValue","interval","val","setInterval","Math","floor","random","clearInterval","shape","threshold","rounded","removable","AppCodeHighlight","codeElement","Prism","highlightElement","lang","defaultProps","Documentation","IconsDemo","icons","setIcons","filteredIcons","setFilteredIcons","sort","icon1","icon2","properties","onInput","it","tags","includes","iconMeta","CrudDemo","emptyProduct","quantity","productDialog","setProductDialog","deleteProductDialog","setDeleteProductDialog","deleteProductsDialog","setDeleteProductsDialog","setProduct","selectedProducts","setSelectedProducts","submitted","setSubmitted","globalFilter","setGlobalFilter","dt","openNew","hideDialog","hideDeleteProductDialog","hideDeleteProductsDialog","findIndexById","createId","chars","charAt","exportCSV","confirmDeleteSelected","onCategoryChange","_product","onInputChange","onInputNumberChange","productDialogFooter","_products","deleteProductDialogFooter","deleteProductsDialogFooter","chooseLabel","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","editProduct","confirmDeleteProduct","integeronly","EventService","CalendarDemo","eventDialog","setEventDialog","clickedEvent","setClickedEvent","title","start","allDay","changedEvent","setChangedEvent","events","setEvents","getEvents","setProp","setStart","setEnd","setAllDay","eventClick","initialDate","initialView","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","center","editable","selectable","selectMirror","dayMaxEvents","closable","showTime","TimelineDemo","marker","subTitle","opposite","Invoice","print","marginBottom","Help","EmptyPage","BlockViewer","blockView","setBlockView","copyCode","a","navigator","clipboard","writeText","new","containerClassName","previewStyle","BlocksDemo","setChecked","clipPath","borderRadius","headers","AxiosInstance","navigate","axiosInstance","create","interceptors","request","use","config","token","error","Promise","response","apiURL","getRecuperarPasswordUrl","getCatalogosPorPadreUrl","downloadInformByName","downloadWorkplan","downloadFinalReport","downloadCertificateByName","InversionService","getInversionesPorInversionista","inversionista","post","Meta","Card","inversionService","MisInversiones","filtro","useParams","inversiones","setInversiones","isLoading","setIsLoading","setError","renderInversion","ivsCuotaMensual","ivsId","ivsIdEstado","ivsIdOfertaInv","ivsIdPersona","ivsMonto","ivsPlazo","ivsRecaudado","ivsTasaTir","xs","sm","md","lg","xl","Ribbon","bodyStyle","background","hoverable","cover","heigh","actions","avatar","paddingBottom","span","toFixed","valueStyle","suffix","justify","strokeLinecap","strokeColor","percent","showInfo","trailColor","bordered","dataSource","renderItem","Item","extra","Text","paddingTop","c","fetchData","ivsIdInversionista","idPymeInv","listObject","messageText","banner","Paragraph","Title","level","letterSpacing","OfertaInversionService","gets","ofertaInversion","TablaAmortizacionService","solicitudInversion","columns","dataIndex","render","strong","TablaAmortizacion","t","tabla","cuota","plazo","textTransform","reduce","cuotaMensual","rowKey","pagination","defaultCurrent","ResumenInversion","AlertWait","direction","InversionistaService","CatalogoService","getTiposIdentificacion","getCatalogo","catalogo","catNombre","getTiposPersona","getActividadesEconomicas","getBancos","getPorPadre","getTiposCuenta","getFuentesIngreso","getPaises","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getsFiltro","filtros","set","undefined","catId","del","Panel","Collapse","Option","Select","inversionistaService","catalogoService","Inversionista","bancos","setBancos","tiposCuenta","setTiposCuenta","fuentesIngreso","setFuentesIngreso","tiposIdentificacion","setTiposIdentificacion","setInversionista","Form","useForm","formRegistro","all","invFecNac","moment","invFueIng","invCar","invIngMenApr","invTitCueBan","invNombres","invApellidos","invBan","invTipCue","invNumCueBan","catch","renderCatalogo","form","initialValues","onFinish","values","defaultActiveKey","accordion","rules","catValor","formatter","parser","htmlType","block","Dragger","Upload","calificacion","pasos","titulo","ofertaInversionService","tablaAmortizacionService","Inversion","inversion","setInversion","slcMonto","setSolicitudInversion","tablaAmortizacion","setTablaAmortizacion","isCalculando","setIsCalculando","isInvertir","setIsInvertir","inversionEnviada","setInversionEnviada","formSimular","isModalOpen","setIsModalOpen","paso","setPaso","fetchInversion","oinId","Invertir","success","CalcularInversion","datosCalcular","slcNumCuotas","oinPlazo","slcTazaInt","oinTir","_solicitudInversion","idInversionista","idOfertaInv","slcCapMasInt","slcCuotaMensual","Calcular","renderSimulador","etiqueta","oinCapital","oinDetalle","oinInversionistas","oinRecaudado","oinIdPersona","tooltips","precision","borderRight","placement","onClose","open","parseFloat","renderTablaAmortizacion","invId","italic","renderResumenInversion","Reportes","MiCuenta","usuarioId","UsuarioService","usuario","put","usuarioService","Usuarios","usuarios","setUsuarios","documento","setDocumento","setNombres","estado","setEstado","columnas","responsive","_usuarios","u","unique","usuId","Group","showHeader","Usuario","isSaving","setIsSaving","estados","setEstados","setUsuario","password","guardar","md5","usuarioActualizado","defaultValue","tipoDocumento","direccion","telefono","login","Password","blnEstado","renderEstado","Catalogos","isDeleting","setIsDeleting","catalogos","setCatalogos","catalogosSeleccionados","setCatalogosSeleccionados","setCatalogo","catalogoAbierto","setCatalogoAbierto","formCatalogo","nombre","setNombre","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","onChangeCatalogo","catEstado","_catalogos","catPadre","cerrarCatalogo","guardarCatalogo","eliminarCatalogo","catDescripcion","okText","cancelText","onConfirm","requests","results","msgError","eliminarCatalogos","okButtonProps","Catalogo","subCatalogo","setSubCatalogo","subCatalogoAbierto","setSubCatalogoAbierto","formSubCatalogo","_","abrirSubCatalogo","quitarSubCatalogo","danger","catIdPadre","cerrarSubCatalogo","messageCode","onChangeSubCatalogo","catalogoActualizado","eliminar","guardarSubCatalogo","eliminarSubCatalogo","OpcionService","getsPorPadre","opcId","patch","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","opcOrden","opcUrl","opcEstado","getNuevoOpcion","eliminarOpciones","checkable","treeData","selectedKeys","selectedNodes","opcIcono","PerfilService","perfil","perId","perfilService","Perfiles","perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","onChangePerfil","_perfiles","perNombre","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","defaultChecked","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","perfilActualizado","Titulo","CuentaService","autenticar","credenciales","autorizar","register","datos","registerPersona","recoverPassword","resetPassword","changePassword","recoveryPassword","updatePassword","cuentaService","ChangePassword","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","change","statusText","autoComplete","minLength","valueAgain","messages","specialChar","number","capital","match","isValid","TrainingService","getByTraining","trainer","getById","training","pub","trainingService","Courses","courses","setCourses","load","setLoad","idUsuario","tip","entId","entNombre","entFechaIni","entFechaFin","entModalidad","numPostulantes","entEstado","xxl","lineHeight","reverse","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CourseService","course","baseTraining","postulantService","courseService","Course","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","removePostulant","newPostulantsList","posEmail","save","idEstado","trainingStatus","s","paises","srcSet","buttonStyle","modalidades","m","Button","renderModality","fieldNames","cursos","showSearch","optionFilterProp","closeIcon","tableProps","Applicants","setCourse","entPais","postulanteList","pais","asistenciaList","asiValor","informeList","w","infTipo","infEstado","certificadoList","cerEstado","posId","AttendanceService","attendance","AxiosInstanceBlob","axiosInstanceBlob","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","CertificateService","generate","send","certificate","download","attendanceService","informService","certificateService","Applicant","idTraining","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isDownloading","setIsDownloading","renderInform","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","evidenciaList","column","eviUrl","downloadCertificate","cerNombre","cerRuta","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","stringify","xhr","blob","Blob","saveAs","setAttendance","downloadInform","infRutaPlan","sendCertificate","cerId","idCurso","curId","idPostulante","sendRateEmail","setInform","informe","cursoList","centered","posInvitadoPor","fechanac","TextArea","reportStatus","cerFechaCad","cerFechaReg","renderCertificate","applicants","identification","firstName","lastName","sex","dateBirth","img","city","countryCode","phone","currentyWorking","placeWorking","workPlan","finalReport","Users","prefix","User","WorkPlan","setPostulant","fileList","setFileList","uploading","setUploading","selectedWorkplan","setSelectedWorkplan","onRemove","file","newFileList","slice","beforeUpload","renderWorkplan","sendLoadEmail","handleUpload","FormData","append","reportType","downloadWorkplanTemplate","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","informInserted","newInform","sendFinalReport","idInforme","downloadFinalReportTemplate","f","warningOnly","Certificate","curNombre","fontStyle","fontFamily","bottom","opacity","Classes","Training","loadCourse","setLoadCourse","loadPostulant","setLoadPostulant","isLoadingCourse","setIsLoadingCourse","setIsLoadingPostulant","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","newCourse","idEntrenamiento","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","dayjs","$d","modTraining","envios","promise","fn","resolve","itemLayout","idNombreCurso","posEnvio","renderApplicants","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","getOpcionesMenu","updateTargetEvents","blockBodyScroll","unblockBodyScroll","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","colorScheme","RecuperarPassword","posEstado","validPostulant","okMsg","setOkMsg","ResetPassword","search","decodeURIComponent","uuid","setPassword","passwordConfirm","setPasswordConfirm","Signup","loadCatalogos","setLoadCatalogos","isRegister","setIsRegister","currentlyWorking","setCurrentlyWorking","validForm","setValidForm","setValidPostulant","posUuid","validPostulantInfo","postulantInfo","invitadopor","fetchCatalogos","mgeCatalogos","generos","setItem","trabaja","renderError","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","renderPerfil","backgroundImage","withRouter","scrollTo","setColorScheme","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.54afede7.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n            // style={{\n            //   backgroundColor: \"#70B450\",\n            //   color: \"#ffffff\",\n            // }}\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  // const history = useHistory();\n\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  // const logo = {\n  //   fontSize: \"1.5em\",\n  //   padding: 0,\n  //   margin: 0,\n  // };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\n      </div>\n      {/* <div className=\"sidebar-logo\">\n        <button className=\"p-link\" onClick={() => history.push(\"/\")}>\n          <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n            MG\n          </span>\n          <span className=\"mge mge-bold mge-green\" style={logo}>\n            E\n          </span>\n        </button>\n        <button\n          className=\"sidebar-pin p-link\"\n          onClick={(event) => props.onToggleMenu(event)}\n        >\n          <span className=\"pin\"></span>\n        </button>\n      </div> */}\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\";\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nconst toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nexport const getResponsable = () => getDatosUsuario().idPymeInv\r\nconst getSolicitudes = () => localStorage.getItem('mgeSolicitudes') ? JSON.parse(localStorage.getItem('mgeSolicitudes')) : []\r\nexport const getSolicitudUsuarioOferta = (idOfertaInv) => {\r\n    const mgeSolicitudes = getSolicitudes()\r\n    const idUsuario = parseInt(getDatosUsuario().idUsuario)\r\n    const usuario = mgeSolicitudes.filter(u => u.idUsuario === idUsuario)\r\n    const solicitudUsuarioOferta = usuario.length === 1 ? usuario[0].solicitudes.filter(s => s.idOfertaInv === parseInt(idOfertaInv)) : []\r\n    return solicitudUsuarioOferta\r\n}\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const opciones = getDatosUsuario().opciones || []\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getEstiloFerificada = () => ({\r\n    style: {\r\n        fontWeight: '600'\r\n    }\r\n})\r\nexport const getURLImagenRandom = (i) => `https://joesch.moe/api/v1/random?v=${i}`\r\nexport const getURLImagenPYMERandom = (i) => `https://picsum.photos/600/400?v=${i}`\r\nexport const getCalificaciones = () => ['Malo', 'Normal', 'Bueno', 'Muy Bueno', 'Excelente']\r\n\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport AppMenu from \"./AppMenu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport { getDatosUsuario } from \"./utils/Utils\";\n\nconst AppTopbar = (props) => {\n  const history = useHistory();\n  const searchPanelDesktop = useRef(null);\n  const searchPanelMobile = useRef(null);\n\n  useEffect(() => {\n    if (props.searchActive) {\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\n      else searchPanelMobile.current.focus();\n    }\n  }, [props.searchActive]);\n\n  const datosUsuario = (e) => {\n    history.push(\"/cuenta\");\n  };\n\n  const changePassword = (e) => {\n    history.push(\"/change\");\n  };\n\n  const cerrarSesion = (e) => {\n    localStorage.removeItem(\"mgeToken\");\n    localStorage.removeItem(\"mgeDatosUsuario\");\n    // localStorage.removeItem(\"mgeCatalogos\");\n    history.push(\"/login\");\n  };\n\n  const logo = {\n    fontSize: \"1.5em\",\n    padding: 0,\n    margin: 0,\n  };\n\n  return (\n    <div className=\"layout-topbar\">\n      <div className=\"layout-topbar-wrapper\">\n        <div className=\"layout-topbar-left\">\n          <button\n            tabIndex=\"0\"\n            className=\"menu-button p-link\"\n            onClick={props.onMenuButtonClick}\n          >\n            <i className=\"pi pi-bars\"></i>\n          </button>\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n              MG\n            </span>\n            <span className=\"mge mge-bold mge-green\" style={logo}>\n              E\n            </span>\n          </div>\n        </div>\n\n        <AppMenu\n          menuMode={props.menuMode}\n          sidebarActive={props.sidebarActive}\n          sidebarStatic={props.sidebarStatic}\n          model={props.menu}\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          onMobileMenuActive={props.onMobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          onSidebarMouseOver={props.onSidebarMouseOver}\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\n          onToggleMenu={props.onToggleMenu}\n          resetActiveIndex={props.resetActiveIndex}\n          onMenuClick={props.onMenuClick}\n        />\n\n        <div className=\"layout-topbar-right\">\n          <ul className=\"layout-topbar-actions\">\n            <li\n              className={classNames(\"topbar-item user-profile\", {\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\n              })}\n            >\n              <button\n                className=\"p-link\"\n                style={{ cursor: \"pointer\" }}\n                onClick={props.onTopbarUserMenuClick}\n              >\n                {getDatosUsuario() && (\n                  <>\n                    {`${getDatosUsuario().nombres} ${\n                      getDatosUsuario().apellidos\n                    }`}\n                    &nbsp;&nbsp;\n                  </>\n                )}\n                <i\n                  className=\"fa-solid fa-user\"\n                  style={{ fontSize: \"1.5em\" }}\n                ></i>\n              </button>\n              <ul className=\"fadeInDown\">\n                <li onClick={datosUsuario}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-user-gear\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Profile</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                {/* <li onClick={changePassword}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-key\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Cambiar Contraseña</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li> */}\n                <li onClick={cerrarSesion}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-right-from-bracket\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Sign off</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppTopbar;\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from 'react';\n\nconst AppRightPanel = (props) => {\n\n\treturn (\n\t\t<div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n\t\t\t<div className=\"rightpanel-wrapper\" >\n\t\t\t\t<div className=\"rightpanel-section weather-section\">\n\t\t\t\t\t<div className=\"section-header\">\n\t\t\t\t\t\t<h6>Today</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"weather\">\n\t\t\t\t\t\t<img src=\"assets/demo/images/rightpanel/icon-sun.svg\" alt=\"freya-layout\" />\n\t\t\t\t\t\t<div className=\"weather-info\">\n\t\t\t\t\t\t\t<h6>Ankara, 22 May</h6>\n\t\t\t\t\t\t\t<h1>24º</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppRightPanel;","import React, { useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dropdown } from 'primereact/dropdown';\n\nconst FormLayoutDemo = () => {\n\n    const [dropdownItem, setDropdownItem] = useState(null);\n    const dropdownItems = [\n        { name: 'Option 1', code: 'Option 1' },\n        { name: 'Option 2', code: 'Option 2' },\n        { name: 'Option 3', code: 'Option 3' }\n    ];\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card p-fluid\">\n                    <h5>Vertical</h5>\n                    <div className=\"field\">\n                        <label htmlFor=\"name1\">Name</label>\n                        <InputText id=\"name1\" type=\"text\" />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"email1\">Email</label>\n                        <InputText id=\"email1\" type=\"text\" />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"age1\">Age</label>\n                        <InputText id=\"age1\" type=\"text\" />\n                    </div>\n                </div>\n\n                <div className=\"card p-fluid\">\n                    <h5>Vertical Grid</h5>\n                    <div className=\"formgrid grid\">\n                        <div className=\"field col\">\n                            <label htmlFor=\"name2\">Name</label>\n                            <InputText id=\"name2\" type=\"text\" />\n                        </div>\n                        <div className=\"field col\">\n                            <label htmlFor=\"email2\">Email</label>\n                            <InputText id=\"email2\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card p-fluid\">\n                    <h5>Horizontal</h5>\n                    <div className=\"field grid\">\n                        <label htmlFor=\"name3\" className=\"col-12 mb-2 md:col-2 md:mb-0\">Name</label>\n                        <div className=\"col-12 md:col-10\">\n                            <InputText id=\"name3\" type=\"text\" />\n                        </div>\n                    </div>\n                    <div className=\"field grid\">\n                        <label htmlFor=\"email3\" className=\"col-12 mb-2 md:col-2 md:mb-0\">Email</label>\n                        <div className=\"col-12 md:col-10\">\n                            <InputText id=\"email3\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card\">\n                    <h5>Inline</h5>\n                    <div className=\"formgroup-inline\">\n                        <div className=\"field\">\n                            <label htmlFor=\"firstname1\" className=\"p-sr-only\">Firstname</label>\n                            <InputText id=\"firstname1\" type=\"text\" placeholder=\"Firstname\" />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"lastname1\" className=\"p-sr-only\">Lastname</label>\n                            <InputText id=\"lastname1\" type=\"text\" placeholder=\"Lastname\" />\n                        </div>\n                        <Button label=\"Submit\"></Button>\n                    </div>\n                </div>\n\n                <div className=\"card\">\n                    <h5>Help Text</h5>\n                    <div className=\"field p-fluid\">\n                        <label htmlFor=\"username\">Username</label>\n                        <InputText id=\"username\" type=\"text\" />\n                        <small>Enter your username to reset your password.</small>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Advanced</h5>\n                    <div className=\"p-fluid formgrid grid\">\n                        <div className=\"field col-12 md:col-6\">\n                            <label htmlFor=\"firstname2\">Firstname</label>\n                            <InputText id=\"firstname2\" type=\"text\" />\n                        </div>\n                        <div className=\"field col-12 md:col-6\">\n                            <label htmlFor=\"lastname2\">Lastname</label>\n                            <InputText id=\"lastname2\" type=\"text\" />\n                        </div>\n                        <div className=\"field col-12\">\n                            <label htmlFor=\"address\">Address</label>\n                            <InputTextarea id=\"address\" rows=\"4\" />\n                        </div>\n                        <div className=\"field col-12 md:col-6\">\n                            <label htmlFor=\"city\">City</label>\n                            <InputText id=\"city\" type=\"text\" />\n                        </div>\n                        <div className=\"field col-12 md:col-3\">\n                            <label htmlFor=\"state\">State</label>\n                            <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" placeholder=\"Select One\"></Dropdown>\n                        </div>\n                        <div className=\"field col-12 md:col-3\">\n                            <label htmlFor=\"zip\">Zip</label>\n                            <InputText id=\"zip\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(FormLayoutDemo, comparisonFn);\n","import axios from 'axios';\n\nexport default class CountryService {\n\n    getCountries() {\n        return axios.get('assets/demo/data/countries.json').then(res => res.data.data);\n    }\n}\n","import axios from 'axios';\n\nexport default class NodeService {\n\n    getTreeTableNodes() {\n        return axios.get('assets/demo/data/treetablenodes.json').then(res => res.data.root);\n    }\n\n    getTreeNodes() {\n        return axios.get('assets/demo/data/treenodes.json').then(res => res.data.root);\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Calendar } from 'primereact/calendar';\nimport { Chips } from 'primereact/chips';\nimport { Slider } from 'primereact/slider';\nimport { Knob } from 'primereact/knob';\nimport { Rating } from 'primereact/rating';\nimport { ColorPicker } from 'primereact/colorpicker';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { Checkbox } from 'primereact/checkbox';\nimport { InputSwitch } from 'primereact/inputswitch';\nimport { ListBox } from 'primereact/listbox';\nimport { Dropdown } from 'primereact/dropdown';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { TreeSelect } from 'primereact/treeselect';\nimport { SelectButton } from 'primereact/selectbutton';\nimport { Button } from 'primereact/button';\nimport { InputNumber } from 'primereact/inputnumber';\nimport CountryService from '../service/CountryService';\nimport NodeService from '../service/NodeService';\n\nconst InputDemo = () => {\n\n    const [floatValue, setFloatValue] = useState('');\n    const [autoValue, setAutoValue] = useState(null);\n    const [selectedAutoValue, setSelectedAutoValue] = useState(null);\n    const [autoFilteredValue, setAutoFilteredValue] = useState([]);\n    const [calendarValue, setCalendarValue] = useState(null);\n    const [inputNumberValue, setInputNumberValue] = useState(null);\n    const [chipsValue, setChipsValue] = useState([]);\n    const [sliderValue, setSliderValue] = useState('');\n    const [ratingValue, setRatingValue] = useState(null);\n    const [colorValue, setColorValue] = useState('1976D2');\n    const [knobValue, setKnobValue] = useState(20);\n    const [radioValue, setRadioValue] = useState(null);\n    const [checkboxValue, setCheckboxValue] = useState([]);\n    const [switchValue, setSwitchValue] = useState(false);\n    const [listboxValue, setListboxValue] = useState(null);\n    const [dropdownValue, setDropdownValue] = useState(null);\n    const [multiselectValue, setMultiselectValue] = useState(null);\n    const [toggleValue, setToggleValue] = useState(false);\n    const [selectButtonValue1, setSelectButtonValue1] = useState(null);\n    const [selectButtonValue2, setSelectButtonValue2] = useState(null);\n    const [inputGroupValue, setInputGroupValue] = useState(false);\n    const [selectedNode, setSelectedNode] = useState(null);\n    const [treeSelectNodes, setTreeSelectNodes] = useState(null);\n\n    const listboxValues = [\n        { name: 'New York', code: 'NY' },\n        { name: 'Rome', code: 'RM' },\n        { name: 'London', code: 'LDN' },\n        { name: 'Istanbul', code: 'IST' },\n        { name: 'Paris', code: 'PRS' }\n    ];\n\n    const dropdownValues = [\n        { name: 'New York', code: 'NY' },\n        { name: 'Rome', code: 'RM' },\n        { name: 'London', code: 'LDN' },\n        { name: 'Istanbul', code: 'IST' },\n        { name: 'Paris', code: 'PRS' }\n    ];\n\n    const multiselectValues = [\n        { name: 'Australia', code: 'AU' },\n        { name: 'Brazil', code: 'BR' },\n        { name: 'China', code: 'CN' },\n        { name: 'Egypt', code: 'EG' },\n        { name: 'France', code: 'FR' },\n        { name: 'Germany', code: 'DE' },\n        { name: 'India', code: 'IN' },\n        { name: 'Japan', code: 'JP' },\n        { name: 'Spain', code: 'ES' },\n        { name: 'United States', code: 'US' }\n    ];\n\n    const selectButtonValues1 = [\n        { name: 'Option 1', code: 'O1' },\n        { name: 'Option 2', code: 'O2' },\n        { name: 'Option 3', code: 'O3' },\n    ];\n\n    const selectButtonValues2 = [\n        { name: 'Option 1', code: 'O1' },\n        { name: 'Option 2', code: 'O2' },\n        { name: 'Option 3', code: 'O3' },\n    ];\n\n    useEffect(() => {\n        const countryService = new CountryService();\n        const nodeService = new NodeService();\n        countryService.getCountries().then(data => setAutoValue(data));\n        nodeService.getTreeNodes().then(data => setTreeSelectNodes(data));\n    }, []);\n\n    const searchCountry = (event) => {\n        setTimeout(() => {\n            if (!event.query.trim().length) {\n                setAutoFilteredValue([...autoValue]);\n            }\n            else {\n                setAutoFilteredValue(autoValue.filter((country) => {\n                    return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                }));\n            }\n        }, 250);\n    };\n\n    const onCheckboxChange = (e) => {\n        let selectedValue = [...checkboxValue];\n        if (e.checked)\n            selectedValue.push(e.value);\n        else\n            selectedValue.splice(selectedValue.indexOf(e.value), 1);\n\n        setCheckboxValue(selectedValue);\n    };\n\n    const itemTemplate = (option) => {\n        return (\n            <div className=\"flex align-items-center\">\n                <span className={`mr-2 flag flag-${option.code.toLowerCase()}`} style={{ width: '18px', height: '12px' }} />\n                <span>{option.name}</span>\n            </div>\n        );\n    };\n\n    const selectedItemTemplate = (option) => {\n        if (option) {\n            return (\n                <div className=\"inline-flex align-items-center py-1 px-2 bg-primary text-primary border-round mr-2\">\n                    <span className={`mr-2 flag flag-${option.code.toLowerCase()}`} style={{ width: '18px', height: '12px' }} />\n                    <span>{option.name}</span>\n                </div>\n            );\n        }\n\n        return 'Select Countries';\n    };\n\n    return (\n        <div className=\"grid p-fluid\">\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>InputText</h5>\n                    <div className=\"grid formgrid\">\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <InputText type=\"text\" placeholder=\"Default\"></InputText>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <InputText type=\"text\" placeholder=\"Disabled\" disabled></InputText>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <InputText type=\"text\" placeholder=\"Invalid\" className=\"p-invalid\" />\n                        </div>\n                    </div>\n\n                    <h5>Icons</h5>\n                    <div className=\"grid formgrid\">\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <span className=\"p-input-icon-left\">\n                                <i className=\"pi pi-user\" />\n                                <InputText type=\"text\" placeholder=\"Username\" />\n                            </span>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <span className=\"p-input-icon-right\">\n                                <InputText type=\"text\" placeholder=\"Search\" />\n                                <i className=\"pi pi-search\" />\n                            </span>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <span className=\"p-input-icon-left p-input-icon-right\">\n                                <i className=\"pi pi-user\" />\n                                <InputText type=\"text\" placeholder=\"Search\" />\n                                <i className=\"pi pi-search\" />\n                            </span>\n                        </div>\n                    </div>\n\n                    <h5>Float Label</h5>\n                    <span className=\"p-float-label\">\n                        <InputText id=\"username\" type=\"text\" value={floatValue} onChange={(e) => setFloatValue(e.target.value)} />\n                        <label htmlFor=\"username\">Username</label>\n                    </span>\n\n                    <h5>Textarea</h5>\n                    <InputTextarea placeholder=\"Your Message\" autoResize rows=\"3\" cols=\"30\" />\n\n                    <h5>AutoComplete</h5>\n                    <AutoComplete placeholder=\"Search\" id=\"dd\" dropdown multiple value={selectedAutoValue} onChange={(e) => setSelectedAutoValue(e.value)} suggestions={autoFilteredValue} completeMethod={searchCountry} field=\"name\" />\n\n                    <h5>Calendar</h5>\n                    <Calendar showIcon showButtonBar value={calendarValue} onChange={(e) => setCalendarValue(e.value)}></Calendar>\n\n                    <h5>InputNumber</h5>\n                    <InputNumber value={inputNumberValue} onValueChange={(e) => setInputNumberValue(e.value)} showButtons mode=\"decimal\"></InputNumber>\n\n                    <h5>Chips</h5>\n                    <Chips value={chipsValue} onChange={(e) => setChipsValue(e.value)} />\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"grid\">\n                        <div className=\"col-12\">\n                            <h5>Slider</h5>\n                            <InputText value={sliderValue} onChange={(e) => setSliderValue(parseInt(e.target.value), 10)} />\n                            <Slider value={sliderValue} onChange={(e) => setSliderValue(e.value)} />\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <h5>Rating</h5>\n                            <Rating value={ratingValue} onChange={(e) => setRatingValue(e.value)} />\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <h5>ColorPicker</h5>\n                            <ColorPicker value={colorValue} onChange={(e) => setColorValue(e.value)} style={{ width: '2rem' }} />\n                        </div>\n                        <div className=\"col-12\">\n                            <h5>Knob</h5>\n                            <Knob value={knobValue} valueTemplate={\"{value}%\"} onChange={(e) => setKnobValue(e.value)} step={10} min={-50} max={50} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>RadioButton</h5>\n                    <div className=\"grid\">\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-radiobutton\">\n                                <RadioButton inputId=\"option1\" name=\"option\" value=\"Chicago\" checked={radioValue === 'Chicago'} onChange={(e) => setRadioValue(e.value)} />\n                                <label htmlFor=\"option1\">Chicago</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-radiobutton\">\n                                <RadioButton inputId=\"option2\" name=\"option\" value=\"Los Angeles\" checked={radioValue === 'Los Angeles'} onChange={(e) => setRadioValue(e.value)} />\n                                <label htmlFor=\"option2\">Los Angeles</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-radiobutton\">\n                                <RadioButton inputId=\"option3\" name=\"option\" value=\"New York\" checked={radioValue === 'New York'} onChange={(e) => setRadioValue(e.value)} />\n                                <label htmlFor=\"option3\">New York</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h5>Checkbox</h5>\n                    <div className=\"grid\">\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-checkbox\">\n                                <Checkbox inputId=\"checkOption1\" name=\"option\" value=\"Chicago\" checked={checkboxValue.indexOf('Chicago') !== -1} onChange={onCheckboxChange} />\n                                <label htmlFor=\"checkOption1\">Chicago</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-checkbox\">\n                                <Checkbox inputId=\"checkOption2\" name=\"option\" value=\"Los Angeles\" checked={checkboxValue.indexOf('Los Angeles') !== -1} onChange={onCheckboxChange} />\n                                <label htmlFor=\"checkOption2\">Los Angeles</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-checkbox\">\n                                <Checkbox inputId=\"checkOption3\" name=\"option\" value=\"New York\" checked={checkboxValue.indexOf('New York') !== -1} onChange={onCheckboxChange} />\n                                <label htmlFor=\"checkOption3\">New York</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h5>Input Switch</h5>\n                    <InputSwitch checked={switchValue} onChange={(e) => setSwitchValue(e.value)} />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Listbox</h5>\n                    <ListBox value={listboxValue} onChange={(e) => setListboxValue(e.value)} options={listboxValues} optionLabel=\"name\" filter />\n\n                    <h5>Dropdown</h5>\n                    <Dropdown value={dropdownValue} onChange={(e) => setDropdownValue(e.value)} options={dropdownValues} optionLabel=\"name\" placeholder=\"Select\" />\n\n                    <h5>MultiSelect</h5>\n                    <MultiSelect value={multiselectValue} onChange={(e) => setMultiselectValue(e.value)} options={multiselectValues} optionLabel=\"name\" placeholder=\"Select Countries\" filter\n                        itemTemplate={itemTemplate} selectedItemTemplate={selectedItemTemplate} />\n\n                    <h5>TreeSelect</h5>\n                    <TreeSelect value={selectedNode} onChange={(e) => setSelectedNode(e.value)} options={treeSelectNodes} placeholder=\"Select Item\"></TreeSelect>\n                </div>\n\n                <div className=\"card\">\n                    <h5>ToggleButton</h5>\n                    <ToggleButton checked={toggleValue} onChange={(e) => setToggleValue(e.value)} onLabel=\"Yes\" offLabel=\"No\" />\n\n                    <h5>SelectButton</h5>\n                    <SelectButton value={selectButtonValue1} onChange={(e) => setSelectButtonValue1(e.value)} options={selectButtonValues1} optionLabel=\"name\" />\n\n                    <h5>SelectButton - Multiple</h5>\n                    <SelectButton value={selectButtonValue2} onChange={(e) => setSelectButtonValue2(e.value)} options={selectButtonValues2} optionLabel=\"name\" multiple />\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Input Groups</h5>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\">\n                                    <i className=\"pi pi-user\"></i>\n                                </span>\n                                <InputText placeholder=\"Username\" />\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-shopping-cart\"></i></span>\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-globe\"></i></span>\n                                <InputText placeholder=\"Price\" />\n                                <span className=\"p-inputgroup-addon\">$</span>\n                                <span className=\"p-inputgroup-addon\">.00</span>\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <Button label=\"Search\" />\n                                <InputText placeholder=\"Keyword\" />\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon p-inputgroup-addon-checkbox\">\n                                    <Checkbox checked={inputGroupValue} onChange={(e) => setInputGroupValue(e.checked)} binary />\n                                </span>\n                                <InputText placeholder=\"Confirm\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(InputDemo, comparisonFn);","import React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { InputMask } from 'primereact/inputmask';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Calendar } from 'primereact/calendar';\nimport { Chips } from 'primereact/chips';\nimport { Dropdown } from 'primereact/dropdown';\nimport { MultiSelect } from 'primereact/multiselect';\nimport CountryService from '../service/CountryService';\n\nconst FloatLabelDemo = () => {\n\n    const [countries, setCountries] = useState([]);\n    const [filteredCountries, setFilteredCountries] = useState(null);\n    const [value1, setValue1] = useState('');\n    const [value2, setValue2] = useState('');\n    const [value3, setValue3] = useState(null);\n    const [value4, setValue4] = useState('');\n    const [value5, setValue5] = useState('');\n    const [value6, setValue6] = useState('');\n    const [value7, setValue7] = useState('');\n    const [value8, setValue8] = useState('');\n    const [value9, setValue9] = useState([]);\n    const [value10, setValue10] = useState(null);\n\n    const cities = [\n        { name: 'New York', code: 'NY' },\n        { name: 'Rome', code: 'RM' },\n        { name: 'London', code: 'LDN' },\n        { name: 'Istanbul', code: 'IST' },\n        { name: 'Paris', code: 'PRS' },\n    ];\n\n    useEffect(() => {\n        const countryService = new CountryService();\n        countryService.getCountries().then((countries) => {\n            setCountries(countries);\n        });\n    }, []);\n\n    const searchCountry = (event) => {\n        // in a real application, make a request to a remote url with the query and\n        // return filtered results, for demo we filter at client side\n        const filtered = [];\n        const query = event.query;\n        for (let i = 0; i < countries.length; i++) {\n            const country = countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                filtered.push(country);\n            }\n        }\n        setFilteredCountries(filtered);\n    };\n\n    return (\n        <div className=\"card\">\n            <h5>Float Label</h5>\n            <div className=\"grid p-fluid mt-3\">\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputText type=\"text\" id=\"inputtext\" value={value1} onChange={(e) => setValue1(e.target.value)} />\n                        <label htmlFor=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <AutoComplete id=\"autocomplete\" value={value6} onChange={(e) => setValue6(e.value)} suggestions={filteredCountries} completeMethod={searchCountry} field=\"name\"></AutoComplete>\n                        <label htmlFor=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <Calendar inputId=\"calendar\" value={value7} onChange={(e) => setValue7(e.value)}></Calendar>\n                        <label htmlFor=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <Chips inputId=\"chips\" value={value9} onChange={(e) => setValue9(e.value)}></Chips>\n                        <label htmlFor=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputMask id=\"inputmask\" mask=\"99/99/9999\" value={value2} onChange={(e) => setValue2(e.value)}></InputMask>\n                        <label htmlFor=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputNumber id=\"inputnumber\" value={value3} onValueChange={(e) => setValue3(e.target.value)}></InputNumber>\n                        <label htmlFor=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <div className=\"p-inputgroup\">\n                        <span className=\"p-inputgroup-addon\">\n                            <i className=\"pi pi-user\"></i>\n                        </span>\n                        <span className=\"p-float-label\">\n                            <InputText type=\"text\" id=\"inputgroup\" value={value4} onChange={(e) => setValue4(e.target.value)} />\n                            <label htmlFor=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <Dropdown id=\"dropdown\" options={cities} value={value8} onChange={(e) => setValue8(e.value)} optionLabel=\"name\"></Dropdown>\n                        <label htmlFor=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <MultiSelect id=\"multiselect\" options={cities} value={value10} onChange={(e) => setValue10(e.value)} optionLabel=\"name\"></MultiSelect>\n                        <label htmlFor=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputTextarea id=\"textarea\" rows=\"3\" cols=\"30\" value={value5} onChange={(e) => setValue5(e.target.value)}></InputTextarea>\n                        <label htmlFor=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(FloatLabelDemo, comparisonFn);\n\n","import React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { InputMask } from 'primereact/inputmask';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Calendar } from 'primereact/calendar';\nimport { Chips } from 'primereact/chips';\nimport { Dropdown } from 'primereact/dropdown';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Password } from 'primereact/password';\nimport CountryService  from '../service/CountryService';\n\nconst InvalidStateDemo = () => {\n\n    const [countries, setCountries] = useState([]);\n    const [filteredCountries, setFilteredCountries] = useState(null);\n    const [value1, setValue1] = useState('');\n    const [value2, setValue2] = useState('');\n    const [value3, setValue3] = useState(null);\n    const [value4, setValue4] = useState('');\n    const [value5, setValue5] = useState('');\n    const [value6, setValue6] = useState('');\n    const [value7, setValue7] = useState('');\n    const [value8, setValue8] = useState([]);\n    const [value9, setValue9] = useState(null);\n    const [value10, setValue10] = useState('');\n\n    const cities = [\n        { name: 'New York', code: 'NY' },\n        { name: 'Rome', code: 'RM' },\n        { name: 'London', code: 'LDN' },\n        { name: 'Istanbul', code: 'IST' },\n        { name: 'Paris', code: 'PRS' },\n    ];\n\n    useEffect(() => {\n        const countryService = new CountryService();\n        countryService.getCountries().then((countries) => {\n            setCountries(countries);\n        });\n    }, []);\n\n    const searchCountry = (event) => {\n        // in a real application, make a request to a remote url with the query and\n        // return filtered results, for demo we filter at client side\n        const filtered = [];\n        const query = event.query;\n        for (let i = 0; i < countries.length; i++) {\n            const country = countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                filtered.push(country);\n            }\n        }\n        setFilteredCountries(filtered);\n    };\n\n    return (\n        <div className=\"grid p-fluid\">\n            <div className=\"col\">\n                <div className=\"card\">\n                    <h5>Invalid State</h5>\n                    <div className=\"grid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"field\">\n                                <label htmlFor=\"inputtext\">InputText</label>\n                                <InputText type=\"text\" id=\"inputtext\" value={value1} onChange={(e) => setValue1(e.target.value)} className=\"p-invalid\" />\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"autocomplete\">AutoComplete</label>\n                                <AutoComplete id=\"autocomplete\" value={value5} onChange={(e) => setValue5(e.value)} suggestions={filteredCountries} completeMethod={searchCountry} field=\"name\" className=\"p-invalid\"/>\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"calendar\">Calendar</label>\n                                <Calendar inputId=\"calendar\" value={value6} onChange={(e) => setValue6(e.value)} className=\"p-invalid\" showIcon/>\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"chips\">Chips</label>\n                                <Chips inputId=\"chips\" value={value8} onChange={(e) => setValue8(e.value)} className=\"p-invalid\"/>\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Password inputId=\"password\" value={value10} onChange={(e) => setValue10(e.target.value)} className=\"p-invalid\" />\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"field\">\n                                <label htmlFor=\"inputmask\">InputMask</label>\n                                <InputMask id=\"inputmask\" mask=\"99/99/9999\" value={value2} onChange={(e) => setValue2(e.value)} className=\"p-invalid\"/>\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"inputnumber\">InputNumber</label>\n                                <InputNumber id=\"inputnumber\" value={value3} onValueChange={(e) => setValue3(e.target.value)} className=\"p-invalid\"/>\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"dropdown\">Dropdown</label>\n                                <Dropdown id=\"dropdown\" options={cities} value={value7} onChange={(e) => setValue7(e.value)} optionLabel=\"name\" className=\"p-invalid\"/>\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"multiselect\">MultiSelect</label>\n                                <MultiSelect id=\"multiselect\" options={cities} value={value9} onChange={(e) => setValue9(e.value)} optionLabel=\"name\" className=\"p-invalid\"/>\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"textarea\">Textarea</label>\n                                <InputTextarea id=\"textarea\" rows=\"3\" cols=\"30\" value={value4} onChange={(e) => setValue4(e.target.value)} className=\"p-invalid\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(InvalidStateDemo, comparisonFn);","import React, { useState } from 'react';\nimport { Button } from 'primereact/button';\nimport { SplitButton } from 'primereact/splitbutton';\n\nconst ButtonDemo = () => {\n\n    const [loading1, setLoading1] = useState(false);\n    const [loading2, setLoading2] = useState(false);\n    const [loading3, setLoading3] = useState(false);\n    const [loading4, setLoading4] = useState(false);\n\n    const onLoadingClick1 = () => {\n        setLoading1(true);\n\n        setTimeout(() => {\n            setLoading1(false);\n        }, 2000);\n    }\n\n    const onLoadingClick2 = () => {\n        setLoading2(true);\n\n        setTimeout(() => {\n            setLoading2(false);\n        }, 2000);\n    }\n\n    const onLoadingClick3 = () => {\n        setLoading3(true);\n\n        setTimeout(() => {\n            setLoading3(false);\n        }, 2000);\n    }\n\n    const onLoadingClick4 = () => {\n        setLoading4(true);\n\n        setTimeout(() => {\n            setLoading4(false);\n        }, 2000);\n    }\n\n    const items = [\n        {\n            label: 'Update',\n            icon: 'pi pi-refresh'\n        },\n        {\n            label: 'Delete',\n            icon: 'pi pi-times'\n        },\n        {\n            label: 'Home',\n            icon: 'pi pi-home'\n        }\n    ];\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>Default</h5>\n                    <Button label=\"Submit\" className=\"mr-2 mb-2\"></Button>\n                    <Button label=\"Disabled\" className=\"mr-2 mb-2\" disabled></Button>\n                    <Button label=\"Link\" className=\"p-button-link mb-2 mr-2\"></Button>\n                </div>\n\n                <div className=\"card\">\n                    <h5>Severities</h5>\n                    <Button label=\"Primary\" className=\"mr-2 mb-2\" />\n                    <Button label=\"Secondary\" className=\"p-button-secondary mr-2 mb-2\" />\n                    <Button label=\"Success\" className=\"p-button-success mr-2 mb-2\" />\n                    <Button label=\"Info\" className=\"p-button-info mr-2 mb-2\" />\n                    <Button label=\"Warning\" className=\"p-button-warning mr-2 mb-2\" />\n                    <Button label=\"Danger\" className=\"p-button-danger mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Text</h5>\n                    <Button label=\"Primary\" className=\"p-button-text mr-2 mb-2\" />\n                    <Button label=\"Secondary\" className=\"p-button-secondary p-button-text mr-2 mb-2\" />\n                    <Button label=\"Success\" className=\"p-button-success p-button-text mr-2 mb-2\" />\n                    <Button label=\"Info\" className=\"p-button-info p-button-text mr-2 mb-2\" />\n                    <Button label=\"Warning\" className=\"p-button-warning p-button-text mr-2 mb-2\" />\n                    <Button label=\"Help\" className=\"p-button-help p-button-text mr-2 mb-2\" />\n                    <Button label=\"Danger\" className=\"p-button-danger p-button-text mr-2 mb-2\" />\n                    <Button label=\"Plain\" className=\"p-button-plain p-button-text mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Outlined</h5>\n                    <Button label=\"Primary\" className=\"p-button-outlined mr-2 mb-2\" />\n                    <Button label=\"Secondary\" className=\"p-button-outlined p-button-secondary mr-2 mb-2\" />\n                    <Button label=\"Success\" className=\"p-button-outlined p-button-success mr-2 mb-2\" />\n                    <Button label=\"Info\" className=\"p-button-outlined p-button-info mr-2 mb-2\" />\n                    <Button label=\"Warning\" className=\"p-button-outlined p-button-warning mr-2 mb-2\" />\n                    <Button label=\"Help\" className=\"p-button-outlined p-button-help mr-2 mb-2\" />\n                    <Button label=\"Danger\" className=\"p-button-outlined p-button-danger mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Button Group</h5>\n                    <span className=\"p-buttonset\">\n                        <Button label=\"Save\" icon=\"pi pi-check\" />\n                        <Button label=\"Delete\" icon=\"pi pi-trash\" />\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" />\n                    </span>\n                </div>\n\n                <div className=\"card\">\n                    <h5>SplitButton</h5>\n                    <SplitButton label=\"Save\" icon=\"pi pi-check\" model={items} className=\"p-button-secondary mr-2 mb-2\"></SplitButton>\n                    <SplitButton label=\"Save\" icon=\"pi pi-check\" model={items} className=\"p-button-success mr-2 mb-2\"></SplitButton>\n                    <SplitButton label=\"Save\" icon=\"pi pi-check\" model={items} className=\"p-button-info mr-2 mb-2\"></SplitButton>\n                    <SplitButton label=\"Save\" icon=\"pi pi-check\" model={items} className=\"p-button-warning mr-2 mb-2\"></SplitButton>\n                    <SplitButton label=\"Save\" icon=\"pi pi-check\" model={items} className=\"p-button-danger mr-2 mb-2\"></SplitButton>\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>Icons</h5>\n                    <Button icon=\"pi pi-star-fill\" className=\"mr-2 mb-2\"></Button>\n                    <Button label=\"Bookmark\" icon=\"pi pi-bookmark\" className=\"mr-2 mb-2\"></Button>\n                    <Button label=\"Bookmark\" icon=\"pi pi-bookmark\" iconPos=\"right\" className=\"mr-2 mb-2\"></Button>\n                </div>\n\n                <div className=\"card\">\n                    <h5>Raised</h5>\n                    <Button label=\"Primary\" className=\"p-button-raised mr-2 mb-2\" />\n                    <Button label=\"Secondary\" className=\"p-button-raised p-button-secondary mr-2 mb-2\" />\n                    <Button label=\"Success\" className=\"p-button-raised p-button-success mr-2 mb-2\" />\n                    <Button label=\"Info\" className=\"p-button-raised p-button-info mr-2 mb-2\" />\n                    <Button label=\"Warning\" className=\"p-button-raised p-button-warning mr-2 mb-2\" />\n                    <Button label=\"Danger\" className=\"p-button-raised p-button-danger mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Rounded</h5>\n                    <Button label=\"Primary\" className=\"p-button-rounded mr-2 mb-2\" />\n                    <Button label=\"Secondary\" className=\"p-button-rounded p-button-secondary mr-2 mb-2\" />\n                    <Button label=\"Success\" className=\"p-button-rounded p-button-success mr-2 mb-2\" />\n                    <Button label=\"Info\" className=\"p-button-rounded p-button-info mr-2 mb-2\" />\n                    <Button label=\"Warning\" className=\"p-button-rounded p-button-warning mr-2 mb-2\" />\n                    <Button label=\"Danger\" className=\"p-button-rounded p-button-danger mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Rounded Icons</h5>\n                    <Button icon=\"pi pi-star-fill\" className=\"p-button-rounded mr-2 mb-2\" />\n                    <Button icon=\"pi pi-bookmark\" className=\"p-button-rounded p-button-secondary mr-2 mb-2\" />\n                    <Button icon=\"pi pi-check\" className=\"p-button-rounded p-button-success mr-2 mb-2\" />\n                    <Button icon=\"pi pi-search\" className=\"p-button-rounded p-button-info mr-2 mb-2\" />\n                    <Button icon=\"pi pi-user\" className=\"p-button-rounded p-button-warning mr-2 mb-2\" />\n                    <Button icon=\"pi pi-sign-out\" className=\"p-button-rounded p-button-danger mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Rounded Text</h5>\n                    <Button icon=\"pi pi-check\" className=\"p-button-rounded p-button-text mr-2 mb-2\" />\n                    <Button icon=\"pi pi-bookmark\" className=\"p-button-rounded p-button-secondary p-button-text mr-2 mb-2\" />\n                    <Button icon=\"pi pi-search\" className=\"p-button-rounded p-button-success p-button-text mr-2 mb-2\" />\n                    <Button icon=\"pi pi-user\" className=\"p-button-rounded p-button-info p-button-text mr-2 mb-2\" />\n                    <Button icon=\"pi pi-bell\" className=\"p-button-rounded p-button-warning p-button-text mr-2 mb-2\" />\n                    <Button icon=\"pi pi-heart\" className=\"p-button-rounded p-button-help p-button-text mr-2 mb-2\" />\n                    <Button icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text mr-2 mb-2\" />\n                    <Button icon=\"pi pi-filter\" className=\"p-button-rounded p-button-plain p-button-text mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Rounded Outlined</h5>\n                    <Button icon=\"pi pi-check\" className=\"p-button-rounded p-button-outlined mr-2 mb-2\" />\n                    <Button icon=\"pi pi-bookmark\" className=\"p-button-rounded p-button-secondary p-button-outlined mr-2 mb-2\" />\n                    <Button icon=\"pi pi-search\" className=\"p-button-rounded p-button-success p-button-outlined mr-2 mb-2\" />\n                    <Button icon=\"pi pi-user\" className=\"p-button-rounded p-button-info p-button-outlined mr-2 mb-2\" />\n                    <Button icon=\"pi pi-bell\" className=\"p-button-rounded p-button-warning p-button-outlined mr-2 mb-2\" />\n                    <Button icon=\"pi pi-heart\" className=\"p-button-rounded p-button-help p-button-outlined mr-2 mb-2\" />\n                    <Button icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-outlined mr-2 mb-2\" />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Loading</h5>\n                    <Button className=\"mr-2 mb-2\" label=\"Search\" icon=\"pi pi-search\" loading={loading1} onClick={onLoadingClick1} />\n                    <Button className=\"mr-2 mb-2\" label=\"Search\" icon=\"pi pi-search\" iconPos=\"right\" loading={loading2} onClick={onLoadingClick2} />\n                    <Button className=\"mr-2 mb-2\" icon=\"pi pi-search\" loading={loading3} onClick={onLoadingClick3} />\n                    <Button className=\"mr-2 mb-2\" label=\"Search\" loading={loading4} onClick={onLoadingClick4} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(ButtonDemo, comparisonFn);\n","import axios from 'axios';\n\nexport default class CustomerService {\n\n    getCustomersSmall() {\n        return axios.get('assets/demo/data/customers-small.json').then(res => res.data.data);\n    }\n\n    getCustomersMedium() {\n        return axios.get('assets/demo/data/customers-medium.json').then(res => res.data.data);\n    }\n\n    getCustomersLarge() {\n        return axios.get('assets/demo/data/customers-large.json').then(res => res.data.data);\n    }\n\n    getCustomersXLarge() {\n        return axios.get('assets/demo/data/customers-xlarge.json').then(res => res.data.data);\n    }\n}\n","import axios from 'axios';\n\nexport default class ProductService {\n\n    getProductsSmall() {\n        return axios.get('assets/demo/data/products-small.json').then((res) => res.data.data);\n    }\n\n    getProducts() {\n        return axios.get('assets/demo/data/products.json').then((res) => res.data.data);\n    }\n\n    getProductsMixed() {\n        return axios.get('assets/demo/data/products-mixed.json').then((res) => res.data.data);\n    }\n\n    getProductsWithOrdersSmall() {\n        return axios.get('assets/demo/data/products-orders-small.json').then((res) => res.data.data);\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { classNames } from 'primereact/utils';\nimport { FilterMatchMode, FilterOperator } from 'primereact/api';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { ProgressBar } from 'primereact/progressbar';\nimport { Calendar } from 'primereact/calendar';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Slider } from 'primereact/slider';\nimport { TriStateCheckbox } from 'primereact/tristatecheckbox';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { Rating } from 'primereact/rating';\nimport CustomerService from '../service/CustomerService';\nimport ProductService from '../service/ProductService';\n\nconst TableDemo = () => {\n    const [customers1, setCustomers1] = useState(null);\n    const [customers2, setCustomers2] = useState([]);\n    const [customers3, setCustomers3] = useState([]);\n    const [filters1, setFilters1] = useState(null);\n    const [loading1, setLoading1] = useState(true);\n    const [loading2, setLoading2] = useState(true);\n    const [idFrozen, setIdFrozen] = useState(false);\n    const [products, setProducts] = useState([]);\n    const [expandedRows, setExpandedRows] = useState(null);\n\n    const representatives = [\n        { name: \"Amy Elsner\", image: 'amyelsner.png' },\n        { name: \"Anna Fali\", image: 'annafali.png' },\n        { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\n        { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\n        { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\n        { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\n        { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\n        { name: \"Onyama Limba\", image: 'onyamalimba.png' },\n        { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\n        { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\n    ];\n\n    const statuses = [\n        'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\n    ];\n\n    const customerService = new CustomerService();\n    const productService = new ProductService();\n\n    useEffect(() => {\n        setLoading2(true);\n\n        customerService.getCustomersLarge().then(data => { setCustomers1(getCustomers(data)); setLoading1(false) });\n        customerService.getCustomersLarge().then(data => { setCustomers2(getCustomers(data)); setLoading2(false); });\n        customerService.getCustomersMedium().then(data => setCustomers3(data));\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\n\n        initFilters1();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const balanceTemplate = (rowData) => {\n        return (\n            <span className=\"text-bold\">\n                {formatCurrency(rowData.balance)}\n            </span>\n        )\n    }\n\n    const getCustomers = (data) => {\n        return [...data || []].map(d => {\n            d.date = new Date(d.date);\n            return d;\n        });\n    }\n\n    const formatDate = (value) => {\n        return value.toLocaleDateString('en-US', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric',\n        });\n    }\n\n    const formatCurrency = (value) => {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n\n    const initFilters1 = () => {\n        setFilters1({\n            'global': { value: null, matchMode: FilterMatchMode.CONTAINS },\n            'name': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] },\n            'country.name': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] },\n            'representative': { value: null, matchMode: FilterMatchMode.IN },\n            'date': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.DATE_IS }] },\n            'balance': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\n            'status': { operator: FilterOperator.OR, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\n            'activity': { value: null, matchMode: FilterMatchMode.BETWEEN },\n            'verified': { value: null, matchMode: FilterMatchMode.EQUALS }\n        });\n    }\n\n\n    const countryBodyTemplate = (rowData) => {\n        return (\n            <React.Fragment>\n                <img alt=\"flag\" src=\"assets/demo/flags/flag_placeholder.png\" className={`flag flag-${rowData.country.code}`} width={30} />\n                <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }} className=\"image-text\">{rowData.country.name}</span>\n            </React.Fragment>\n        );\n    }\n\n    const filterClearTemplate = (options) => {\n        return <Button type=\"button\" icon=\"pi pi-times\" onClick={options.filterClearCallback} className=\"p-button-secondary\"></Button>;\n    }\n\n    const filterApplyTemplate = (options) => {\n        return <Button type=\"button\" icon=\"pi pi-check\" onClick={options.filterApplyCallback} className=\"p-button-success\"></Button>\n    }\n\n    const representativeBodyTemplate = (rowData) => {\n        const representative = rowData.representative;\n        return (\n            <React.Fragment>\n                <img alt={representative.name} src={`assets/demo/images/avatar/${representative.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\n                <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }} className=\"image-text\">{representative.name}</span>\n            </React.Fragment>\n        );\n    }\n\n    const representativeFilterTemplate = (options) => {\n        return (<>\n            <div className=\"mb-3 text-bold\">Agent Picker</div>\n            <MultiSelect value={options.value} options={representatives} itemTemplate={representativesItemTemplate} onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"Any\" className=\"p-column-filter\" />\n        </>\n        )\n    }\n\n    const representativesItemTemplate = (option) => {\n        return (\n            <div className=\"p-multiselect-representative-option\">\n                <img alt={option.name} src={`assets/demo/images/avatar/${option.image}`} width={32} style={{ verticalAlign: 'middle' }} />\n                <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }} className=\"image-text\">{option.name}</span>\n            </div>\n        );\n    }\n\n    const dateBodyTemplate = (rowData) => {\n        return formatDate(rowData.date);\n    }\n\n    const dateFilterTemplate = (options) => {\n        return <Calendar value={options.value} onChange={(e) => options.filterCallback(e.value, options.index)} dateFormat=\"mm/dd/yy\" placeholder=\"mm/dd/yyyy\" mask=\"99/99/9999\" />\n    }\n\n    const balanceBodyTemplate = (rowData) => {\n        return formatCurrency(rowData.balance);\n    }\n\n    const balanceFilterTemplate = (options) => {\n        return <InputNumber value={options.value} onChange={(e) => options.filterCallback(e.value, options.index)} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n    }\n\n    const statusBodyTemplate = (rowData) => {\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\n    }\n\n    const statusFilterTemplate = (options) => {\n        return <Dropdown value={options.value} options={statuses} onChange={(e) => options.filterCallback(e.value, options.index)} itemTemplate={statusItemTemplate} placeholder=\"Select a Status\" className=\"p-column-filter\" showClear />;\n    }\n\n    const statusItemTemplate = (option) => {\n        return <span className={`customer-badge status-${option}`}>{option}</span>;\n    }\n\n    const activityBodyTemplate = (rowData) => {\n        return <ProgressBar value={rowData.activity} showValue={false} style={{ height: '.5rem' }}></ProgressBar>;\n    }\n\n    const activityFilterTemplate = (options) => {\n        return (\n            <React.Fragment>\n                <Slider value={options.value} onChange={(e) => options.filterCallback(e.value)} range className=\"m-3\"></Slider>\n                <div className=\"flex align-items-center justify-content-between px-2\">\n                    <span>{options.value ? options.value[0] : 0}</span>\n                    <span>{options.value ? options.value[1] : 100}</span>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const verifiedBodyTemplate = (rowData) => {\n        return <i className={classNames('pi', { 'text-green-500 pi-check-circle': rowData.verified, 'text-pink-500 pi-times-circle': !rowData.verified })}></i>;\n    }\n\n    const verifiedFilterTemplate = (options) => {\n        return <TriStateCheckbox value={options.value} onChange={(e) => options.filterCallback(e.value)} />\n    }\n\n    const expandAll = () => {\n        let _expandedRows = {};\n        products.forEach(p => _expandedRows[`${p.id}`] = true);\n\n        setExpandedRows(_expandedRows);\n    }\n\n    const collapseAll = () => {\n        setExpandedRows(null);\n    }\n\n    const amountBodyTemplate = (rowData) => {\n        return formatCurrency(rowData.amount);\n    }\n\n    const statusOrderBodyTemplate = (rowData) => {\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\n    }\n\n    const searchBodyTemplate = () => {\n        return <Button icon=\"pi pi-search\" />;\n    }\n\n    const imageBodyTemplate = (rowData) => {\n        return <img src={`assets/demo/images/product/${rowData.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"shadow-2\" width={100} />;\n    }\n\n    const priceBodyTemplate = (rowData) => {\n        return formatCurrency(rowData.price);\n    }\n\n    const ratingBodyTemplate = (rowData) => {\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\n    }\n\n    const statusBodyTemplate2 = (rowData) => {\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\n    }\n\n    const rowExpansionTemplate = (data) => {\n        return (\n            <div className=\"orders-subtable\">\n                <h5>Orders for {data.name}</h5>\n                <DataTable value={data.orders} responsiveLayout=\"scroll\">\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\n                    <Column field=\"amount\" header=\"Amount\" body={amountBodyTemplate} sortable></Column>\n                    <Column field=\"status\" header=\"Status\" body={statusOrderBodyTemplate} sortable></Column>\n                    <Column headerStyle={{ width: '4rem' }} body={searchBodyTemplate}></Column>\n                </DataTable>\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"table-header-container\">\n            <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={expandAll} className=\"mr-2 mb-2\" />\n            <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={collapseAll} className=\"mb-2\" />\n        </div>\n    );\n\n    const headerTemplate = (data) => {\n        return (\n            <React.Fragment>\n                <img alt={data.representative.name} src={`assets/demo/images/avatar/${data.representative.image}`} width=\"32\" style={{ verticalAlign: 'middle' }} />\n                <span className=\"image-text font-bold ml-2\">{data.representative.name}</span>\n            </React.Fragment>\n        );\n    }\n\n    const footerTemplate = (data) => {\n        return (\n            <React.Fragment>\n                <td colSpan=\"4\" style={{ textAlign: 'right' }} className=\"text-bold pr-6\">Total Customers</td>\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\n            </React.Fragment>\n        );\n    }\n\n    const calculateCustomerTotal = (name) => {\n        let total = 0;\n\n        if (customers3) {\n            for (let customer of customers3) {\n                if (customer.representative.name === name) {\n                    total++;\n                }\n            }\n        }\n\n        return total;\n    }\n\n\n\n\n    return (\n        <div className=\"grid table-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Filter Menu</h5>\n                    <DataTable value={customers1} paginator className=\"p-datatable-gridlines\" showGridlines rows={10}\n                        dataKey=\"id\" filters={filters1} filterDisplay=\"menu\" loading={loading1} responsiveLayout=\"scroll\"\n                        emptyMessage=\"No customers found.\">\n                        <Column field=\"name\" header=\"Name\" filter filterPlaceholder=\"Search by name\" style={{ minWidth: '12rem' }} />\n                        <Column header=\"Country\" filterField=\"country.name\" style={{ minWidth: '12rem' }} body={countryBodyTemplate} filter filterPlaceholder=\"Search by country\"\n                            filterClear={filterClearTemplate} filterApply={filterApplyTemplate} />\n                        <Column header=\"Agent\" filterField=\"representative\" showFilterMatchModes={false} filterMenuStyle={{ width: '14rem' }} style={{ minWidth: '14rem' }} body={representativeBodyTemplate}\n                            filter filterElement={representativeFilterTemplate} />\n                        <Column header=\"Date\" filterField=\"date\" dataType=\"date\" style={{ minWidth: '10rem' }} body={dateBodyTemplate}\n                            filter filterElement={dateFilterTemplate} />\n                        <Column header=\"Balance\" filterField=\"balance\" dataType=\"numeric\" style={{ minWidth: '10rem' }} body={balanceBodyTemplate} filter filterElement={balanceFilterTemplate} />\n                        <Column field=\"status\" header=\"Status\" filterMenuStyle={{ width: '14rem' }} style={{ minWidth: '12rem' }} body={statusBodyTemplate} filter filterElement={statusFilterTemplate} />\n                        <Column field=\"activity\" header=\"Activity\" showFilterMatchModes={false} style={{ minWidth: '12rem' }} body={activityBodyTemplate} filter filterElement={activityFilterTemplate} />\n                        <Column field=\"verified\" header=\"Verified\" dataType=\"boolean\" bodyClassName=\"text-center\" style={{ minWidth: '8rem' }} body={verifiedBodyTemplate} filter filterElement={verifiedFilterTemplate} />\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n\n                    <h5>Frozen Columns</h5>\n                    <ToggleButton checked={idFrozen} onChange={(e) => setIdFrozen(e.value)} onIcon=\"pi pi-lock\" offIcon=\"pi pi-lock-open\" onLabel=\"Unfreeze Id\" offLabel=\"Freeze Id\" style={{ width: '10rem' }} />\n\n                    <DataTable value={customers2} scrollable scrollHeight=\"400px\" loading={loading2} scrollDirection=\"both\" className=\"mt-3\">\n                        <Column field=\"name\" header=\"Name\" style={{ flexGrow: 1, flexBasis: '160px' }} frozen></Column>\n                        <Column field=\"id\" header=\"Id\" style={{ flexGrow: 1, flexBasis: '100px' }} frozen={idFrozen} alignFrozen=\"left\"></Column>\n                        <Column field=\"name\" header=\"Name\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\n                        <Column field=\"country.name\" header=\"Country\" style={{ flexGrow: 1, flexBasis: '200px' }} body={countryBodyTemplate}></Column>\n                        <Column field=\"date\" header=\"Date\" style={{ flexGrow: 1, flexBasis: '200px' }} body={dateBodyTemplate}></Column>\n                        <Column field=\"company\" header=\"Company\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\n                        <Column field=\"status\" header=\"Status\" style={{ flexGrow: 1, flexBasis: '200px' }} body={statusBodyTemplate}></Column>\n                        <Column field=\"activity\" header=\"Activity\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\n                        <Column field=\"representative.name\" header=\"Representative\" style={{ flexGrow: 1, flexBasis: '200px' }} body={representativeBodyTemplate}></Column>\n                        <Column field=\"balance\" header=\"Balance\" body={balanceTemplate} frozen style={{ flexGrow: 1, flexBasis: '120px' }} alignFrozen=\"right\"></Column>\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Row Expand</h5>\n                    <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)} responsiveLayout=\"scroll\"\n                        rowExpansionTemplate={rowExpansionTemplate} dataKey=\"id\" header={header}>\n                        <Column expander style={{ width: '3em' }} />\n                        <Column field=\"name\" header=\"Name\" sortable />\n                        <Column header=\"Image\" body={imageBodyTemplate} />\n                        <Column field=\"price\" header=\"Price\" sortable body={priceBodyTemplate} />\n                        <Column field=\"category\" header=\"Category\" sortable />\n                        <Column field=\"rating\" header=\"Reviews\" sortable body={ratingBodyTemplate} />\n                        <Column field=\"inventoryStatus\" header=\"Status\" sortable body={statusBodyTemplate2} />\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Subheader Grouping</h5>\n                    <DataTable value={customers3} rowGroupMode=\"subheader\" groupRowsBy=\"representative.name\"\n                        sortMode=\"single\" sortField=\"representative.name\" sortOrder={1} scrollable scrollHeight=\"400px\"\n                        rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate} responsiveLayout=\"scroll\">\n                        <Column field=\"name\" header=\"Name\" style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"country\" header=\"Country\" body={countryBodyTemplate} style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"company\" header=\"Company\" style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"date\" header=\"Date\" style={{ minWidth: '200px' }}></Column>\n                    </DataTable>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(TableDemo, comparisonFn);\n","import React, { useState, useEffect } from 'react';\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Rating } from 'primereact/rating';\nimport { PickList } from 'primereact/picklist';\nimport { OrderList } from 'primereact/orderlist';\nimport ProductService from '../service/ProductService';\n\nconst ListDemo = () => {\n\n    const listValue = [\n        { name: 'San Francisco', code: 'SF' },\n        { name: 'London', code: 'LDN' },\n        { name: 'Paris', code: 'PRS' },\n        { name: 'Istanbul', code: 'IST' },\n        { name: 'Berlin', code: 'BRL' },\n        { name: 'Barcelona', code: 'BRC' },\n        { name: 'Rome', code: 'RM' },\n    ];\n\n    const [picklistSourceValue, setPicklistSourceValue] = useState(listValue);\n    const [picklistTargetValue, setPicklistTargetValue] = useState([]);\n    const [orderlistValue, setOrderlistValue] = useState(listValue);\n    const [dataviewValue, setDataviewValue] = useState(null);\n    const [layout, setLayout] = useState('grid');\n    const [sortKey, setSortKey] = useState(null);\n    const [sortOrder, setSortOrder] = useState(null);\n    const [sortField, setSortField] = useState(null);\n\n    const sortOptions = [\n        { label: 'Price High to Low', value: '!price' },\n        { label: 'Price Low to High', value: 'price' }\n    ];\n\n    useEffect(() => {\n        const productService = new ProductService();\n        productService.getProducts().then(data => setDataviewValue(data));\n    }, []);\n\n    const onSortChange = (event) => {\n        const value = event.value;\n\n        if (value.indexOf('!') === 0) {\n            setSortOrder(-1);\n            setSortField(value.substring(1, value.length));\n            setSortKey(value);\n        }\n        else {\n            setSortOrder(1);\n            setSortField(value);\n            setSortKey(value);\n        }\n    };\n\n    const dataviewHeader = (\n        <div className=\"grid grid-nogutter\">\n            <div className=\"col-6\" style={{ textAlign: 'left' }}>\n                <Dropdown value={sortKey} options={sortOptions} optionLabel=\"label\" placeholder=\"Sort By Price\" onChange={onSortChange} />\n            </div>\n            <div className=\"col-6\" style={{ textAlign: 'right' }}>\n                <DataViewLayoutOptions layout={layout} onChange={(e) => setLayout(e.value)} />\n            </div>\n        </div>\n    );\n\n    const dataviewListItem = (data) => {\n        return (\n            <div className=\"col-12\">\n                <div className=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\n                    <img src={`assets/demo/images/product/${data.image}`} alt={data.name} className=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\" />\n                    <div className=\"flex-1 text-center md:text-left\">\n                        <div className=\"font-bold text-2xl\">{data.name}</div>\n                        <div className=\"mb-3\">{data.description}</div>\n                        <Rating value={data.rating} readonly cancel={false} className=\"mb-2\"></Rating>\n                        <div className=\"flex align-items-center\">\n                            <i className=\"pi pi-tag mr-2\"></i>\n                            <span className=\"font-semibold\">{data.category}</span>\n                        </div>\n                    </div>\n                    <div className=\"flex flex-row md:flex-column justify-content-between w-full md:w-auto align-items-center md:align-items-end mt-5 md:mt-0\">\n                        <span className=\"text-2xl font-semibold mb-2 align-self-center md:align-self-end\">${data.price}</span>\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'} className=\"mb-2\"></Button>\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const dataviewGridItem = (data) => {\n        return (\n            <div className=\"col-12 md:col-4\">\n                <div className=\"card m-3 border-1 surface-border\">\n                    <div className=\"flex align-items-center justify-content-between\">\n                        <div className=\"flex align-items-center\">\n                            <i className=\"pi pi-tag mr-2\" />\n                            <span className=\"font-semibold\">{data.category}</span>\n                        </div>\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\n                    </div>\n                    <div className=\"text-center\">\n                        <img src={`assets/demo/images/product/${data.image}`} alt={data.name} className=\"w-9 shadow-2 my-3 mx-0\" />\n                        <div className=\"text-2xl font-bold\">{data.name}</div>\n                        <div className=\"mb-3\">{data.description}</div>\n                        <Rating value={data.rating} readonly cancel={false} />\n                    </div>\n                    <div className=\"flex align-items-center justify-content-between\">\n                        <span className=\"text-2xl font-semibold\">${data.price}</span>\n                        <Button icon=\"pi pi-shopping-cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'} />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const itemTemplate = (data, layout) => {\n        if (!data) {\n            return;\n        }\n\n        if (layout === 'list') {\n            return dataviewListItem(data);\n        }\n        else if (layout === 'grid') {\n            return dataviewGridItem(data);\n        }\n    };\n\n    return (\n        <div className=\"grid list-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>DataView</h5>\n                    <DataView value={dataviewValue} layout={layout} paginator rows={9} sortOrder={sortOrder} sortField={sortField} itemTemplate={itemTemplate} header={dataviewHeader}></DataView>\n                </div>\n            </div>\n\n            <div className=\"col-12 lg:col-8\">\n                <div className=\"card\">\n                    <h5>PickList</h5>\n                    <PickList source={picklistSourceValue} target={picklistTargetValue} sourceHeader=\"From\" targetHeader=\"To\" itemTemplate={(item) => <div>{item.name}</div>}\n                        onChange={(e) => { setPicklistSourceValue(e.source); setPicklistTargetValue(e.target) }} sourceStyle={{ height: '200px' }} targetStyle={{ height: '200px' }}></PickList>\n                </div>\n            </div>\n\n            <div className=\"col-12 lg:col-4\">\n                <div className=\"card\">\n                    <h5>OrderList</h5>\n                    <OrderList value={orderlistValue} listStyle={{ height: '200px' }} className=\"p-orderlist-responsive\" rows={10} header=\"Cities\" itemTemplate={(item) => <div>{item.name}</div>}\n                        onChange={(e) => setOrderlistValue(e.value)}></OrderList>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(ListDemo, comparisonFn);","import React, { useState, useEffect } from 'react';\nimport { Tree } from 'primereact/tree';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport NodeService from '../service/NodeService';\n\nconst TreeDemo = () => {\n\n    const [treeNodes, setTreeNodes] = useState([]);\n    const [selectedTreeNodeKeys, setSelectedTreeNodeKeys] = useState(null);\n    const [treeTableNodes, setTreeTableNodes] = useState([]);\n    const [selectedTreeTableNodeKeys, setSelectedTreeTableNodeKeys] = useState([]);\n\n    useEffect(() => {\n        const nodeService = new NodeService();\n        nodeService.getTreeNodes().then(data => setTreeNodes(data));\n        nodeService.getTreeTableNodes().then(data => setTreeTableNodes(data));\n    }, []);\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Tree</h5>\n                    <Tree value={treeNodes} selectionMode=\"checkbox\" selectionKeys={selectedTreeNodeKeys} onSelectionChange={(e) => setSelectedTreeNodeKeys(e.value)} />\n                </div>\n            </div>\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>TreeTable</h5>\n                    <TreeTable value={treeTableNodes} header=\"FileSystem\" selectionMode=\"checkbox\" selectionKeys={selectedTreeTableNodeKeys} onSelectionChange={(e) => setSelectedTreeTableNodeKeys(e.value)}>\n                        <Column field=\"name\" header=\"Name\" expander />\n                        <Column field=\"size\" header=\"Size\" />\n                        <Column field=\"type\" header=\"Type\" />\n                    </TreeTable>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(TreeDemo, comparisonFn);","import React, {useRef} from 'react';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Button } from 'primereact/button';\nimport { SplitButton } from 'primereact/splitbutton';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport { Panel } from 'primereact/panel';\nimport { Fieldset } from 'primereact/fieldset';\nimport { Card } from 'primereact/card';\nimport { Divider } from 'primereact/divider';\nimport { InputText } from 'primereact/inputtext';\nimport { Splitter, SplitterPanel } from 'primereact/splitter';\nimport { Password } from 'primereact/password';\nimport {Menu} from \"primereact/menu\";\n\n\nconst PanelDemo = () => {\n\n    const menu1 = useRef(null);\n    const toolbarItems = [\n        {\n            label: 'Save',\n            icon: 'pi pi-check'\n        },\n        {\n            label: 'Update',\n            icon: 'pi pi-upload'\n        },\n        {\n            label: 'Delete',\n            icon: 'pi pi-trash'\n        },\n        {\n            label: 'Home Page',\n            icon: 'pi pi-home'\n        },\n    ];\n\n    const toolbarLeftTemplate = () => {\n        return (\n            <>\n                <Button label=\"New\" icon=\"pi pi-plus\" style={{ marginRight: '.5em' }} />\n                <Button label=\"Open\" icon=\"pi pi-folder-open\" className=\"p-button-secondary\" />\n\n                <i className=\"pi pi-bars p-toolbar-separator\" style={{ marginRight: '.5em' }}></i>\n\n                <Button icon=\"pi pi-check\" className=\"p-button-success\" style={{ marginRight: '.5em' }} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-warning\" style={{ marginRight: '.5em' }} />\n                <Button icon=\"pi pi-print\" className=\"p-button-danger\" />\n            </>\n        )\n    };\n    const toolbarRightTemplate = <SplitButton label=\"Options\" icon=\"pi pi-check\" model={toolbarItems} menuStyle={{ width: '12rem' }}></SplitButton>;\n    const cardHeader = (\n        <div className=\"flex align-items-center justify-content-between mb-0 p-3 pb-0\">\n            <h5 className=\"m-0\">Card</h5>\n            <Button icon=\"pi pi-plus\" className=\"p-button-text\" onClick={(event) => menu1.current.toggle(event)}/>\n            <Menu ref={menu1} popup model={[{ label: 'Add New', icon: 'pi pi-fw pi-plus' }, { label: 'Remove', icon: 'pi pi-fw pi-minus' }]}/>\n        </div>\n    );\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Toolbar</h5>\n                    <Toolbar left={toolbarLeftTemplate} right={toolbarRightTemplate}></Toolbar>\n                </div>\n            </div>\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>AccordionPanel</h5>\n                    <Accordion activeIndex={0}>\n                        <AccordionTab header=\"Header I\">\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n\t\t\t\t\t\t\tExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                        </AccordionTab>\n                        <AccordionTab header=\"Header II\">\n                            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque\n                            ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia\n                            voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\n\t\t\t\t\t\t\tConsectetur, adipisci velit, sed quia non numquam eius modi.</p>\n                        </AccordionTab>\n                        <AccordionTab header=\"Header III\">\n                            <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\n                            et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga.\n                            Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit\n\t\t\t\t\t\t\tquo minus.</p>\n                        </AccordionTab>\n                    </Accordion>\n                </div>\n                <div className=\"card\">\n                    <h5>TabView</h5>\n                    <TabView>\n                        <TabPanel header=\"Header I\">\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n\t\t\t\t\t\t\tExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></TabPanel>\n                        <TabPanel header=\"Header II\">\n                            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque\n                            ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia\n                            voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\n\t\t\t\t\t\t\tConsectetur, adipisci velit, sed quia non numquam eius modi.</p>\n                        </TabPanel>\n                        <TabPanel header=\"Header III\">\n                            <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\n                            et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga.\n                            Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit\n\t\t\t\t\t\t\tquo minus.</p>\n                        </TabPanel>\n                    </TabView>\n                </div>\n            </div>\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>Panel</h5>\n                    <Panel header=\"Header\" toggleable>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n\t\t\t\t\t\tExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                    </Panel>\n                </div>\n                <div className=\"card\">\n                    <h5>Fieldset</h5>\n                    <Fieldset legend=\"Legend\" toggleable>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n\t\t\t\t\t\tExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                    </Fieldset>\n                </div>\n                <Card header={cardHeader}>\n                    <p className=\"line-height-3 m-0\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                </Card>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Divider</h5>\n                    <div className=\"grid\">\n                        <div className=\"col-5 flex align-items-center justify-content-center\">\n                            <div className=\"p-fluid\">\n                                <div className=\"field\">\n                                    <span className=\"p-float-label\">\n                                        <InputText id=\"username\" type=\"text\" />\n                                        <label htmlFor=\"username\">Username</label>\n                                    </span>\n                                </div>\n                                <div className=\"field\">\n                                    <span className=\"p-float-label\">\n                                        <Password id=\"password\" type=\"password\" />\n                                        <label htmlFor=\"password\">Password</label>\n                                    </span>\n                                </div>\n                                <Button label=\"Login\"></Button>\n                            </div>\n                        </div>\n                        <div className=\"col-1\">\n                            <Divider layout=\"vertical\">\n                                <b>OR</b>\n                            </Divider>\n                        </div>\n                        <div className=\"col-5 align-items-center justify-content-center\">\n                            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\n                            totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n                            architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n                            aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                        voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius modi.</p>\n\n                            <Divider layout=\"horizontal\" align=\"center\">\n                                <span className=\"p-tag\">Badge</span>\n                            </Divider>\n\n                            <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum\n                            deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati\n                            cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est\n                            laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.\n                        Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus.</p>\n\n                            <Divider align=\"right\">\n                                <Button label=\"Button\" icon=\"pi pi-search\" className=\"p-button-outlined\"></Button>\n                            </Divider>\n\n                            <p>Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et\n                            voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur\n                            a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis\n                            doloribus asperiores repellat.\n                            Donec vel volutpat ipsum. Integer nunc magna, posuere ut tincidunt eget, egestas vitae sapien.\n                        Morbi dapibus luctus odio.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Splitter</h5>\n                    <Splitter style={{ height: '300px' }} className=\"mb-5\">\n                        <SplitterPanel size={40} minSize={10} style={{overflow: 'auto'}}>\n                            <div className=\"col pt-3\">\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n                                labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                                ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit\n                                in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\n                                id est laborum.\n                            </div>\n                        </SplitterPanel>\n                        <SplitterPanel size={80}>\n                            <Splitter layout=\"vertical\">\n                                <SplitterPanel size={30} style={{overflow: 'auto'}}>\n                                    <div className=\"col pt-3\">\n                                        Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium\n                                        doloremque\n                                        laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n                                        architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia\n                                        voluptas\n                                        sit\n                                        aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                                        voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius\n                                        modi.\n                                    </div>\n                                </SplitterPanel>\n                                <SplitterPanel size={70} style={{overflow: 'auto'}}>\n                                    <div className=\"col pt-3\">\n                                        At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis\n                                        praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias\n                                        excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\n                                        officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem\n                                        rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est\n                                        eligendi optio cumque nihil impedit quo minus.\n                                    </div>\n                                </SplitterPanel>\n                            </Splitter>\n                        </SplitterPanel>\n                    </Splitter>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(PanelDemo, comparisonFn);","import React, { useState, useEffect, useRef } from 'react';\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport { Sidebar } from 'primereact/sidebar';\nimport { Toast } from 'primereact/toast';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { OverlayPanel } from 'primereact/overlaypanel';\nimport { InputText } from 'primereact/inputtext';\nimport { confirmPopup } from 'primereact/confirmpopup';\nimport ProductService from '../service/ProductService';\n\nconst OverlayDemo = () => {\n\n    const [displayBasic, setDisplayBasic] = useState(false);\n    const [displayConfirmation, setDisplayConfirmation] = useState(false);\n    const [visibleLeft, setVisibleLeft] = useState(false);\n    const [visibleRight, setVisibleRight] = useState(false);\n    const [visibleTop, setVisibleTop] = useState(false);\n    const [visibleBottom, setVisibleBottom] = useState(false);\n    const [visibleFullScreen, setVisibleFullScreen] = useState(false);\n    const [products, setProducts] = useState(null);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const op = useRef(null);\n    const op2 = useRef(null);\n    const toast = useRef(null);\n\n    const accept = () => {\n        toast.current.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\n    };\n\n    const reject = () => {\n        toast.current.show({ severity: 'error', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\n    };\n\n    const confirm = (event) => {\n        confirmPopup({\n            target: event.currentTarget,\n            message: 'Are you sure you want to proceed?',\n            icon: 'pi pi-exclamation-triangle',\n            accept,\n            reject\n        });\n    };\n\n    useEffect(() => {\n        const productService = new ProductService();\n        productService.getProductsSmall().then(data => setProducts(data));\n    }, []);\n\n    const toggle = (event) => {\n        op.current.toggle(event);\n    };\n\n    const toggleDataTable = (event) => {\n        op2.current.toggle(event);\n    };\n\n    const formatCurrency = (value) => {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    };\n\n    const onProductSelect = (event) => {\n        op2.current.hide();\n        toast.current.show({ severity: 'info', summary: 'Product Selected', detail: event.data.name, life: 3000 });\n    };\n\n    const basicDialogFooter = <Button type=\"button\" label=\"Dismiss\" onClick={() => setDisplayBasic(false)} icon=\"pi pi-check\" className=\"p-button-secondary\" />;\n    const imageBodyTemplate = (data) => <img src={`assets/demo/images/product/${data.image}`} alt={data.image} className=\"product-image\" width=\"100\" style={{ boxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)' }} />;\n    const priceBodyTemplate = (data) => formatCurrency(data.price);\n    const confirmationDialogFooter = (\n        <>\n            <Button type=\"button\" label=\"No\" icon=\"pi pi-times\" onClick={() => setDisplayConfirmation(false)} className=\"p-button-text\" />\n            <Button type=\"button\" label=\"Yes\" icon=\"pi pi-check\" onClick={() => setDisplayConfirmation(false)} className=\"p-button-text\" autoFocus />\n        </>\n    );\n\n    return (\n        <>\n            <Toast ref={toast} />\n            <div className=\"grid\">\n                <div className=\"col-12 lg:col-6\">\n                    <div className=\"card p-fluid\">\n                        <h5>Dialog</h5>\n                        <Dialog header=\"Dialog\" visible={displayBasic} style={{ width: '30vw' }} modal footer={basicDialogFooter} onHide={() => setDisplayBasic(false)}>\n                            <p>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                                quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit\n                                in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                            </p>\n                        </Dialog>\n                        <div className=\"grid\">\n                            <div className=\"col-12\">\n                                <Button type=\"button\" label=\"Show\" icon=\"pi pi-external-link\" onClick={() => setDisplayBasic(true)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card p-fluid\">\n                        <h5>Overlay Panel</h5>\n                        <div className=\"grid formgrid\">\n                            <div className=\"col-6\">\n                                <Button type=\"button\" label=\"Image\" onClick={toggle} className=\"p-button-success\" />\n                                <OverlayPanel ref={op} appendTo={document.body} showCloseIcon>\n                                    <img src=\"assets/demo/images/nature/nature9.jpg\" alt=\"nature1\" />\n                                </OverlayPanel>\n                            </div>\n                            <div className=\"col-6\">\n                                <Button type=\"button\" label=\"DataTable\" onClick={toggleDataTable} className=\"p-button-success\" />\n                                <OverlayPanel ref={op2} appendTo={document.body} showCloseIcon id=\"overlay_panel\" style={{ width: '450px' }}>\n                                    <DataTable value={products} selection={selectedProduct} onSelectionChange={(e) => setSelectedProduct(e.value)} selectionMode=\"single\" responsiveLayout=\"scroll\"\n                                        paginator rows={5} onRowSelect={onProductSelect}>\n                                        <Column field=\"name\" header=\"Name\" sortable headerStyle={{ minWidth: '10rem' }} />\n                                        <Column header=\"Image\" body={imageBodyTemplate} headerStyle={{ minWidth: '10rem' }} />\n                                        <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable headerStyle={{ minWidth: '8rem' }} />\n                                    </DataTable>\n                                </OverlayPanel>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-12 lg:col-6\">\n                    <div className=\"card p-fluid\">\n                        <h5>Confirmation</h5>\n                        <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={() => setDisplayConfirmation(true)} />\n                        <Dialog header=\"Confirmation\" visible={displayConfirmation} onHide={() => setDisplayConfirmation(false)} style={{ width: '350px' }} modal footer={confirmationDialogFooter}>\n                            <div className=\"flex align-items-center justify-content-center\">\n                                <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                                <span>Are you sure you want to proceed?</span>\n                            </div>\n                        </Dialog>\n                    </div>\n                    <div className=\"card\">\n                        <h5>Sidebar</h5>\n                        <Sidebar visible={visibleLeft} onHide={() => setVisibleLeft(false)} baseZIndex={1000}>\n                            <h1 style={{ fontWeight: 'normal' }}>Left Sidebar</h1>\n                        </Sidebar>\n\n                        <Sidebar visible={visibleRight} onHide={() => setVisibleRight(false)} baseZIndex={1000} position=\"right\">\n                            <h1 style={{ fontWeight: 'normal' }}>Right Sidebar</h1>\n                        </Sidebar>\n\n                        <Sidebar visible={visibleTop} onHide={() => setVisibleTop(false)} baseZIndex={1000} position=\"top\">\n                            <h1 style={{ fontWeight: 'normal' }}>Top Sidebar</h1>\n                        </Sidebar>\n\n                        <Sidebar visible={visibleBottom} onHide={() => setVisibleBottom(false)} baseZIndex={1000} position=\"bottom\">\n                            <h1 style={{ fontWeight: 'normal' }}>Bottom Sidebar</h1>\n                        </Sidebar>\n\n                        <Sidebar visible={visibleFullScreen} onHide={() => setVisibleFullScreen(false)} baseZIndex={1000} fullScreen>\n                            <h1 style={{ fontWeight: 'normal' }}>Full Screen</h1>\n                        </Sidebar>\n\n                        <Button type=\"button\" icon=\"pi pi-arrow-right\" className=\"p-button-warning\" onClick={() => setVisibleLeft(true)} style={{ marginRight: '.25em' }} />\n                        <Button type=\"button\" icon=\"pi pi-arrow-left\" className=\"p-button-warning\" onClick={() => setVisibleRight(true)} style={{ marginRight: '.25em' }} />\n                        <Button type=\"button\" icon=\"pi pi-arrow-down\" className=\"p-button-warning\" onClick={() => setVisibleTop(true)} style={{ marginRight: '.25em' }} />\n                        <Button type=\"button\" icon=\"pi pi-arrow-up\" className=\"p-button-warning\" onClick={() => setVisibleBottom(true)} style={{ marginRight: '.25em' }} />\n                        <Button type=\"button\" icon=\"pi pi-external-link\" className=\"p-button-warning\" onClick={() => setVisibleFullScreen(true)} />\n                    </div>\n                </div>\n\n                <div className=\"col-12 lg:col-6\">\n                    <div className=\"card\">\n                        <h5>Tooltip</h5>\n                        <div className=\"formgroup-inline\">\n                            <div className=\"field\">\n                                <InputText type=\"text\" placeholder=\"Username\" tooltip=\"Your username\" />\n                            </div>\n\n                            <Button type=\"button\" label=\"Save\" icon=\"pi pi-check\" tooltip=\"Click to proceed\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-12 lg:col-6\">\n                    <Toast ref={toast} />\n\n                    <div className=\"card\">\n                        <h5>ConfirmPopup</h5>\n                        <Button onClick={confirm} icon=\"pi pi-check\" label=\"Confirm\" className=\"mr-2\"></Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(OverlayDemo, comparisonFn);","import axios from 'axios';\n\nexport default class PhotoService {\n\n    getImages() {\n        return axios.get('assets/demo/data/photos.json').then(res => res.data.data);\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Carousel } from 'primereact/carousel';\nimport { Galleria } from 'primereact/galleria';\nimport { Button } from 'primereact/button';\nimport { Image } from \"primereact/image\";\nimport ProductService from '../service/ProductService';\nimport PhotoService from '../service/PhotoService';\n\nconst MediaDemo = () => {\n\n    const [products, setProducts] = useState([]);\n    const [images, setImages] = useState([]);\n    const galleriaResponsiveOptions = [\n        {\n            breakpoint: \"1024px\",\n            numVisible: 5,\n        },\n        {\n            breakpoint: \"960px\",\n            numVisible: 4,\n        },\n        {\n            breakpoint: \"768px\",\n            numVisible: 3,\n        },\n        {\n            breakpoint: \"560px\",\n            numVisible: 1,\n        },\n    ];\n    const carouselResponsiveOptions = [\n        {\n            breakpoint: \"1024px\",\n            numVisible: 3,\n            numScroll: 3,\n        },\n        {\n            breakpoint: \"768px\",\n            numVisible: 2,\n            numScroll: 2,\n        },\n        {\n            breakpoint: \"560px\",\n            numVisible: 1,\n            numScroll: 1,\n        },\n    ];\n\n    useEffect(() => {\n        const productService = new ProductService();\n        productService.getProductsSmall().then((products) => setProducts(products));\n\n        const photoService = new PhotoService();\n        photoService.getImages().then((images) => setImages(images));\n    }, []);\n\n    const carouselItemTemplate = (product) => {\n        return (\n            <div className=\"product-item\">\n                <div className=\"product-item-content\">\n                    <div className=\"mb-3\">\n                        <img src={`assets/demo/images/product/${product.image}`} alt={product.name} className=\"product-image\" />\n                    </div>\n                    <div>\n                        <h4 className=\"p-mb-1\">\n                            {product.name}\n                        </h4>\n                        <h6 className=\"mt-0 mb-3\">${product.price}</h6>\n                        <span className={`product-badge status-${product.inventoryStatus.toLowerCase()}`}>{product.inventoryStatus}</span>\n                        <div className=\"car-buttons mt-5\">\n                            <Button type=\"button\" className=\"p-button p-button-rounded mr-2\" icon=\"pi pi-search\"></Button>\n                            <Button type=\"button\" className=\"p-button-success p-button-rounded mr-2\" icon=\"pi pi-star\"></Button>\n                            <Button type=\"button\" className=\"p-button-help p-button-rounded\" icon=\"pi pi-cog\"></Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const galleriaItemTemplate = (item) => <img src={`assets/${item.itemImageSrc}`} alt={item.alt} style={{ width: '100%', display: 'block' }} />\n    const galleriaThumbnailTemplate = (item) => <img src={`assets/${item.thumbnailImageSrc}`} alt={item.alt} style={{ width: '100%', display: 'block' }} />\n\n    return (\n        <div className=\"grid p-fluid media-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Carousel</h5>\n                    <Carousel value={products} numVisible={3} numScroll={3} responsiveOptions={carouselResponsiveOptions} itemTemplate={carouselItemTemplate}></Carousel>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Galleria</h5>\n                    <Galleria value={images} responsiveOptions={galleriaResponsiveOptions} numVisible={7} circular style={{ maxWidth: '800px', margin: 'auto' }}\n                        item={galleriaItemTemplate} thumbnail={galleriaThumbnailTemplate}></Galleria>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Image</h5>\n                    <div className=\"flex justify-content-center\">\n                        <Image src=\"assets/demo/images/galleria/galleria11.jpg\" alt=\"galleria\" width={250} preview />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(MediaDemo, comparisonFn);","import React from 'react';\n\nexport const PersonalDemo = () => {\n    return (\n        <div className=\"flex align-items-center py-5 px-3\">\n            <i className=\"pi pi-fw pi-user mr-2 text-2xl\" />\n            <p className=\"m-0 text-lg\">Personal Component Content via Child Route</p>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const ConfirmationDemo = () => {\n    return (\n        <div className=\"flex align-items-center py-5 px-3\">\n            <i className=\"pi pi-fw pi-check mr-2 text-2xl\" />\n            <p className=\"m-0 text-lg\">Confirmation Component Content via Child Route</p>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const PaymentDemo = () => {\n    return (\n        <div className=\"flex align-items-center py-5 px-3\">\n            <i className=\"pi pi-fw pi-money-bill mr-2 text-2xl\" />\n            <p className=\"m-0 text-lg\">Payment Component Content via Child Route</p>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const SeatDemo = () => {\n    return (\n        <div className=\"flex align-items-center py-5 px-3\">\n            <i className=\"pi pi-fw pi-ticket mr-2 text-2xl\" />\n            <p className=\"m-0 text-lg\">Seat Component Content via Child Route</p>\n        </div>\n    )\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Menubar } from 'primereact/menubar';\nimport { InputText } from 'primereact/inputtext';\nimport { BreadCrumb } from 'primereact/breadcrumb';\nimport { Steps } from 'primereact/steps';\nimport { TabMenu } from 'primereact/tabmenu';\nimport { TieredMenu } from 'primereact/tieredmenu';\nimport { Menu } from 'primereact/menu';\nimport { Button } from 'primereact/button';\nimport { ContextMenu } from 'primereact/contextmenu';\nimport { MegaMenu } from 'primereact/megamenu';\nimport { PanelMenu } from 'primereact/panelmenu';\nimport { Route, useHistory, useLocation } from 'react-router-dom';\nimport { PersonalDemo } from '../components/menu/PersonalDemo';\nimport { ConfirmationDemo } from '../components/menu/ConfirmationDemo';\nimport { PaymentDemo } from '../components/menu/PaymentDemo';\nimport { SeatDemo } from '../components/menu/SeatDemo';\n\nconst MenuDemo = () => {\n\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const menu = useRef(null);\n    const contextMenu = useRef(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const checkActiveIndex = useCallback(() => {\n        const paths = location.pathname.split('/');\n        const currentPath = paths[paths.length - 1];\n\n        switch (currentPath) {\n            case 'seat':\n                setActiveIndex(1);\n                break;\n            case 'payment':\n                setActiveIndex(2);\n                break;\n            case 'confirmation':\n                setActiveIndex(3);\n                break;\n            default:\n                break;\n        }\n    }, [location])\n\n    useEffect(() => {\n        checkActiveIndex();\n    }, [checkActiveIndex])\n\n    const nestedMenuitems = [\n        {\n            label: 'Customers',\n            icon: 'pi pi-fw pi-table',\n            items: [\n                {\n                    label: 'New',\n                    icon: 'pi pi-fw pi-user-plus',\n                    items: [\n                        {\n                            label: 'Customer',\n                            icon: 'pi pi-fw pi-plus'\n                        },\n                        {\n                            label: 'Duplicate',\n                            icon: 'pi pi-fw pi-copy'\n                        },\n\n                    ]\n                },\n                {\n                    label: 'Edit',\n                    icon: 'pi pi-fw pi-user-edit'\n                }\n            ]\n        },\n        {\n            label: 'Orders',\n            icon: 'pi pi-fw pi-shopping-cart',\n            items: [\n                {\n                    label: 'View',\n                    icon: 'pi pi-fw pi-list'\n                },\n                {\n                    label: 'Search',\n                    icon: 'pi pi-fw pi-search'\n                },\n\n            ]\n        },\n        {\n            label: 'Shipments',\n            icon: 'pi pi-fw pi-envelope',\n            items: [\n                {\n                    label: 'Tracker',\n                    icon: 'pi pi-fw pi-compass'\n\n                },\n                {\n                    label: 'Map',\n                    icon: 'pi pi-fw pi-map-marker'\n\n                },\n                {\n                    label: 'Manage',\n                    icon: 'pi pi-fw pi-pencil'\n                }\n            ]\n        },\n        {\n            label: 'Profile',\n            icon: 'pi pi-fw pi-user',\n            items: [\n                {\n                    label: 'Settings',\n                    icon: 'pi pi-fw pi-cog'\n                },\n                {\n                    label: 'Billing',\n                    icon: 'pi pi-fw pi-file'\n                }\n            ]\n        },\n        {\n            label: 'Quit',\n            icon: 'pi pi-fw pi-sign-out'\n        }\n    ];\n\n    const breadcrumbHome = { icon: 'pi pi-home', to: '/' };\n    const breadcrumbItems = [\n        { label: 'Computer' },\n        { label: 'Notebook' },\n        { label: 'Accessories' },\n        { label: 'Backpacks' },\n        { label: 'Item' }\n    ];\n\n    const wizardItems = [\n        { label: 'Personal', command: () => history.push('/uikit/menu') },\n        { label: 'Seat', command: () => history.push('/uikit/menu/seat') },\n        { label: 'Payment', command: () => history.push('/uikit/menu/payment') },\n        { label: 'Confirmation', command: () => history.push('/uikit/menu/confirmation') }\n    ];\n\n    const tieredMenuItems = [\n        {\n            label: 'Customers',\n            icon: 'pi pi-fw pi-table',\n            items: [\n                {\n                    label: 'New',\n                    icon: 'pi pi-fw pi-user-plus',\n                    items: [\n                        {\n                            label: 'Customer',\n                            icon: 'pi pi-fw pi-plus'\n                        },\n                        {\n                            label: 'Duplicate',\n                            icon: 'pi pi-fw pi-copy'\n                        }\n                    ]\n                },\n                {\n                    label: 'Edit',\n                    icon: 'pi pi-fw pi-user-edit'\n                }\n            ]\n        },\n        {\n            label: 'Orders',\n            icon: 'pi pi-fw pi-shopping-cart',\n            items: [\n                {\n                    label: 'View',\n                    icon: 'pi pi-fw pi-list'\n                },\n                {\n                    label: 'Search',\n                    icon: 'pi pi-fw pi-search'\n                }\n            ]\n        },\n        {\n            label: 'Shipments',\n            icon: 'pi pi-fw pi-envelope',\n            items: [\n                {\n                    label: 'Tracker',\n                    icon: 'pi pi-fw pi-compass'\n\n                },\n                {\n                    label: 'Map',\n                    icon: 'pi pi-fw pi-map-marker'\n\n                },\n                {\n                    label: 'Manage',\n                    icon: 'pi pi-fw pi-pencil'\n                }\n            ]\n        },\n        {\n            label: 'Profile',\n            icon: 'pi pi-fw pi-user',\n            items: [\n                {\n                    label: 'Settings',\n                    icon: 'pi pi-fw pi-cog'\n                },\n                {\n                    label: 'Billing',\n                    icon: 'pi pi-fw pi-file'\n                }\n            ]\n        },\n        {\n            separator: true\n        },\n        {\n            label: 'Quit',\n            icon: 'pi pi-fw pi-sign-out'\n        }\n    ];\n\n    const overlayMenuItems = [\n        {\n            label: 'Save',\n            icon: 'pi pi-save'\n        },\n        {\n            label: 'Update',\n            icon: 'pi pi-refresh'\n        },\n        {\n            label: 'Delete',\n            icon: 'pi pi-trash'\n        },\n        {\n            separator: true\n        },\n        {\n            label: 'Home',\n            icon: 'pi pi-home'\n        }\n    ];\n\n    const menuitems = [\n        {\n            label: 'Customers',\n            items: [\n                {\n                    label: 'New',\n                    icon: 'pi pi-fw pi-plus',\n                },\n                {\n                    label: 'Edit',\n                    icon: 'pi pi-fw pi-user-edit'\n                }\n            ]\n        },\n        {\n            label: 'Orders',\n            items: [\n                {\n                    label: 'View',\n                    icon: 'pi pi-fw pi-list'\n                },\n                {\n                    label: 'Search',\n                    icon: 'pi pi-fw pi-search'\n                }\n            ]\n        }\n    ];\n\n    const contextMenuItems = [\n        {\n            label: 'Save',\n            icon: 'pi pi-save'\n        },\n        {\n            label: 'Update',\n            icon: 'pi pi-refresh'\n        },\n        {\n            label: 'Delete',\n            icon: 'pi pi-trash'\n        },\n        {\n            separator: true\n        },\n        {\n            label: 'Options',\n            icon: 'pi pi-cog'\n        }\n    ];\n\n    const megamenuItems = [\n        {\n            label: 'Fashion', icon: 'pi pi-fw pi-tag',\n            items: [\n                [\n                    {\n                        label: 'Woman',\n                        items: [{ label: 'Woman Item' }, { label: 'Woman Item' }, { label: 'Woman Item' }]\n                    },\n                    {\n                        label: 'Men',\n                        items: [{ label: 'Men Item' }, { label: 'Men Item' }, { label: 'Men Item' }]\n                    }\n                ],\n                [\n                    {\n                        label: 'Kids',\n                        items: [{ label: 'Kids Item' }, { label: 'Kids Item' }]\n                    },\n                    {\n                        label: 'Luggage',\n                        items: [{ label: 'Luggage Item' }, { label: 'Luggage Item' }, { label: 'Luggage Item' }]\n                    }\n                ]\n            ]\n        },\n        {\n            label: 'Electronics', icon: 'pi pi-fw pi-desktop',\n            items: [\n                [\n                    {\n                        label: 'Computer',\n                        items: [{ label: 'Computer Item' }, { label: 'Computer Item' }]\n                    },\n                    {\n                        label: 'Camcorder',\n                        items: [{ label: 'Camcorder Item' }, { label: 'Camcorder Item' }, { label: 'Camcorder Item' },]\n                    },\n                ],\n                [\n                    {\n                        label: 'TV',\n                        items: [{ label: 'TV Item' }, { label: 'TV Item' }]\n                    },\n                    {\n                        label: 'Audio',\n                        items: [{ label: 'Audio Item' }, { label: 'Audio Item' }, { label: 'Audio Item' }]\n                    }\n                ],\n                [\n                    {\n                        label: 'Sports.7',\n                        items: [{ label: 'Sports.7.1' }, { label: 'Sports.7.2' }]\n                    }\n                ]\n            ]\n        },\n        {\n            label: 'Furniture', icon: 'pi pi-fw pi-image',\n            items: [\n                [\n                    {\n                        label: 'Living Room',\n                        items: [{ label: 'Living Room Item' }, { label: 'Living Room Item' },]\n                    },\n                    {\n                        label: 'Kitchen',\n                        items: [{ label: 'Kitchen Item' }, { label: 'Kitchen Item' }, { label: 'Kitchen Item' }]\n                    }\n                ],\n                [\n                    {\n                        label: 'Bedroom',\n                        items: [{ label: 'Bedroom Item' }, { label: 'Bedroom Item' }]\n                    },\n                    {\n                        label: 'Outdoor',\n                        items: [{ label: 'Outdoor Item' }, { label: 'Outdoor Item' }, { label: 'Outdoor Item' }]\n                    }\n                ]\n            ]\n        },\n        {\n            label: 'Sports', icon: 'pi pi-fw pi-star',\n            items: [\n                [\n                    {\n                        label: 'Basketball',\n                        items: [{ label: 'Basketball Item' }, { label: 'Basketball Item' }]\n                    },\n                    {\n                        label: 'Football',\n                        items: [{ label: 'Football Item' }, { label: 'Football Item' }, { label: 'Football Item' }]\n                    }\n                ],\n                [\n                    {\n                        label: 'Tennis',\n                        items: [{ label: 'Tennis Item' }, { label: 'Tennis Item' }]\n                    }\n                ]\n            ]\n        }\n    ];\n\n    const panelMenuitems = [\n        {\n            label: 'Customers',\n            icon: 'pi pi-fw pi-table',\n            items: [\n                {\n                    label: 'New',\n                    icon: 'pi pi-fw pi-user-plus',\n                    items: [\n                        {\n                            label: 'Customer',\n                            icon: 'pi pi-fw pi-plus'\n                        },\n                        {\n                            label: 'Duplicate',\n                            icon: 'pi pi-fw pi-copy'\n                        },\n\n                    ]\n                },\n                {\n                    label: 'Edit',\n                    icon: 'pi pi-fw pi-user-edit'\n                }\n            ]\n        },\n        {\n            label: 'Orders',\n            icon: 'pi pi-fw pi-shopping-cart',\n            items: [\n                {\n                    label: 'View',\n                    icon: 'pi pi-fw pi-list'\n                },\n                {\n                    label: 'Search',\n                    icon: 'pi pi-fw pi-search'\n                }\n            ]\n        },\n        {\n            label: 'Shipments',\n            icon: 'pi pi-fw pi-envelope',\n            items: [\n                {\n                    label: 'Tracker',\n                    icon: 'pi pi-fw pi-compass'\n\n                },\n                {\n                    label: 'Map',\n                    icon: 'pi pi-fw pi-map-marker'\n\n                },\n                {\n                    label: 'Manage',\n                    icon: 'pi pi-fw pi-pencil'\n                }\n            ]\n        },\n        {\n            label: 'Profile',\n            icon: 'pi pi-fw pi-user',\n            items: [\n                {\n                    label: 'Settings',\n                    icon: 'pi pi-fw pi-cog'\n                },\n                {\n                    label: 'Billing',\n                    icon: 'pi pi-fw pi-file'\n                }\n            ]\n        }\n    ];\n\n    const toggleMenu = (event) => {\n        menu.current.toggle(event);\n    };\n\n    const onContextRightClick = (event) => {\n        contextMenu.current.show(event);\n    };\n\n    const menubarEndTemplate = () => {\n        return (\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"text\" placeholder=\"Search\" />\n            </span>\n        );\n    };\n\n    return (\n        <div className=\"grid p-fluid\">\n            <div className=\"col-12\">\n                <div className=\"card card-w-title\">\n                    <h5>Menubar</h5>\n                    <Menubar model={nestedMenuitems} end={menubarEndTemplate}></Menubar>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card card-w-title\">\n                    <h5>Breadcrumb</h5>\n                    <BreadCrumb home={breadcrumbHome} model={breadcrumbItems} />\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card card-w-title\">\n                    <h5>Steps</h5>\n                    <Steps model={wizardItems} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\n                    <Route exact path={'/uikit/menu'} component={PersonalDemo} />\n                    <Route path={'/uikit/menu/confirmation'} component={ConfirmationDemo} />\n                    <Route path={'/uikit/menu/payment'} component={PaymentDemo} />\n                    <Route path={'/uikit/menu/seat'} component={SeatDemo} />\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card card-w-title\">\n                    <h5>TabMenu</h5>\n                    <TabMenu model={wizardItems} activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)} />\n                    <Route exact path={'/uikit/menu'} component={PersonalDemo} />\n                    <Route path={'/uikit/menu/confirmation'} component={ConfirmationDemo} />\n                    <Route path={'/uikit/menu/payment'} component={PaymentDemo} />\n                    <Route path={'/uikit/menu/seat'} component={SeatDemo} />\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-4\">\n                <div className=\"card\">\n                    <h5>Tiered Menu</h5>\n                    <TieredMenu model={tieredMenuItems} />\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-4\">\n                <div className=\"card\">\n                    <h5>Plain Menu</h5>\n                    <Menu model={menuitems} />\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-4\">\n                <div className=\"card\">\n                    <h5>Overlay Menu</h5>\n\n                    <Menu ref={menu} model={overlayMenuItems} popup />\n                    <Button type=\"button\" label=\"Options\" icon=\"pi pi-angle-down\" onClick={toggleMenu} style={{ width: 'auto' }} />\n                </div>\n\n                <div className=\"card\" onContextMenu={onContextRightClick}>\n                    <h5>ContextMenu</h5>\n                    Right click to display.\n                    <ContextMenu ref={contextMenu} model={contextMenuItems} />\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>MegaMenu - Horizontal</h5>\n                    <MegaMenu model={megamenuItems} />\n\n                    <h5 style={{ marginTop: '1.55em' }}>MegaMenu - Vertical</h5>\n                    <MegaMenu model={megamenuItems} orientation=\"vertical\" />\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>PanelMenu</h5>\n                    <PanelMenu model={panelMenuitems} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(MenuDemo, comparisonFn);","import React, { useRef, useState } from 'react';\nimport { Toast } from 'primereact/toast';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\n\nconst MessagesDemo = () => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const toast = useRef();\n    const message = useRef();\n\n    const addSuccessMessage = () => {\n        message.current.show({ severity: 'success', content: 'Message Detail' });\n    };\n\n    const addInfoMessage = () => {\n        message.current.show({ severity: 'info', content: 'Message Detail' });\n    };\n\n    const addWarnMessage = () => {\n        message.current.show({ severity: 'warn', content: 'Message Detail' });\n    };\n\n    const addErrorMessage = () => {\n        message.current.show({ severity: 'error', content: 'Message Detail' });\n    };\n\n    const showSuccess = () => {\n        toast.current.show({ severity: 'success', summary: 'Success Message', detail: 'Message Detail', life: 3000 });\n    };\n\n    const showInfo = () => {\n        toast.current.show({ severity: 'info', summary: 'Info Message', detail: 'Message Detail', life: 3000 });\n    };\n\n    const showWarn = () => {\n        toast.current.show({ severity: 'warn', summary: 'Warn Message', detail: 'Message Detail', life: 3000 });\n    };\n\n    const showError = () => {\n        toast.current.show({ severity: 'error', summary: 'Error Message', detail: 'Message Detail', life: 3000 });\n    };\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12 lg:col-6\">\n                <div className=\"card\">\n                    <h5>Toast</h5>\n\n                    <Toast ref={toast} />\n                    <Button type=\"button\" onClick={showSuccess} label=\"Success\" className=\"p-button-success mr-2\" />\n                    <Button type=\"button\" onClick={showInfo} label=\"Info\" className=\"p-button-info mr-2\" />\n                    <Button type=\"button\" onClick={showWarn} label=\"Warn\" className=\"p-button-warning mr-2\" />\n                    <Button type=\"button\" onClick={showError} label=\"Error\" className=\"p-button-danger mr-2\" />\n                </div>\n            </div>\n\n            <div className=\"col-12 lg:col-6\">\n                <div className=\"card\">\n                    <h5>Messages</h5>\n\n                    <Button label=\"Success\" type=\"button\" onClick={addSuccessMessage} className=\"p-button-success mr-2\" />\n                    <Button label=\"Info\" type=\"button\" onClick={addInfoMessage} className=\"p-button-info mr-2\" />\n                    <Button label=\"Warn\" type=\"button\" onClick={addWarnMessage} className=\"p-button-warning mr-2\" />\n                    <Button label=\"Error\" type=\"button\" onClick={addErrorMessage} className=\"p-button-danger mr-2\" />\n                    <Messages ref={message} />\n                </div>\n            </div>\n\n            <div className=\"col-12 lg:col-8\">\n                <div className=\"card\">\n                    <h5>Inline</h5>\n                    <div className=\"field grid\">\n                        <label htmlFor=\"username1\" className=\"col-fixed w-9rem\">Username</label>\n                        <div className=\"col\">\n                            <InputText id=\"username1\" value={username} onChange={(e) => setUsername(e.target.value)} required className=\"p-invalid mr-2\"/>\n                            <Message severity=\"error\" text=\"Username is required\" />\n                        </div>\n                    </div>\n                    <div className=\"field grid\">\n                        <label htmlFor=\"email\" className=\"col-fixed w-9rem\">Email</label>\n                        <div className=\"col\">\n                            <InputText id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required className=\"p-invalid mr-2\"/>\n                            <Message severity=\"error\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-12 lg:col-4\">\n                <div className=\"card\">\n                    <h5>Help Text</h5>\n                    <div className=\"field p-fluid\">\n                        <label htmlFor=\"username2\">Username</label>\n                        <InputText id=\"username2\" type=\"text\" className=\"p-invalid\" aria-describedby=\"username-help\" />\n                        <small id=\"username-help\" className=\"p-error\">Enter your username to reset your password.</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(MessagesDemo, comparisonFn);","import React, { useRef } from 'react';\nimport { FileUpload } from 'primereact/fileupload';\n\nconst FileDemo = () => {\n\n    const toast = useRef(null);\n\n    const onUpload = () => {\n        toast.current.show({ severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000 });\n    }\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Advanced</h5>\n                    <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={onUpload} multiple accept=\"image/*\" maxFileSize={1000000} />\n\n                    <h5>Basic</h5>\n                    <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize={1000000} onUpload={onUpload} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(FileDemo, comparisonFn);\n","import React, { useEffect, useState } from 'react';\nimport { Chart } from 'primereact/chart';\n\nconst lineData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label: 'First Dataset',\n            data: [65, 59, 80, 81, 56, 55, 40],\n            fill: false,\n            backgroundColor: 'rgb(255, 205, 86)',\n            borderColor: 'rgb(255, 205, 86)',\n            tension: .4\n        },\n        {\n            label: 'Second Dataset',\n            data: [28, 48, 40, 19, 86, 27, 90],\n            fill: false,\n            backgroundColor: 'rgb(75, 192, 192)',\n            borderColor: 'rgb(75, 192, 192)',\n            tension: .4\n        }\n    ]\n};\n\nconst barData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label: 'My First dataset',\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgb(255, 99, 132)',\n            data: [65, 59, 80, 81, 56, 55, 40]\n        },\n        {\n            label: 'My Second dataset',\n            backgroundColor: 'rgb(54, 162, 235)',\n            borderColor: 'rgb(54, 162, 235)',\n            data: [28, 48, 40, 19, 86, 27, 90]\n        }\n    ]\n};\n\n\nconst pieData = {\n    labels: ['A', 'B', 'C'],\n    datasets: [\n        {\n            data: [540, 325, 702, 421],\n            backgroundColor: [\n                'rgb(54, 162, 235)',\n                'rgb(255, 99, 132)',\n                'rgb(255, 205, 86)',\n                'rgb(75, 192, 192)'\n            ]\n        }\n    ]\n};\n\nconst polarData = {\n    datasets: [{\n        data: [\n            11,\n            16,\n            7,\n            3\n        ],\n        backgroundColor: [\n            'rgb(54, 162, 235)',\n            'rgb(255, 99, 132)',\n            'rgb(255, 205, 86)',\n            'rgb(75, 192, 192)'\n        ],\n        label: 'My dataset'\n    }],\n    labels: [\n        'Blue',\n        'Purple',\n        'Orange',\n        'Green'\n    ]\n};\n\nconst radarData = {\n    labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n    datasets: [\n        {\n            label: 'My First dataset',\n            backgroundColor: 'rgba(54, 162, 235,0.2)',\n            borderColor: 'rgba(54, 162, 235,1)',\n            pointBackgroundColor: 'rgba(54, 162, 235,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(54, 162, 235,1)',\n            data: [65, 59, 90, 81, 56, 55, 40]\n        },\n        {\n            label: 'My Second dataset',\n            backgroundColor: 'rgba(255, 99, 132,0.2)',\n            borderColor: 'rgba(255, 99, 132,1)',\n            pointBackgroundColor: 'rgba(255, 99, 132,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(255, 99, 132,1)',\n            data: [28, 48, 40, 19, 96, 27, 100]\n        }\n    ]\n};\n\n\nconst ChartDemo = (props) => {\n\n    const [lineOptions, setLineOptions] = useState(null);\n    const [barOptions, setBarOptions] = useState(null);\n    const [pieOptions, setPieOptions] = useState(null);\n    const [polarOptions, setPolarOptions] = useState(null);\n    const [radarOptions, setRadarOptions] = useState(null);\n\n    const applyLightTheme = () => {\n        const lineOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef',\n                    }\n                },\n            }\n        };\n\n        const barOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#495057'\n                    },\n                    grid: {\n                        color: '#ebedef',\n                    }\n                },\n            }\n        };\n\n        const pieOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            }\n        };\n\n        const polarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        const radarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        setLineOptions(lineOptions)\n        setBarOptions(barOptions)\n        setPieOptions(pieOptions)\n        setPolarOptions(polarOptions)\n        setRadarOptions(radarOptions)\n\n    }\n\n    const applyDarkTheme = () => {\n        const lineOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)',\n                    }\n                },\n            }\n        };\n\n        const barOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)',\n                    }\n                },\n            }\n        };\n\n        const pieOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        const polarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)'\n                    }\n                }\n            }\n        };\n\n        const radarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)'\n                    }\n                }\n            }\n        };\n\n        setLineOptions(lineOptions)\n        setBarOptions(barOptions)\n        setPieOptions(pieOptions)\n        setPolarOptions(polarOptions)\n        setRadarOptions(radarOptions)\n    }\n\n    useEffect(() => {\n        if (props.colorMode === 'light') {\n            applyLightTheme();\n        } else {\n            applyDarkTheme();\n        }\n    }, [props.colorMode]);\n\n    return (\n        <div className=\"grid p-fluid\">\n            <div className=\"col-12 lg:col-6\">\n                <div className=\"card\">\n                    <h5>Linear Chart</h5>\n                    <Chart type=\"line\" data={lineData} options={lineOptions} />\n                </div>\n\n                <div className=\"card flex flex-column align-items-center\">\n                    <h5>Pie Chart</h5>\n                    <Chart type=\"pie\" data={pieData} options={pieOptions} style={{ width: '50%' }} />\n                </div>\n\n                <div className=\"card flex flex-column align-items-center\">\n                    <h5>Polar Area Chart</h5>\n                    <Chart type=\"polarArea\" data={polarData} options={polarOptions} style={{ width: '50%' }} />\n                </div>\n            </div>\n            <div className=\"col-12 lg:col-6\">\n                <div className=\"card\">\n                    <h5>Bar Chart</h5>\n                    <Chart type=\"bar\" data={barData} options={barOptions} />\n                </div>\n\n                <div className=\"card flex flex-column align-items-center\">\n                    <h5>Doughnut Chart</h5>\n                    <Chart type=\"doughnut\" data={pieData} options={pieOptions} style={{ width: '50%' }} />\n                </div>\n\n                <div className=\"card flex flex-column align-items-center\">\n                    <h5>Radar Chart</h5>\n                    <Chart type=\"radar\" data={radarData} options={radarOptions} style={{ width: '50%' }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return (prevProps.location.pathname === nextProps.location.pathname) && (prevProps.colorMode === nextProps.colorMode);\n};\n\nexport default React.memo(ChartDemo, comparisonFn);","import React, { useState, useEffect, useRef } from 'react';\nimport { ProgressBar } from 'primereact/progressbar';\nimport { Button } from 'primereact/button';\nimport { Badge } from 'primereact/badge';\nimport { Tag } from 'primereact/tag';\nimport { Avatar } from 'primereact/avatar';\nimport { AvatarGroup } from 'primereact/avatargroup';\nimport { Chip } from 'primereact/chip';\nimport { Skeleton } from 'primereact/skeleton';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport { ScrollTop } from 'primereact/scrolltop';\n\nconst MiscDemo = () => {\n\n    const [value, setValue] = useState(0);\n    const interval = useRef(null);\n\n    useEffect(() => {\n        let val = value;\n        interval.current = setInterval(() => {\n            val += Math.floor(Math.random() * 10) + 1;\n\n            if (val >= 100) {\n                val = 100;\n                clearInterval(interval.current);\n            }\n            setValue(val);\n        }, 2000);\n\n        return () => {\n            if (interval.current) {\n                clearInterval(interval.current);\n                interval.current = null;\n            }\n        }\n    }, [value]);\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>ProgressBar</h5>\n                    <div className=\"grid\">\n                        <div className=\"col\">\n                            <ProgressBar value={value} />\n                        </div>\n                        <div className=\"col\">\n                            <ProgressBar value=\"50\" showValue={false} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 lg:col-6\">\n                <div className=\"card\">\n                    <h4>Badge</h4>\n                    <h5>Numbers</h5>\n                    <Badge value=\"2\" className=\"mr-2\"></Badge>\n                    <Badge value=\"8\" severity=\"success\" className=\"mr-2\"></Badge>\n                    <Badge value=\"4\" severity=\"info\" className=\"mr-2\"></Badge >\n                    <Badge value=\"12\" severity=\"warning\" className=\"mr-2\"></Badge>\n                    <Badge value=\"3\" severity=\"danger\"></Badge>\n\n                    <h5>Positioned Badge</h5>\n                    <i className=\"pi pi-bell mr-4 p-text-secondary p-overlay-badge\" style={{ fontSize: '2rem' }}><Badge value=\"2\" ></Badge></i>\n                    <i className=\"pi pi-calendar mr-4 p-text-secondary p-overlay-badge\" style={{ fontSize: '2rem' }}><Badge value=\"10+\" severity=\"danger\" ></Badge></i>\n                    <i className=\"pi pi-envelope p-text-secondary p-overlay-badge\" style={{ fontSize: '2rem' }}><Badge severity=\"danger\"></Badge></i>\n\n                    <h5>Button Badge</h5>\n                    <Button type=\"button\" label=\"Emails\" className=\"mr-2\"><Badge value=\"8\" ></Badge></Button>\n                    <Button type=\"button\" label=\"Messages\" icon=\"pi pi-users\" className=\"p-button-warning\"><Badge value=\"8\" severity=\"danger\" ></Badge></Button>\n\n                    <h5>Sizes</h5>\n                    <Badge value=\"2\" className=\"mr-2\"></Badge>\n                    <Badge value=\"4\" className=\"mr-2\" size=\"large\" severity=\"warning\"></Badge>\n                    <Badge value=\"6\" size=\"xlarge\" severity=\"success\"></Badge>\n                </div>\n\n                <div className=\"card\">\n                    <h4>Avatar</h4>\n                    <h5>Avatar Group</h5>\n                    <AvatarGroup className=\"mb-3\">\n                        <Avatar image=\"assets/demo/images/avatar/amyelsner.png\" size=\"large\" shape=\"circle\"></Avatar>\n                        <Avatar image=\"assets/demo/images/avatar/asiyajavayant.png\" size=\"large\" shape=\"circle\"></Avatar>\n                        <Avatar image=\"assets/demo/images/avatar/onyamalimba.png\" size=\"large\" shape=\"circle\"></Avatar>\n                        <Avatar image=\"assets/demo/images/avatar/ionibowcher.png\" size=\"large\" shape=\"circle\"></Avatar>\n                        <Avatar image=\"assets/demo/images/avatar/xuxuefeng.png\" size=\"large\" shape=\"circle\"></Avatar>\n                        <Avatar label=\"+2\" shape=\"circle\" size=\"large\" style={{ 'backgroundColor': '#9c27b0', 'color': '#ffffff' }}></Avatar>\n                    </AvatarGroup>\n\n                    <h5>Label - Circle</h5>\n                    <Avatar label=\"P\" className=\"mr-2\" size=\"xlarge\" shape=\"circle\"></Avatar>\n                    <Avatar label=\"V\" className=\"mr-2\" size=\"large\" style={{ 'backgroundColor': '#2196F3', 'color': '#ffffff' }} shape=\"circle\"></Avatar>\n                    <Avatar label=\"U\" className=\"mr-2\" style={{ 'backgroundColor': '#9c27b0', 'color': '#ffffff' }} shape=\"circle\"></Avatar>\n\n                    <h5>Icon - Badge</h5>\n                    <Avatar className=\"p-overlay-badge\" icon=\"pi pi-user\" size=\"xlarge\"><Badge value=\"4\" /></Avatar>\n                </div>\n\n                <div className=\"card\">\n                    <h4>ScrollTop</h4>\n                    <ScrollPanel style={{ width: '250px', height: '200px' }}>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                            Vitae et leo duis ut diam.\n                            Ultricies mi quis hendrerit dolor magna eget est lorem. Amet consectetur adipiscing elit ut.\n                            Nam libero justo laoreet sit amet. Pharetra massa massa ultricies mi quis hendrerit dolor magna.\n                            Est ultricies integer quis auctor elit sed vulputate. Consequat ac felis donec et. Tellus orci ac auctor augue mauris.\n                            Semper feugiat nibh sed pulvinar proin gravida hendrerit lectus a. Tincidunt arcu non sodales neque sodales.\n                            Metus aliquam eleifend mi in nulla posuere sollicitudin aliquam ultrices. Sodales ut etiam sit amet nisl purus.\n                            Cursus sit amet dictum sit amet. Tristique senectus et netus et malesuada fames ac turpis egestas.\n                            Et tortor consequat id porta nibh venenatis cras sed. Diam maecenas ultricies mi eget mauris.\n                            Eget egestas purus viverra accumsan in nisl nisi. Suscipit adipiscing bibendum est ultricies integer.\n                            Mattis aliquam faucibus purus in massa tempor nec.\n                        </p>\n                        <ScrollTop target=\"parent\" className=\"custom-scrolltop\" threshold={100} icon=\"pi pi-arrow-up\"></ScrollTop>\n                    </ScrollPanel>\n                </div>\n            </div>\n            <div className=\"col-12 lg:col-6\">\n                <div className=\"card\">\n                    <h4>Tag</h4>\n                    <h5>Tags</h5>\n                    <Tag className=\"mr-2\" value=\"Primary\"></Tag>\n                    <Tag className=\"mr-2\" severity=\"success\" value=\"Success\"></Tag>\n                    <Tag className=\"mr-2\" severity=\"info\" value=\"Info\"></Tag>\n                    <Tag className=\"mr-2\" severity=\"warning\" value=\"Warning\"></Tag>\n                    <Tag severity=\"danger\" value=\"Danger\"></Tag>\n\n                    <h5>Pills</h5>\n                    <Tag className=\"mr-2\" value=\"Primary\" rounded></Tag>\n                    <Tag className=\"mr-2\" severity=\"success\" value=\"Success\" rounded></Tag>\n                    <Tag className=\"mr-2\" severity=\"info\" value=\"Info\" rounded></Tag>\n                    <Tag className=\"mr-2\" severity=\"warning\" value=\"Warning\" rounded></Tag>\n                    <Tag severity=\"danger\" value=\"Danger\" rounded></Tag>\n\n                    <h5>Icons</h5>\n                    <Tag className=\"mr-2\" icon=\"pi pi-user\" value=\"Primary\"></Tag>\n                    <Tag className=\"mr-2\" icon=\"pi pi-check\" severity=\"success\" value=\"Success\"></Tag>\n                    <Tag className=\"mr-2\" icon=\"pi pi-info-circle\" severity=\"info\" value=\"Info\"></Tag>\n                    <Tag className=\"mr-2\" icon=\"pi pi-exclamation-triangle\" severity=\"warning\" value=\"Warning\"></Tag>\n                    <Tag icon=\"pi pi-times\" severity=\"danger\" value=\"Danger\"></Tag>\n                </div>\n\n                <div className=\"card\">\n                    <h4>Chip</h4>\n                    <h5>Basic</h5>\n                    <div className=\"flex align-items-center flex-column sm:flex-row\">\n                        <Chip label=\"Action\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Comedy\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Mystery\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Thriller\" className=\"mb-2\" removable />\n                    </div>\n\n                    <h5>Icon</h5>\n                    <div className=\"flex align-items-center flex-column sm:flex-row\">\n                        <Chip label=\"Apple\" icon=\"pi pi-apple\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Facebook\" icon=\"pi pi-facebook\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Google\" icon=\"pi pi-google\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Microsoft\" icon=\"pi pi-microsoft\" className=\"mb-2\" removable />\n                    </div>\n\n                    <h5>Image</h5>\n                    <div className=\"flex align-items-center flex-column sm:flex-row\">\n                        <Chip label=\"Amy Elsner\" image=\"assets/demo/images/avatar/amyelsner.png\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Asiya Javayant\" image=\"assets/demo/images/avatar/asiyajavayant.png\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Onyama Limba\" image=\"assets/demo/images/avatar/onyamalimba.png\" className=\"mr-2 mb-2\" />\n                        <Chip label=\"Xuxue Feng\" image=\"assets/demo/images/avatar/xuxuefeng.png\" className=\"mb-2\" removable />\n                    </div>\n\n                    <h5>Styling</h5>\n                    <div className=\"flex align-items-center flex-column sm:flex-row\">\n                        <Chip label=\"Action\" className=\"mr-2 mb-2 custom-chip\" />\n                        <Chip label=\"Apple\" icon=\"pi pi-apple\" className=\"mr-2 mb-2 custom-chip\" />\n                        <Chip label=\"Onyama Limba\" image=\"assets/demo/images/avatar/onyamalimba.png\" className=\"mr-2 mb-2 custom-chip\" />\n                        <Chip label=\"Xuxue Feng\" image=\"assets/demo/images/avatar/xuxuefeng.png\" className=\"custom-chip mb-2\" removable />\n                    </div>\n                </div>\n\n                <div className=\"card\">\n                    <h4>Skeleton</h4>\n                    <div className=\"border-round border-1 surface-border p-4\">\n                        <div className=\"flex mb-3\">\n                            <Skeleton shape=\"circle\" size=\"4rem\" className=\"mr-2\"></Skeleton>\n                            <div>\n                                <Skeleton width=\"10rem\" className=\"mb-2\"></Skeleton>\n                                <Skeleton width=\"5rem\" className=\"mb-2\"></Skeleton>\n                                <Skeleton height=\".5rem\"></Skeleton>\n                            </div>\n                        </div>\n                        <Skeleton width=\"100%\" height=\"150px\"></Skeleton>\n                        <div className=\"flex justify-content-between mt-3\">\n                            <Skeleton width=\"4rem\" height=\"2rem\"></Skeleton>\n                            <Skeleton width=\"4rem\" height=\"2rem\"></Skeleton>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(MiscDemo, comparisonFn);","import React, { useEffect, useRef } from 'react';\nimport Prism from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-scss';\n\nconst AppCodeHighlight = (props) => {\n\n    const codeElement = useRef(null);\n\n    useEffect(() => {\n        if (Prism) {\n            Prism.highlightElement(codeElement.current);\n        }\n    }, []);\n\n    return (\n        <pre style={props.style}>\n            <code ref={codeElement} className={`language-${props.lang}`}>\n                {props.children}&nbsp;\n                </code>\n        </pre>\n    );\n}\n\nAppCodeHighlight.defaultProps = {\n    lang: 'jsx',\n    style: null\n};\n\nexport default AppCodeHighlight;\n","import React from 'react';\nimport AppCodeHighlight from '../AppCodeHighlight';\n\nconst Documentation = () => {\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card docs no-margin\">\n                    <h4>Current Version</h4>\n                    <p>React 17.x and PrimeReact 7.x</p>\n\n                    <h4>Getting Started</h4>\n                    <p>Freya is an application template for React, based on the popular <a href=\"https://github.com/facebookincubator/create-react-app\">create-react-app</a> that allows\n                            creating React apps with no configuration. To get started extract the contents of the zip bundle and install the dependencies\n                            with npm or yarn.</p>\n<AppCodeHighlight>\n{`\n\"npm install\" or \"yarn\"\n`}\n</AppCodeHighlight>\n\n                    <p>The following command needs to be run to create the css files in the sample project.\n                        Note: Users can automatically run scss files without using this command by moving the theme file they want to use in their own projects under the src folder.\n                    <a href=\"https://create-react-app.dev/docs/adding-a-sass-stylesheet/\"> Details</a></p>\n<AppCodeHighlight>\n{`\nsass public/assets:public/assets --no-source-map\n`}\n</AppCodeHighlight>\n\n                    <p>Next step is running the application using the start script and navigate to <b>http://localhost:3000/</b> to view the application.</p>\n\n<AppCodeHighlight>\n{`\n\"npm start\" or \"yarn start\"\n`}\n</AppCodeHighlight>\n                    <p>That is it, you may now start with the development of your application using the Freya template.</p>\n\n                    <h4>React Scripts</h4>\n                    <p>Following commands are derived from create-app-app.</p>\n<AppCodeHighlight>\n{`\n\"npm start\" or \"yarn start\": Starts the development server\n\"npm test\" or \"yarn test\": Runs the tests.\n\"npm run build\" or \"yarn run build\": Creates a production build.\n`}\n</AppCodeHighlight>\n\n                    <h4>Structure</h4>\n                    <p>Freya consists of 3 main parts; the application layout, layout resources and theme resources for PrimeReact components. <b>App.js</b> inside src folder is the main component containing the template for the base layout\n                            whereas required resources for the layout are placed inside the <b>public/assets/layout</b> folder and similarly theme resources are inside <b>public/assets/theme</b> folder.\n                        </p>\n\n                    <h4>Template</h4>\n                    <p>Main layout is the JSX of the App.js, it is divided into a couple of child components such as topbar, sidebar, right panel and footer. Here return of the\n                    App.js component that implements the logic such as menu state, layout modes and so on.\n                        </p>\n\n<AppCodeHighlight>\n{`\n<div className={layoutClassName} onClick={onDocumentClick}>\n\n    <AppTopbar topbarScheme={topbarScheme} onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive} onTopbarSearchToggle={onTopbarSearchToggle} onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive} onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu} menuActive={menuActive} onRootMenuItemClick={onRootMenuItemClick} mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick} menuMode={menuMode}\n        sidebarStatic={sidebarStatic} sidebarActive={sidebarActive} onSidebarMouseOver={onSidebarMouseOver} onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu} onMenuButtonClick={onMenuButtonClick} resetActiveIndex={resetActiveIndex} onMenuClick={onMenuClick} />\n\n    <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n    <AppConfig configActive={configActive} onConfigButtonClick={onConfigButtonClick} onConfigClick={onConfigClick}\n        menuMode={menuMode} onMenuModeChange={onMenuModeChange}\n        ripple={ripple} onRippleChange={onRippleChange}\n        inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\n        colorScheme={colorScheme} onColorSchemeChange={onColorSchemeChange}\n        topbarScheme={topbarScheme} onTopbarSchemeChange={onTopbarSchemeChange}\n        menuScheme={menuScheme} onMenuSchemeChange={onMenuSchemeChange}\n        themeScheme={themeScheme} onThemeSchemeChange={onThemeSchemeChange}\n        theme={theme} onThemeChange={onThemeChange} />\n\n    <div className=\"layout-main\">\n        <div className=\"layout-content\">\n            // routers\n        </div>\n\n        <AppFooter />\n    </div>\n\n    <div className=\"layout-mask modal-in\"></div>\n</div>\n`}\n</AppCodeHighlight>\n\n                    <h4>Menu</h4>\n                    <p>Menu is a separate component defined in <i>AppMenu.js</i> file based on PrimeReact MenuModel API. In order to define the menuitems,\n                        navigate to data section of <i>App.js</i> file and define your own model as a nested structure using the menu property.\n                        Here is the menu component from the demo application. Notice that menu object is bound to the model property of AppMenu component as shown above.</p>\n<div style={{ overflow: 'auto', height: '400px' }}>\n<AppCodeHighlight lang=\"js\">\n{`\nconst menu = [\n    {\n        label: 'Dashboard', icon: 'pi pi-home', to: '/'\n    },\n    {\n        label: 'UI Kit', icon: 'pi pi-star',\n        items: [\n            { label: 'Form Layout', icon: 'pi pi-id-card', to: '/uikit/formlayout' },\n            { label: 'Input', icon: 'pi pi-check-square', to: '/uikit/input' },\n            { label: 'Float Label', icon: 'pi pi-bookmark', to: '/uikit/floatlabel' },\n            { label: 'Invalid State', icon: 'pi pi-exclamation-circle', to: '/uikit/invalidstate' },\n            { label: 'Button', icon: 'pi pi-mobile', to: '/uikit/button', className: 'rotated-icon' },\n            { label: 'Table', icon: 'pi pi-table', to: '/uikit/table' },\n            { label: 'List', icon: 'pi pi-list', to: '/uikit/list' },\n            { label: 'Tree', icon: 'pi pi-share-alt', to: '/uikit/tree' },\n            { label: 'Panel', icon: 'pi pi-tablet', to: '/uikit/panel' },\n            { label: 'Overlay', icon: 'pi pi-clone', to: '/uikit/overlay' },\n            { label: 'Media', icon: \"pi pi-image\", to: '/uikit/media' },\n            { label: 'Menu', icon: 'pi pi-bars', to: '/uikit/menu' },\n            { label: 'Message', icon: 'pi pi-comment', to: '/uikit/message' },\n            { label: 'File', icon: 'pi pi-file', to: '/uikit/file' },\n            { label: 'Chart', icon: 'pi pi-chart-bar', to: '/uikit/chart' },\n            { label: 'Misc', icon: 'pi pi-circle-off', to: '/uikit/misc' },\n        ]\n    },\n    {\n        label: \"PrimeBlocks\", icon: \"pi pi-building\",\n        items: [\n            { label: \"Free Blocks\", icon: \"pi pi-eye\", to: \"/uiblocks/blocks\", badge: \"NEW\", badgeStyle: {width: '40px'} },\n            { label: \"All Blocks\", icon: \"pi pi-globe\", url: \"https://www.primefaces.org/primeblocks-react\", target: \"_blank\" }\n        ]\n    },\n    {\n        label: 'Utilities', icon: 'pi pi-fw pi-compass',\n        items: [\n            { label: 'Icons', icon: 'pi pi-fw pi-prime', to: '/utilities/icons' },\n            { label: \"PrimeFlex\", icon: \"pi pi-fw pi-desktop\", url: \"https://www.primefaces.org/primeflex\", target: \"_blank\" }\n        ]\n    },\n    {\n        label: 'Pages', icon: 'pi pi-briefcase',\n        items: [\n            { label: 'Crud', icon: 'pi pi-pencil', to: '/pages/crud' },\n            { label: 'Calendar', icon: 'pi pi-calendar-plus', to: '/pages/calendar' },\n            { label: 'Timeline', icon: 'pi pi-calendar', to: '/pages/timeline' },\n            { label: 'Landing', icon: 'pi pi-globe', url: 'assets/pages/landing.html', target: '_blank' },\n            { label: 'Login', icon: 'pi pi-sign-in', to: '/login' },\n            { label: 'Invoice', icon: 'pi pi-dollar', to: '/pages/invoice' },\n            { label: 'Help', icon: 'pi pi-question-circle', to: '/pages/help' },\n            { label: 'Error', icon: 'pi pi-times-circle', to: '/error' },\n            { label: 'Not Found', icon: 'pi pi-exclamation-circle', to: '/notfound' },\n            { label: 'Access Denied', icon: 'pi pi-lock', to: '/access' },\n            { label: 'Empty Page', icon: 'pi pi-circle-off', to: '/pages/empty' }\n        ]\n    },\n    {\n        label: 'Hierarchy', icon: 'pi pi-align-left',\n        items: [\n            {\n                label: 'Submenu 1', icon: 'pi pi-align-left',\n                items: [\n                    {\n                        label: 'Submenu 1.1', icon: 'pi pi-align-left',\n                        items: [\n                            { label: 'Submenu 1.1.1', icon: 'pi pi-align-left' },\n                            { label: 'Submenu 1.1.2', icon: 'pi pi-align-left' },\n                            { label: 'Submenu 1.1.3', icon: 'pi pi-align-left' },\n                        ]\n                    },\n                    {\n                        label: 'Submenu 1.2', icon: 'pi pi-align-left',\n                        items: [\n                            { label: 'Submenu 1.2.1', icon: 'pi pi-align-left' },\n                            { label: 'Submenu 1.2.2', icon: 'pi pi-align-left' }\n                        ]\n                    },\n                ]\n            },\n            {\n                label: 'Submenu 2', icon: 'pi pi-align-left',\n                items: [\n                    {\n                        label: 'Submenu 2.1', icon: 'pi pi-align-left',\n                        items: [\n                            { label: 'Submenu 2.1.1', icon: 'pi pi-align-left' },\n                            { label: 'Submenu 2.1.2', icon: 'pi pi-align-left' },\n                            { label: 'Submenu 2.1.3', icon: 'pi pi-align-left' },\n                        ]\n                    },\n                    {\n                        label: 'Submenu 2.2', icon: 'pi pi-align-left',\n                        items: [\n                            { label: 'Submenu 2.2.1', icon: 'pi pi-align-left' },\n                            { label: 'Submenu 2.2.2', icon: 'pi pi-align-left' }\n                        ]\n                    },\n                ]\n            }\n        ]\n    },\n    {\n        label: 'Start', icon: 'pi pi-download',\n        items: [\n            { label: 'Documentation', icon: 'pi pi-question', to: '/start/documentation' },\n            { label: 'Buy Now', icon: 'pi pi-shopping-cart', command: () => { window.location = \"https://www.primefaces.org/store\" } }\n        ]\n    }\n];\n`}\n</AppCodeHighlight>\n</div>\n\n                    <p>Dependencies of Layout are listed below and needs to be added to package.json. Only required\n                            dependency is PrimeReact where optional dependencies exist to enable certain components in PrimeReact.</p>\n\n<AppCodeHighlight lang=\"js\">\n{`\n\"primereact\": \"...\",                //required: PrimeReact components\n\"primeicons\": \"...\",                //required: Icons\n\"primeflex\": \"...\"                  //required: Grid system\n`}\n</AppCodeHighlight>\n\n                    <h4>Theme</h4>\n                    <p>Freya provides 16 PrimeReact themes out of the box, setup of a theme is simple as including the css of theme to your application. All themes are located inside are located inside public/assets/theme folder.</p>\n\n                    <ul>\n                        <li>avocado-light</li>\n                        <li>avocado-dark</li>\n                        <li>blue-light</li>\n                        <li>blue-dark</li>\n                        <li>green-light</li>\n                        <li>green-dark</li>\n                        <li>orange-light</li>\n                        <li>orange-dark</li>\n                        <li>purple-light</li>\n                        <li>purple-dark</li>\n                        <li>red-light</li>\n                        <li>red-dark</li>\n                        <li>turquoise-light</li>\n                        <li>turquoise-dark</li>\n                        <li>yellow-light</li>\n                        <li>yellow-dark</li>\n\t\t\t\t    </ul>\n\n                    <p>A custom theme can be developed by the following steps.</p>\n                    <ul>\n                        <li>Choose a custom theme name such as \"mytheme\".</li>\n                        <li>Create a folder named \"mytheme\" under <i>assets/theme</i> folder.</li>\n                        <li>Create a file such as theme.scss under <i>assets/theme/mytheme</i> folder.</li>\n                        <li>Define the variables listed below in your file and import the <i>../../sass/theme/_theme.scss</i> file.</li>\n                        <li>Build the scss to generate css</li>\n                        <li>Include the generated theme.css to your page.</li>\n                    </ul>\n\n                    <p>Here are the variables required to create a sample theme.</p>\n\n<AppCodeHighlight lang=\"scss\">\n{`\n$primaryLightColor: #777BF1;\n$primaryColor:#464DF2;\n$primaryDarkColor: #221ED9;\n$primaryDarkerColor: #1222B9;\n$primaryTextColor: #FFFFFF;\n$primaryLighterColor: rgba($primaryLightColor,.1);\n\n$highlightBg: $primaryColor;\n$highlightTextColor: $primaryTextColor;\n\n@import '../../sass/theme/_theme_light';\n`}\n</AppCodeHighlight>\n\n<p>An example sass command to compile the css would be;</p>\n\n<AppCodeHighlight>\n{`\nsass public/assets/theme/mytheme/theme.scss:public/assets/theme/mytheme/theme.css\n`}\n</AppCodeHighlight>\n\n                    <p>Watch mode is handy to avoid compiling everytime when a change is made, instead use the following command\n                        so that sass generates the file whenever you make a customization. This builds all css files whenever a change is made to any scss file.</p>\n<AppCodeHighlight>\n{`\nsass --watch public/assets:public/assets\n`}\n</AppCodeHighlight>\n\n                    <p>Same can also be applied to layout itself;</p>\n                    <ul>\n                        <li>Choose a layout name such as layout-myown.</li>\n                        <li>Create an empty file named layout-myown.scss inside <i>assets/layout/css</i> folder.</li>\n                        <li>Define the variables listed below and import the <i>/sass/layout/_layout.scss</i> file.</li>\n                        <li>Build the scss to generate css</li>\n                        <li>Serve the css by importing it using a link tag or a bundler.</li>\n                    </ul>\n\n                    <p>Here are the variables required to create a layout.</p>\n\n<AppCodeHighlight>\n{`\n@import '../../sass/layout/_layout_light';\n`}\n</AppCodeHighlight>\n                    <h4>SASS Variables</h4>\n                    <p>Both the theme and layout provides various variables to customize the design.</p>\n\n                    <h5>sass/variables/layout/_layout_common.scss</h5>\n                    <p>Common variables for light and dark application layout.</p>\n<AppCodeHighlight lang=\"scss\">\n{`\n//general\n$fontSize:14px !default;\n$fontFamily:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\" !default;\n$mobileBreakpoint:991px !default;\n$borderRadius:24px !default;\n$animationDuration:.2s !default;\n$animationTimingFunction:cubic-bezier(.05,.74,.2,.99) !default;\n$letterSpacing:0.02em !default;\n$transitionDuration:.2s !default;\n$tabletBreakpoint:991px !default;\n$phoneBreakpoint:576px !default;\n`}\n</AppCodeHighlight>\n                <h5>sass/variables/layout/_layout_light.scss</h5>\n\t\t\t\t<p>Variables of the light theme layout.</p>\n<AppCodeHighlight lang=\"scss\">\n{`\n$bodyBgColor:#F2F4F6  !default;\n$dividerColor:#dee2e6 !default;\n$textSecondaryColor:#6c757d !default;\n$overlayBorder:0 none !default;\n$overlayShadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12) !default;\n\n//text\n$textShade100:#3E4754 !default;\n$textShade200:rgba(41, 50, 65, 0.8) !default;\n$textShade300:rgba(41, 50, 65, 0.5) !default;\n\n//content\n$contentShade100:#ffffff !default;\n$contentShade200: #F7FAFF !default;\n$contentShade300: #EEF5FF !default;\n$contentShade400: #F7F7F8 !default;\n$dividerColor: #D4D6D9 !default;\n//accent\n$accentColor: #1976D2 !default;\n$accentTextColor: #ffffff !default;\n\n$menuTooltipBgColor:#293241!default;\n$menuTooltipTextColor:#ffffff !default;\n\n//sidebar right\n$rightSidebarWidth: 16rem !default;\n$rightSidebarBg: #ffffff !default;\n\n@import './_layout_common.scss';\n`}\n</AppCodeHighlight>\n                    <h5>sass/variables/theme/_theme_light.scss</h5>\n                    <p>Variables of the light component theme, see the <a href=\"https://www.primefaces.org/designer/api/primereact/6.0.0/\">Theme Designer API</a> for documentation.</p>\n\n<div style={{height: '400px', overflow: 'auto'}}>\n<AppCodeHighlight lang=\"scss\">\n{`\n$colors: (\n    \"blue\": #2196F3,\n    \"green\": #4caf50,\n    \"yellow\": #FBC02D,\n    \"cyan\": #00BCD4,\n    \"pink\": #E91E63,\n    \"indigo\": #3F51B5,\n    \"teal\": #009688,\n    \"orange\": #F57C00,\n    \"bluegray\": #607D8B,\n    \"purple\": #9C27B0\n);\n\n//reused color variables\n$shade000:#ffffff !default;    //surface\n$shade100:#FCFCFC !default;    //header background\n$shade200:rgba($primaryColor,.2) !default;    //hover background\n$shade300:#D4D6D9 !default;    //border, divider\n$shade400:#D4D6D9 !default;    //input border\n$shade500:#545B67 !default;    //input icon\n$shade600:#83888F !default;    //text secondary color\n$shade700:#69707A !default;    //text color\n$shade800:#343a40 !default;    //unused\n$shade900:#212529 !default;    //unused\n\n//global\n$fontFamily:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\" !default;\n$fontSize:1rem !default;\n$fontWeight:normal !default;\n$textColor:$shade700 !default;\n$textSecondaryColor:$shade600 !default;\n$borderRadius:6px !default;\n$transitionDuration:.2s !default;\n$formElementTransition:background-color $transitionDuration, color $transitionDuration, border-color $transitionDuration, box-shadow $transitionDuration !default;\n$actionIconTransition:background-color $transitionDuration, color $transitionDuration, box-shadow $transitionDuration !default;\n$listItemTransition:box-shadow $transitionDuration !default;\n$primeIconFontSize:1rem !default;\n$divider:1px solid $shade300 !default;\n$inlineSpacing:.5rem !default;\n$disabledOpacity:.6 !default;\n$maskBg:rgba(0, 0, 0, 0.4) !default;\n$loadingIconFontSize:2rem !default;\n$errorColor:#f44336 !default;\n\n//scale\n$scaleSM:0.875 !default;\n$scaleLG:1.25 !default;\n\n//focus\n$focusOutlineColor:$primaryLightColor !default;\n$focusOutline:0 none !default;\n$focusOutlineOffset:0 !default;\n$focusShadow:0 0 0 0.2rem $focusOutlineColor !default;\n\n//action icons\n$actionIconWidth:2rem !default;\n$actionIconHeight:2rem !default;\n$actionIconBg:transparent !default;\n$actionIconBorder:0 none !default;\n$actionIconColor:$shade600 !default;\n$actionIconHoverBg:$shade200 !default;\n$actionIconHoverBorderColor:transparent !default;\n$actionIconHoverColor:$shade700 !default;\n$actionIconBorderRadius:50% !default;\n\n//input field (e.g. inputtext, spinner, inputmask)\n$inputPadding:.5rem .5rem !default;\n$inputTextFontSize:1rem !default;\n\n$inputBg:$shade000 !default;\n$inputTextColor:$shade700 !default;\n$inputIconColor:$shade600 !default;\n$inputBorder:1px solid $shade400 !default;\n$inputHoverBorderColor:$primaryColor !default;\n$inputFocusBorderColor:$primaryColor !default;\n$inputErrorBorderColor:$errorColor !default;\n$inputPlaceholderTextColor:$shade600 !default;\n$inputFilledBg:$shade100 !default;\n$inputFilledHoverBg:$inputFilledBg !default;\n$inputFilledFocusBg:$shade000 !default;\n\n//input groups\n$inputGroupBg:$shade200 !default;\n$inputGroupTextColor:$shade600 !default;\n$inputGroupAddOnMinWidth:2.357rem !default;\n\n//input lists (e.g. dropdown, autocomplete, multiselect, orderlist)\n$inputListBg:$shade000 !default;\n$inputListTextColor:$shade700 !default;\n$inputListBorder:$inputBorder !default;\n$inputListPadding:.5rem 0 !default;\n$inputListItemPadding:.5rem 1rem !default;\n$inputListItemBg:transparent !default;\n$inputListItemTextColor:$shade700 !default;\n$inputListItemHoverBg:$shade200 !default;\n$inputListItemTextHoverColor:$shade700 !default;\n$inputListItemBorder:0 none !default;\n$inputListItemBorderRadius:0 !default;\n$inputListItemMargin:0 !default;\n$inputListItemFocusShadow:inset 0 0 0 0.15rem $focusOutlineColor !default;\n$inputListHeaderPadding:.5rem 1rem !default;\n$inputListHeaderMargin:0 !default;\n$inputListHeaderBg:$shade100 !default;\n$inputListHeaderTextColor:$shade700 !default;\n$inputListHeaderBorder:0 none !default;\n\n//inputs with overlays (e.g. autocomplete, dropdown, multiselect)\n$inputOverlayBg:$inputListBg !default;\n$inputOverlayHeaderBg:$inputListHeaderBg !default;\n$inputOverlayBorder:0 none !default;                  \n$inputOverlayShadow:0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12) !default;\n\n//password\n$passwordMeterBg:$shade300 !default;\n$passwordWeakBg:#D32F2F !default;\n$passwordMediumBg:#FBC02D !default;\n$passwordStrongBg:#689F38 !default;\n\n//button\n$buttonPadding:.5rem 1rem !default;\n$buttonIconOnlyWidth:2.357rem !default;\n$buttonIconOnlyPadding:.5rem 0 !default;\n$buttonBg:$primaryColor !default;\n$buttonTextColor:$primaryTextColor !default;\n$buttonBorder:1px solid $primaryColor !default;\n$buttonHoverBg:$primaryDarkColor !default;\n$buttonTextHoverColor:$primaryTextColor !default;\n$buttonHoverBorderColor:$primaryDarkColor !default;\n$buttonActiveBg:$primaryDarkerColor !default;\n$buttonTextActiveColor:$primaryTextColor !default;\n$buttonActiveBorderColor:$primaryDarkerColor !default;\n$raisedButtonShadow:0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12) !default;\n$roundedButtonBorderRadius:2rem !default;\n\n$textButtonHoverBgOpacity:.04 !default;\n$textButtonActiveBgOpacity:.16 !default;\n$outlinedButtonBorder:1px solid !default;\n$plainButtonTextColor:$textSecondaryColor !default;\n$plainButtonHoverBgColor:$shade200 !default;\n$plainButtonActiveBgColor:$shade300 !default;\n\n$secondaryButtonBg:#607D8B !default;\n$secondaryButtonTextColor:#ffffff !default;\n$secondaryButtonBorder:1px solid $secondaryButtonBg !default;\n$secondaryButtonHoverBg:scale-color($secondaryButtonBg, $lightness: -10%) !default;\n$secondaryButtonTextHoverColor:$secondaryButtonTextColor !default;\n$secondaryButtonHoverBorderColor:scale-color($secondaryButtonBg, $lightness: -10%) !default;\n$secondaryButtonActiveBg:scale-color($secondaryButtonBg, $lightness: -20%) !default;\n$secondaryButtonTextActiveColor:$secondaryButtonTextColor !default;\n$secondaryButtonActiveBorderColor:scale-color($secondaryButtonBg, $lightness: -20%) !default;\n$secondaryButtonFocusShadow:0 0 0 0.2rem scale-color($secondaryButtonBg, $lightness: 60%) !default;\n\n$infoButtonBg:#0288D1 !default;\n$infoButtonTextColor:#ffffff !default;\n$infoButtonBorder:1px solid $infoButtonBg !default;\n$infoButtonHoverBg:scale-color($infoButtonBg, $lightness: -10%) !default;\n$infoButtonTextHoverColor:$infoButtonTextColor !default;\n$infoButtonHoverBorderColor:scale-color($infoButtonBg, $lightness: -10%) !default;\n$infoButtonActiveBg:scale-color($infoButtonBg, $lightness: -20%) !default;\n$infoButtonTextActiveColor:$infoButtonTextColor !default;\n$infoButtonActiveBorderColor:scale-color($infoButtonBg, $lightness: -20%) !default;\n$infoButtonFocusShadow:0 0 0 0.2rem scale-color($infoButtonBg, $lightness: 60%) !default;\n\n$successButtonBg:#689F38 !default;\n$successButtonTextColor:#ffffff !default;\n$successButtonBorder:1px solid $successButtonBg !default;\n$successButtonHoverBg:scale-color($successButtonBg, $lightness: -10%) !default;\n$successButtonTextHoverColor:$successButtonTextColor !default;\n$successButtonHoverBorderColor:scale-color($successButtonBg, $lightness: -10%) !default;\n$successButtonActiveBg:scale-color($successButtonBg, $lightness: -20%) !default;\n$successButtonTextActiveColor:$successButtonTextColor !default;\n$successButtonActiveBorderColor:scale-color($successButtonBg, $lightness: -20%) !default;\n$successButtonFocusShadow:0 0 0 0.2rem scale-color($successButtonBg, $lightness: 60%) !default;\n\n$warningButtonBg:#FBC02D !default;\n$warningButtonTextColor:#212529 !default;\n$warningButtonBorder:1px solid $warningButtonBg !default;\n$warningButtonHoverBg:scale-color($warningButtonBg, $lightness: -10%) !default;\n$warningButtonTextHoverColor:$warningButtonTextColor !default;\n$warningButtonHoverBorderColor:scale-color($warningButtonBg, $lightness: -10%) !default;\n$warningButtonActiveBg:scale-color($warningButtonBg, $lightness: -20%) !default;\n$warningButtonTextActiveColor:$warningButtonTextColor !default;\n$warningButtonActiveBorderColor:scale-color($warningButtonBg, $lightness: -20%) !default;\n$warningButtonFocusShadow:0 0 0 0.2rem scale-color($warningButtonBg, $lightness: 60%) !default;\n\n$helpButtonBg:#9C27B0 !default;\n$helpButtonTextColor:#ffffff !default;\n$helpButtonBorder:1px solid $helpButtonBg !default;\n$helpButtonHoverBg:scale-color($helpButtonBg, $lightness: -10%) !default;\n$helpButtonTextHoverColor:$helpButtonTextColor !default;\n$helpButtonHoverBorderColor:scale-color($helpButtonBg, $lightness: -10%) !default;\n$helpButtonActiveBg:scale-color($helpButtonBg, $lightness: -20%) !default;\n$helpButtonTextActiveColor:$helpButtonTextColor !default;\n$helpButtonActiveBorderColor:scale-color($helpButtonBg, $lightness: -20%) !default;\n$helpButtonFocusShadow:0 0 0 0.2rem scale-color($helpButtonBg, $lightness: 60%) !default;\n\n$dangerButtonBg:#D32F2F !default;\n$dangerButtonTextColor:#ffffff !default;\n$dangerButtonBorder:1px solid $dangerButtonBg !default;\n$dangerButtonHoverBg:scale-color($dangerButtonBg, $lightness: -10%) !default;\n$dangerButtonTextHoverColor:$dangerButtonTextColor !default;\n$dangerButtonHoverBorderColor:scale-color($dangerButtonBg, $lightness: -10%) !default;\n$dangerButtonActiveBg:scale-color($dangerButtonBg, $lightness: -20%) !default;\n$dangerButtonTextActiveColor:$dangerButtonTextColor !default;\n$dangerButtonActiveBorderColor:scale-color($dangerButtonBg, $lightness: -20%) !default;\n$dangerButtonFocusShadow:0 0 0 0.2rem scale-color($dangerButtonBg, $lightness: 60%) !default;\n\n$linkButtonColor:$primaryDarkerColor !default;\n$linkButtonHoverColor:$primaryDarkerColor !default;\n$linkButtonTextHoverDecoration:underline !default;\n$linkButtonFocusShadow:0 0 0 0.2rem $focusOutlineColor !default;\n\n//checkbox\n$checkboxWidth:20px !default;\n$checkboxHeight:20px !default;\n$checkboxBorder:2px solid $shade400 !default;\n$checkboxIconFontSize:14px !default;\n$checkboxActiveBorderColor:$primaryColor !default;\n$checkboxActiveBg:$primaryColor !default;\n$checkboxIconActiveColor:$primaryTextColor !default;\n$checkboxActiveHoverBg:$primaryDarkerColor !default;\n$checkboxIconActiveHoverColor:$primaryTextColor !default;\n$checkboxActiveHoverBorderColor:$primaryDarkerColor !default;\n\n//radiobutton\n$radiobuttonWidth:20px !default;\n$radiobuttonHeight:20px !default;\n$radiobuttonBorder:2px solid $shade400 !default;\n$radiobuttonIconSize:12px !default;\n$radiobuttonActiveBorderColor:$primaryColor !default;\n$radiobuttonActiveBg:$primaryColor !default;\n$radiobuttonIconActiveColor:$primaryTextColor !default;\n$radiobuttonActiveHoverBg:$primaryDarkerColor !default;\n$radiobuttonIconActiveHoverColor:$primaryTextColor !default;\n$radiobuttonActiveHoverBorderColor:$primaryDarkerColor !default;\n\n//colorpicker\n$colorPickerPreviewWidth:2rem !default;\n$colorPickerPreviewHeight:2rem !default;\n$colorPickerBg:#323232 !default;\n$colorPickerBorder:1px solid #191919 !default;\n$colorPickerHandleColor:$shade000 !default;\n\n//togglebutton\n$toggleButtonBg:$inputBg !default;\n$toggleButtonBorder:1px solid $shade400 !default;\n$toggleButtonTextColor:$shade700 !default;\n$toggleButtonIconColor:$shade600 !default;\n$toggleButtonHoverBg:$shade200 !default;\n$toggleButtonHoverBorderColor:$shade400 !default;\n$toggleButtonTextHoverColor:$shade700 !default;\n$toggleButtonIconHoverColor:$shade600 !default;\n$toggleButtonActiveBg:$primaryColor !default;\n$toggleButtonActiveBorderColor:$primaryColor !default;\n$toggleButtonTextActiveColor:$primaryTextColor !default;\n$toggleButtonIconActiveColor:$primaryTextColor !default;\n$toggleButtonActiveHoverBg:$primaryDarkColor !default;\n$toggleButtonActiveHoverBorderColor:$primaryDarkColor !default;\n$toggleButtonTextActiveHoverColor:$primaryTextColor !default;\n$toggleButtonIconActiveHoverColor:$primaryTextColor !default;\n\n//inplace\n$inplacePadding:$inputPadding !default;\n$inplaceHoverBg:$shade200 !default;\n$inplaceTextHoverColor:$shade700 !default;\n\n//rating\n$ratingIconFontSize:1.143rem !default;\n$ratingCancelIconColor:#e74c3c !default;\n$ratingCancelIconHoverColor:#c0392b !default;\n$ratingStarIconOffColor:$shade700 !default;\n$ratingStarIconOnColor:$primaryColor !default;\n$ratingStarIconHoverColor:$primaryColor !default;\n\n//slider\n$sliderBg:$shade300 !default;\n$sliderBorder:0 none !default;\n$sliderHorizontalHeight:.286rem !default;\n$sliderVerticalWidth:0.286rem !default;\n$sliderHandleWidth:1.143rem !default;\n$sliderHandleHeight:1.143rem !default;\n$sliderHandleBg:$shade000 !default;\n$sliderHandleBorder:2px solid $primaryColor !default;\n$sliderHandleBorderRadius:50% !default;\n$sliderHandleHoverBorderColor:$primaryColor !default;\n$sliderHandleHoverBg:$primaryColor !default;\n$sliderRangeBg:$primaryColor !default;\n\n//calendar\n$calendarTableMargin:.5rem 0 !default;\n$calendarPadding:.5rem !default;\n$calendarBg:$shade000 !default;\n$calendarInlineBg:$calendarBg !default;\n$calendarTextColor:$shade700 !default;\n$calendarBorder:$inputListBorder !default;\n$calendarOverlayBorder:$inputOverlayBorder !default;\n\n$calendarHeaderPadding:.5rem !default;\n$calendarHeaderBg:$shade000 !default;\n$calendarInlineHeaderBg:$calendarBg !default;\n$calendarHeaderBorder:1px solid $shade300 !default;\n$calendarHeaderTextColor:$shade700 !default;\n$calendarHeaderFontWeight:600 !default;\n$calendarHeaderCellPadding:.5rem !default;\n\n$calendarCellDatePadding:.5rem !default;\n$calendarCellDateWidth:2.5rem !default;\n$calendarCellDateHeight:2.5rem !default;\n$calendarCellDateBorderRadius:50% !default;\n$calendarCellDateBorder:1px solid transparent !default;\n$calendarCellDateHoverBg:$shade200 !default;\n$calendarCellDateTodayBg:$shade400 !default;\n$calendarCellDateTodayBorderColor:transparent !default;\n$calendarCellDateTodayTextColor:$shade700 !default;\n\n$calendarButtonBarPadding:1rem 0 !default;\n$calendarTimePickerPadding:.5rem !default;\n$calendarTimePickerElementPadding:0 .5rem !default;\n$calendarTimePickerTimeFontSize:1.25rem !default;\n\n$calendarBreakpoint:769px !default;\n$calendarCellDatePaddingSM:0 !default;\n\n//input switch\n$inputSwitchWidth:3rem !default;\n$inputSwitchHeight:1.75rem !default;\n$inputSwitchBorderRadius:30px !default;\n$inputSwitchHandleWidth:1.250rem !default;\n$inputSwitchHandleHeight:1.250rem !default;\n$inputSwitchHandleBorderRadius:50% !default;\n$inputSwitchSliderPadding:.25rem !default;\n$inputSwitchSliderOffBg:$shade400 !default;\n$inputSwitchHandleOffBg:$shade000 !default;\n$inputSwitchSliderOffHoverBg:scale-color($shade400, $lightness: -10%) !default;\n$inputSwitchSliderOnBg:$primaryColor !default;\n$inputSwitchSliderOnHoverBg:$primaryDarkColor !default;\n$inputSwitchHandleOnBg:$shade000 !default;\n\n//panel\n$panelHeaderBorderColor:$shade300 !default;\n$panelHeaderBorder:1px solid $shade300 !default;\n$panelHeaderBg:$shade100 !default;\n$panelHeaderTextColor:$shade700 !default;\n$panelHeaderFontWeight:600 !default;\n$panelHeaderPadding:1rem !default;\n$panelToggleableHeaderPadding:.5rem 1rem !default;\n\n$panelHeaderHoverBg:$shade200 !default;\n$panelHeaderHoverBorderColor:$shade300 !default;\n$panelHeaderTextHoverColor:$shade700 !default;\n\n$panelContentBorderColor: $shade300 !default;\n$panelContentBorder:1px solid $shade300 !default;\n$panelContentBg:$shade000 !default;\n$panelContentTextColor:$shade700 !default;\n$panelContentPadding:1rem !default;\n\n$panelFooterBorder:1px solid $shade300 !default;\n$panelFooterBg:$shade000 !default;\n$panelFooterTextColor:$shade700 !default;\n$panelFooterPadding:0.5rem 1rem !default;\n\n//accordion\n$accordionSpacing:0 !default;\n$accordionHeaderBorder:$panelHeaderBorder !default;\n$accordionHeaderBg:$panelHeaderBg !default;\n$accordionHeaderTextColor:$panelHeaderTextColor !default;\n$accordionHeaderFontWeight:$panelHeaderFontWeight !default;\n$accordionHeaderPadding:$panelHeaderPadding !default;\n\n$accordionHeaderHoverBg:$shade200 !default;\n$accordionHeaderHoverBorderColor:$shade300 !default;\n$accordionHeaderTextHoverColor:$shade700 !default;\n\n$accordionHeaderActiveBg:$panelHeaderBg !default;\n$accordionHeaderActiveBorderColor:$shade300 !default;\n$accordionHeaderTextActiveColor:$shade700 !default;\n\n$accordionHeaderActiveHoverBg:$shade200 !default;\n$accordionHeaderActiveHoverBorderColor:$shade300 !default;\n$accordionHeaderTextActiveHoverColor:$shade700 !default;\n\n$accordionContentBorder:$panelContentBorder !default;\n$accordionContentBg:$panelContentBg !default;\n$accordionContentTextColor:$panelContentTextColor !default;\n$accordionContentPadding:$panelContentPadding !default;\n\n//tabview\n$tabviewNavBorder:1px solid $shade300 !default;\n$tabviewNavBorderWidth:0 0 2px 0 !default;\n$tabviewNavBg:$shade000 !default;\n\n$tabviewHeaderSpacing:0 !default;\n$tabviewHeaderBorder:solid $shade300 !default;\n$tabviewHeaderBorderWidth:0 0 2px 0 !default;\n$tabviewHeaderBorderColor:transparent transparent $shade300 transparent !default;\n$tabviewHeaderBg:$shade000 !default;\n$tabviewHeaderTextColor:$shade600 !default;\n$tabviewHeaderFontWeight:$panelHeaderFontWeight !default;\n$tabviewHeaderPadding:$panelHeaderPadding !default;\n$tabviewHeaderMargin:0 0 -2px 0 !default;\n\n$tabviewHeaderHoverBg:$shade000 !default;\n$tabviewHeaderHoverBorderColor:$shade600 !default;\n$tabviewHeaderTextHoverColor:$shade600 !default;\n\n$tabviewHeaderActiveBg:$shade000 !default;\n$tabviewHeaderActiveBorderColor:$primaryColor !default;\n$tabviewHeaderTextActiveColor:$primaryColor !default;\n\n$tabviewContentBorder:0 none !default;\n$tabviewContentBg:$panelContentBg !default;\n$tabviewContentTextColor:$panelContentTextColor !default;\n$tabviewContentPadding:$panelContentPadding !default;\n\n//upload\n$fileUploadProgressBarHeight:.25rem !default;\n$fileUploadContentPadding:2rem 1rem !default;\n\n//scrollpanel\n$scrollPanelTrackBorder:0 none !default;\n$scrollPanelTrackBg:$shade100 !default;\n\n//card\n$cardBodyPadding:1rem !default;\n$cardTitleFontSize:1.5rem !default;\n$cardTitleFontWeight:700 !default;\n$cardSubTitleFontWeight:400 !default;\n$cardSubTitleColor:$shade600 !default;\n$cardContentPadding:1rem 0 !default;\n$cardFooterPadding:1rem 0 0 0 !default;\n$cardShadow:0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12) !default;\n\n//editor\n$editorToolbarBg:$panelHeaderBg !default;\n$editorToolbarBorder:$panelHeaderBorder !default;\n$editorToolbarPadding:$panelHeaderPadding !default;\n$editorToolbarIconColor:$textSecondaryColor !default;\n$editorToolbarIconHoverColor:$textColor !default;\n$editorIconActiveColor:$primaryColor !default;\n$editorContentBorder:$panelContentBorder !default;\n$editorContentBg:$panelContentBg !default;\n\n//paginator\n$paginatorBg:$shade000 !default;\n$paginatorTextColor:$shade600 !default;\n$paginatorBorder:solid $shade200 !default;\n$paginatorBorderWidth:0 !default;\n$paginatorPadding:.5rem 1rem !default;\n$paginatorElementWidth:$buttonIconOnlyWidth !default;\n$paginatorElementHeight:$buttonIconOnlyWidth !default;\n$paginatorElementBg:transparent !default;\n$paginatorElementBorder:0 none !default;\n$paginatorElementIconColor:$shade600 !default;\n$paginatorElementHoverBg:$shade200 !default;\n$paginatorElementHoverBorderColor:transparent !default;\n$paginatorElementIconHoverColor:$shade700 !default;\n$paginatorElementBorderRadius:$borderRadius !default;\n$paginatorElementMargin:.143rem !default;\n$paginatorElementPadding:0 !default;\n\n//table\n$tableHeaderBorder:1px solid $shade200 !default;\n$tableHeaderBorderWidth:1px 0 1px 0 !default;\n$tableHeaderBg:$shade100 !default;\n$tableHeaderTextColor:$shade700 !default;\n$tableHeaderFontWeight:600 !default;\n$tableHeaderPadding:1rem 1rem !default;\n\n$tableHeaderCellPadding:1rem 1rem !default;\n$tableHeaderCellBg:$shade100 !default;\n$tableHeaderCellTextColor:$shade700 !default;\n$tableHeaderCellFontWeight:600 !default;\n$tableHeaderCellBorder:1px solid $shade200 !default;\n$tableHeaderCellBorderWidth:0 0 1px 0 !default;\n$tableHeaderCellHoverBg:$shade200 !default;\n$tableHeaderCellTextHoverColor:$shade700 !default;\n$tableHeaderCellIconColor:$shade600 !default;\n$tableHeaderCellIconHoverColor:$shade600 !default;\n$tableHeaderCellHighlightBg:$shade100 !default;\n$tableHeaderCellHighlightTextColor:$primaryColor !default;\n$tableHeaderCellHighlightHoverBg:$shade200 !default;\n$tableHeaderCellHighlightTextHoverColor:$primaryColor !default;\n$tableSortableColumnBadgeSize:1.143rem !default;\n\n$tableBodyRowBg:$shade000 !default;\n$tableBodyRowTextColor:$shade700 !default;\n$tableBodyRowEvenBg:scale-color($tableBodyRowBg, $lightness: -1%) !default;\n$tableBodyRowHoverBg:$shade200 !default;\n$tableBodyRowTextHoverColor:$shade700 !default;\n$tableBodyCellBorder:1px solid $shade200 !default;\n$tableBodyCellBorderWidth:0 0 1px 0 !default;\n$tableBodyCellPadding:1rem 1rem !default;\n\n$tableFooterCellPadding:1rem 1rem !default;\n$tableFooterCellBg:$shade100 !default;\n$tableFooterCellTextColor:$shade700 !default;\n$tableFooterCellFontWeight:600 !default;\n$tableFooterCellBorder:1px solid $shade200 !default;\n$tableFooterCellBorderWidth:0 0 1px 0 !default;\n$tableResizerHelperBg:$primaryColor !default;\n$tableDragHelperBg: rgba($primaryColor, .16) !default;\n\n$tableFooterBorder:1px solid $shade200 !default;\n$tableFooterBorderWidth:0 0 1px 0 !default;\n$tableFooterBg:$shade100 !default;\n$tableFooterTextColor:$shade700 !default;\n$tableFooterFontWeight:600 !default;\n$tableFooterPadding:1rem 1rem !default;\n\n$tableCellContentAlignment:left !default;\n$tableTopPaginatorBorderWidth:0 0 1px 0 !default;\n$tableBottomPaginatorBorderWidth:0 0 1px 0 !default;\n\n$tableScaleSM:0.5 !default;\n$tableScaleLG:1.25 !default;\n\n//dataview\n$dataViewContentPadding:0 !default;\n$dataViewContentBorder:0 none !default;\n$dataViewListItemBorder:solid $shade200 !default;\n$dataViewListItemBorderWidth:0 0 1px 0 !default;\n\n//orderlist, picklist\n$orderListBreakpoint:769px !default;\n$pickListBreakpoint:769px !default;\n\n//schedule\n$fullCalendarEventBg:$primaryDarkColor !default;\n$fullCalendarEventBorderColor: $primaryDarkColor !default;\n$fullCalendarEventBorder:1px solid $primaryDarkColor !default;\n$fullCalendarEventTextColor:$primaryTextColor !default;\n\n//tree\n$treeContainerPadding:0.286rem !default;\n$treeNodePadding:0.143rem !default;\n$treeNodeContentPadding:.5rem !default;\n$treeNodeChildrenPadding:0 0 0 1rem !default;\n$treeNodeIconColor:$shade600 !default;\n\n//timeline\n$timelineVerticalEventContentPadding:0 1rem !default;\n$timelineHorizontalEventContentPadding:1rem 0 !default;\n$timelineEventMarkerWidth:1rem !default;\n$timelineEventMarkerHeight:1rem !default;\n$timelineEventMarkerBorderRadius:50% !default;\n$timelineEventMarkerBorder:2px solid $primaryColor !default;\n$timelineEventMarkerBackground:$shade000 !default;\n$timelineEventConnectorSize:2px !default;\n$timelineEventColor:$shade300 !default;\n\n//org chart\n$organizationChartConnectorColor:$shade300 !default;\n\n//message\n$messageMargin:1rem 0 !default;\n$messagePadding:1rem 1.5rem !default;\n$messageBorderWidth:0 0 0 6px !default;\n$messageIconFontSize:1.5rem !default;\n$messageTextFontSize:1rem !default;\n$messageTextFontWeight:500 !default;\n\n//inline message\n$inlineMessagePadding:$inputPadding !default;\n$inlineMessageMargin:0 !default;\n$inlineMessageIconFontSize:1rem !default;\n$inlineMessageTextFontSize:1rem !default;\n$inlineMessageBorderWidth:0px !default;\n\n//toast\n$toastIconFontSize:2rem !default;\n$toastMessageTextMargin:0 0 0 1rem !default;\n$toastMargin:0 0 1rem 0 !default;\n$toastPadding:1rem !default;\n$toastBorderWidth:0 0 0 6px !default;\n$toastShadow:0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12) !default;\n$toastOpacity:.9 !default;\n$toastTitleFontWeight:700 !default;\n$toastDetailMargin:$inlineSpacing 0 0 0 !default;\n\n//severities\n$infoMessageBg:#B3E5FC !default;\n$infoMessageBorder:solid scale-color($infoMessageBg, $lightness: -50%) !default;\n$infoMessageTextColor:scale-color($infoMessageBg, $lightness: -75%) !default;\n$infoMessageIconColor:scale-color($infoMessageBg, $lightness: -75%) !default;\n$successMessageBg:#C8E6C9 !default;\n$successMessageBorder:solid scale-color($successMessageBg, $lightness: -50%) !default;\n$successMessageTextColor:scale-color($successMessageBg, $lightness: -75%) !default;\n$successMessageIconColor:scale-color($successMessageBg, $lightness: -75%) !default;\n$warningMessageBg:#FFECB3 !default;\n$warningMessageBorder:solid scale-color($warningMessageBg, $lightness: -50%) !default;\n$warningMessageTextColor:scale-color($warningMessageBg, $lightness: -75%) !default;\n$warningMessageIconColor:scale-color($warningMessageBg, $lightness: -75%) !default;\n$errorMessageBg:#FFCDD2 !default;\n$errorMessageBorder:solid scale-color($errorMessageBg, $lightness: -50%) !default;\n$errorMessageTextColor:scale-color($errorMessageBg, $lightness: -75%) !default;\n$errorMessageIconColor:scale-color($errorMessageBg, $lightness: -75%) !default;\n\n//overlays\n$overlayContentBorder:0 none !default;\n$overlayContentBg:$panelContentBg !default;\n$overlayContainerShadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0,0,0,.12) !default;\n\n//dialog\n$dialogHeaderBg:$shade000 !default;\n$dialogHeaderBorder:0 none !default;\n$dialogHeaderTextColor:$shade700 !default;\n$dialogHeaderFontWeight:600 !default;\n$dialogHeaderFontSize:1.25rem !default;\n$dialogHeaderPadding:1.5rem !default;\n$dialogContentPadding:0 1.5rem 2rem 1.5rem !default;\n$dialogFooterBorder:0 none !default;\n$dialogFooterPadding:0 1.5rem 1.5rem 1.5rem !default;\n\n//confirmpopup\n$confirmPopupContentPadding:$panelContentPadding;\n$confirmPopupFooterPadding:0 1rem 1rem 1rem;\n\n\n//tooltip\n$tooltipBg:$shade700 !default;\n$tooltipTextColor:$shade000 !default;\n$tooltipPadding:$inputPadding !default;\n\n//steps\n$stepsItemBg:$shade000 !default;\n$stepsItemBorder:1px solid $shade200 !default;\n$stepsItemTextColor:$shade600 !default;\n$stepsItemNumberWidth:2rem !default;\n$stepsItemNumberHeight:2rem !default;\n$stepsItemNumberFontSize:1.143rem !default;\n$stepsItemNumberColor:$shade700 !default;\n$stepsItemNumberBorderRadius:50% !default;\n$stepsItemActiveFontWeight:600 !default;\n\n//progressbar\n$progressBarHeight:1rem !default;\n$progressBarBorder:0 none !default;\n$progressBarBg:$shade300 !default;\n$progressBarValueBg:$primaryColor !default;\n\n//menu (e.g. menu, menubar, tieredmenu)\n$menuWidth:12.5rem !default;\n$menuBg:$shade000 !default;\n$menuBorder:1px solid $shade300 !default;\n$menuTextColor:$shade700 !default;\n$menuitemPadding:.75rem 1rem !default;\n$menuitemBorderRadius:0 !default;\n$menuitemTextColor:$shade700 !default;\n$menuitemIconColor:$shade600 !default;\n$menuitemTextHoverColor:$shade700 !default;\n$menuitemIconHoverColor:$shade600 !default;\n$menuitemHoverBg:$shade200 !default;\n$menuitemTextActiveColor:$shade700 !default;\n$menuitemIconActiveColor:$shade600 !default;\n$menuitemActiveBg:$shade200 !default;\n$menuitemSubmenuIconFontSize:.875rem !default;\n$submenuHeaderMargin:0 !default;\n$submenuHeaderPadding:.75rem 1rem !default;\n$submenuHeaderBg:$shade000 !default;\n$submenuHeaderTextColor:$shade700 !default;\n$submenuHeaderBorderRadius:0 !default;\n$submenuHeaderFontWeight:600 !default;\n$overlayMenuBg:$menuBg !default;\n$overlayMenuBorder:0 none !default;\n$overlayMenuShadow:0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12) !default;\n$verticalMenuPadding:.25rem 0 !default;\n$verticalMenuitemMargin:0;\n$menuSeparatorMargin:.25rem 0 !default;\n\n$breadcrumbPadding:1rem !default;\n$breadcrumbBg:$menuBg !default;\n$breadcrumbBorder:$menuBorder !default;\n$breadcrumbItemTextColor:$menuitemTextColor !default;\n$breadcrumbItemIconColor:$menuitemIconColor !default;\n$breadcrumbLastItemTextColor:$menuitemTextColor !default;\n$breadcrumbLastItemIconColor:$menuitemIconColor !default;\n$breadcrumbSeparatorColor:$menuitemTextColor !default;\n\n$horizontalMenuPadding:.5rem !default;\n$horizontalMenuBg:$shade100 !default;\n$horizontalMenuBorder:$menuBorder !default;\n$horizontalMenuTextColor:$menuTextColor !default;\n$horizontalMenuRootMenuitemPadding:$menuitemPadding !default;\n$horizontalMenuRootMenuitemBorderRadius:$borderRadius !default;\n$horizontalMenuRootMenuitemTextColor:$menuitemTextColor !default;\n$horizontalMenuRootMenuitemIconColor:$menuitemIconColor !default;\n$horizontalMenuRootMenuitemTextHoverColor:$menuitemTextHoverColor !default;\n$horizontalMenuRootMenuitemIconHoverColor:$menuitemIconHoverColor !default;\n$horizontalMenuRootMenuitemHoverBg:$menuitemHoverBg !default;\n$horizontalMenuRootMenuitemTextActiveColor:$menuitemTextActiveColor !default;\n$horizontalMenuRootMenuitemIconActiveColor:$menuitemIconActiveColor !default;\n$horizontalMenuRootMenuitemActiveBg:$menuitemActiveBg !default;\n\n//badge and tag\n$badgeBg:$primaryColor !default;\n$badgeTextColor:$primaryTextColor !default;\n$badgeMinWidth:1.5rem !default;\n$badgeHeight:1.5rem !default;\n$badgeFontWeight:700 !default;\n$badgeFontSize:.75rem !default;\n\n$tagPadding:.25rem .4rem !default;\n\n//carousel\n$carouselIndicatorsPadding:1rem !default;\n$carouselIndicatorBg:$shade200 !default;\n$carouselIndicatorHoverBg:$shade300 !default;\n$carouselIndicatorBorderRadius:0 !default;\n$carouselIndicatorWidth:2rem !default;\n$carouselIndicatorHeight:.5rem !default;\n\n//galleria\n$galleriaMaskBg:rgba(0,0,0,0.9) !default;\n$galleriaCloseIconMargin:.5rem !default;\n$galleriaCloseIconFontSize:2rem !default;\n$galleriaCloseIconBg:transparent !default;\n$galleriaCloseIconColor:$shade100 !default;\n$galleriaCloseIconHoverBg:rgba(255,255,255,0.1) !default;\n$galleriaCloseIconHoverColor:$shade100 !default;\n$galleriaCloseIconWidth:4rem !default;\n$galleriaCloseIconHeight:4rem !default;\n$galleriaCloseIconBorderRadius:50% !default;\n\n$galleriaItemNavigatorBg:transparent !default;\n$galleriaItemNavigatorColor:$shade100 !default;\n$galleriaItemNavigatorMargin:0 .5rem !default;\n$galleriaItemNavigatorFontSize:2rem !default;\n$galleriaItemNavigatorHoverBg:rgba(255,255,255,0.1) !default;\n$galleriaItemNavigatorHoverColor:$shade100 !default;\n$galleriaItemNavigatorWidth:4rem !default;\n$galleriaItemNavigatorHeight:4rem !default;\n$galleriaItemNavigatorBorderRadius:$borderRadius !default;\n\n$galleriaCaptionBg:rgba(0,0,0,.5) !default;\n$galleriaCaptionTextColor:$shade100 !default;\n$galleriaCaptionPadding:1rem !default;\n\n$galleriaIndicatorsPadding:1rem !default;\n$galleriaIndicatorBg:$shade200 !default;\n$galleriaIndicatorHoverBg:$shade300 !default;\n$galleriaIndicatorBorderRadius:50% !default;\n$galleriaIndicatorWidth:1rem !default;\n$galleriaIndicatorHeight:1rem !default;\n$galleriaIndicatorsBgOnItem:rgba(0,0,0,.5) !default;\n$galleriaIndicatorBgOnItem:rgba(255,255,255,.4) !default;\n$galleriaIndicatorHoverBgOnItem:rgba(255,255,255,.6) !default;\n\n$galleriaThumbnailContainerBg:rgba(0,0,0,.9) !default;\n$galleriaThumbnailContainerPadding:1rem .25rem !default;\n$galleriaThumbnailNavigatorBg:transparent !default;\n$galleriaThumbnailNavigatorColor:$shade100 !default;\n$galleriaThumbnailNavigatorHoverBg:rgba(255,255,255,0.1) !default;\n$galleriaThumbnailNavigatorHoverColor:$shade100 !default;\n$galleriaThumbnailNavigatorBorderRadius:50% !default;\n$galleriaThumbnailNavigatorWidth:2rem !default;\n$galleriaThumbnailNavigatorHeight:2rem !default;\n\n//divider\n$dividerHorizontalMargin:1rem 0;\n$dividerHorizontalPadding:0 1rem;\n$dividerVerticalMargin:0 1rem;\n$dividerVerticalPadding:1rem 0;\n$dividerSize:1px;\n$dividerColor:$shade300;\n\n//avatar\n$avatarBg:$shade300;\n$avatarTextColor:$textColor;\n\n//chip\n$chipBg:$shade300;\n$chipTextColor:$textColor;\n$chipBorderRadius: 16px;\n\n//scrollTop\n$scrollTopBg:rgba(0,0,0,0.7);\n$scrollTopHoverBg:rgba(0,0,0,0.8);\n$scrollTopWidth:3rem;\n$scrollTopHeight:3rem;\n$scrollTopBorderRadius:50%;\n$scrollTopFontSize:1.5rem;\n$scrollTopTextColor:$shade100;\n\n//skeleton\n$skeletonBg:$shade200;\n$skeletonAnimationBg:rgba(255,255,255,0.4);\n\n//splitter\n$splitterGutterBg:$shade100;\n$splitterGutterHandleBg:$shade300;\n\n//speeddial\n$speedDialButtonWidth: 4rem;\n$speedDialButtonHeight: 4rem;\n$speedDialButtonIconFontSize: 1.3rem;\n$speedDialActionWidth: 3rem;\n$speedDialActionHeight: 3rem;\n$speedDialActionBg: $shade700;\n$speedDialActionHoverBg: $shade800;\n$speedDialActionTextColor: #fff;\n$speedDialActionTextHoverColor: #fff;\n\n//dock\n$dockActionWidth: 4rem;\n$dockActionHeight: 4rem;\n$dockItemPadding: .5rem;\n$dockCurrentItemMargin: 1.5rem;\n$dockFirstItemsMargin: 1.3rem;\n$dockSecondItemsMargin: 0.9rem;\n$dockBg: rgba(255,255,255,.1);\n$dockBorder: 1px solid rgba(255,255,255,0.2);\n$dockPadding: .5rem .5rem;\n$dockBorderRadius: .5rem;\n\n//image\n$imageMaskBg:rgba(0,0,0,0.9) !default;\n$imagePreviewToolbarPadding:1rem !default;\n$imagePreviewIndicatorColor:#f8f9fa !default;\n$imagePreviewIndicatorBg:rgba(0,0,0,0.5) !default;\n$imagePreviewActionIconBg:transparent !default;\n$imagePreviewActionIconColor:#f8f9fa !default;\n$imagePreviewActionIconHoverBg:rgba(255,255,255,0.1) !default;\n$imagePreviewActionIconHoverColor:#f8f9fa !default;\n$imagePreviewActionIconWidth:3rem !default;\n$imagePreviewActionIconHeight:3rem !default;\n$imagePreviewActionIconFontSize:1.5rem !default;\n$imagePreviewActionIconBorderRadius:50% !default;\n\n:root {\n    --surface-a:#{$shade000};\n    --surface-b:#{$shade100};\n    --surface-c:#{$shade200};\n    --surface-d:#{$shade300};\n    --surface-e:#{$shade000};\n    --surface-f:#{$shade000};\n    --text-color:#{$shade700};\n    --text-color-secondary:#{$shade600};\n    --primary-color:#{$primaryColor};\n    --primary-dark-color:#{$primaryDarkColor};\n    --primary-light-color:#{$primaryLightColor};\n    --primary-lighter-color:#{$primaryLighterColor};\n    --primary-color-text:#{$primaryTextColor};\n    --font-family:#{$fontFamily};\n    --surface-0: #ffffff;\n    --surface-50: #f2f4f6;\n    --surface-100: #d9dbdd;\n    --surface-200: #c1c3c4;\n    --surface-300: #a9aaac;\n    --surface-400: #919293;\n    --surface-500: #797a7b;\n    --surface-600: #606162;\n    --surface-700: #484949;\n    --surface-800: #303031;\n    --surface-900: #181818;\n    --gray-50: #f2f4f6;\n    --gray-100: #d9dbdd;\n    --gray-200: #c1c3c4;\n    --gray-300: #a9aaac;\n    --gray-400: #919293;\n    --gray-500: #797a7b;\n    --gray-600: #606162;\n    --gray-700: #484949;\n    --gray-800: #303031;\n    --gray-900: #181818;\n    --content-padding:#{$panelContentPadding};\n    --inline-spacing:#{$inlineSpacing};\n    --border-radius:#{$borderRadius};\n    --surface-ground:#F2F4F6;\n    --surface-section:#ffffff;\n    --surface-card:#ffffff;\n    --surface-overlay:#ffffff;\n    --surface-border:#D4D6D9;\n    --surface-hover: #{$shade200};\n    --focus-ring: #{$focusShadow};\n    --maskbg: #{$maskBg};\n}\n`}\n</AppCodeHighlight>\n</div>\n<h4>Menu Modes</h4>\n\t\t\t\t<p>Menu has 3 modes, sidebar, horizontal and slim. Layout container element in App.js is used to define which mode to use by adding specific classes. List below indicates the style classes for each mode.</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Sidebar: \"layout-wrapper layout-sidebar\"</li>\n\t\t\t\t\t<li>Horizontal: \"layout-wrapper layout-horizontal\"</li>\n\t\t\t\t\t<li>Slim: \"layout-wrapper layout-slim\"</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<p>For example to create a horizontal menu, the div element should be in following form;</p>\n<AppCodeHighlight lang=\"scss\">\n{`\n<div class=\"layout-wrapper layout-sidebar\">\n`}\n</AppCodeHighlight>\n                <h4>Grid CSS</h4>\n\t\t\t\t<p>Freya uses PrimeReact Flex Grid CSS throughout the demos such as Dashboard, however any Grid library can be used with it since Freya Layout itself does not depend on PrimeFlex CSS.</p>\n\n\t\t\t\t<h4>Customizing Styles</h4>\n\t\t\t\t<p>It is suggested to add your customizations in the following sass files under the \"sass/overrides\" folder instead of adding them to the scss files under sass folder to avoid maintenance issues after an update.</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li><b>_layout_variables</b>: Variables of the layout.</li>\n\t\t\t\t\t<li><b>_layout_styles</b>: Styles for the layout.</li>\n\t\t\t\t\t<li><b>_theme_variables</b>: Variables of the theme.</li>\n\t\t\t\t\t<li><b>_theme_styles</b>: Styles for the theme.</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<h4>Migration Guide</h4>\n\t\t\t\t<p>Every change is included in <b>CHANGELOG.md</b> file at the root folder of the distribution along with the instructions to update.</p>\n\n            </div>\n            </div>\n    </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(Documentation, comparisonFn);\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { InputText } from 'primereact/inputtext';\nimport AppCodeHiglight  from '../AppCodeHighlight';\n\nconst IconsDemo = () => {\n\n    const [icons, setIcons] = useState([]);\n    const [filteredIcons, setFilteredIcons] = useState([]);\n\n    useEffect(() => {\n        axios.get('assets/demo/data/icons.json').then(res => {\n            let icons = res.data.icons;\n            icons.sort((icon1, icon2) => {\n                if (icon1.properties.name < icon2.properties.name)\n                    return -1;\n                else if (icon1.properties.name < icon2.properties.name)\n                    return 1;\n                else\n                    return 0;\n            });\n\n            setIcons(icons);\n            setFilteredIcons(icons);\n        });\n    }, []);\n\n    const onFilter = (event) => {\n        if (!event.target.value) {\n            setFilteredIcons(icons);\n        }\n        else {\n            setFilteredIcons(icons.filter( it => {\n                return it.icon.tags[0].includes(event.target.value);\n            }));\n        }\n    }\n\n    return (\n        <div className=\"card docs\">\n            <h4>Icons</h4>\n            <p>PrimeReact components internally use <a href=\"https://github.com/primefaces/primeicons\" className=\"font-medium\">PrimeIcons</a> library, the official icons suite from <a href=\"https://www.primetek.com.tr\" className=\"font-medium\">PrimeTek</a>.</p>\n\n            <h5>Download</h5>\n            <p>PrimeIcons is available at npm, run the following command to download it to your project.</p>\n<AppCodeHiglight>\n{`\nnpm install primeicons --save\n`}\n</AppCodeHiglight>\n\n            <h5>Getting Started</h5>\n            <p>PrimeIcons use the <strong>pi pi-&#123;icon&#125;</strong> syntax such as <strong>pi pi-check</strong>.\n            A standalone icon can be displayed using an element like <i>i</i> or <i>span</i></p>\n\n<AppCodeHiglight>\n{`\n<i className=\"pi pi-check\" style={{ marginRight: '.5rem' }}></i>\n<i className=\"pi pi-times\"></i>\n`}\n</AppCodeHiglight>\n\n            <h5>Size</h5>\n            <p>Size of the icons can easily be changed using font-size property.</p>\n\n<AppCodeHiglight>\n{`\n<i className=\"pi pi-check\"></i>\n`}\n</AppCodeHiglight>\n\n            <i className=\"pi pi-check\"></i>\n\n<AppCodeHiglight>\n{`\n<i className=\"pi pi-check\" style={{ fontSize: '2rem' }}></i>\n`}\n</AppCodeHiglight>\n\n            <i className=\"pi pi-check\" style={{ fontSize: '2rem' }}></i>\n\n            <h5>Spinning Animation</h5>\n            <p>Special pi-spin class applies continuous rotation to an icon.</p>\n<AppCodeHiglight>\n{`\n<i className=\"pi pi-spin pi-spinner\" style={{ fontSize: '2rem' }}></i>\n`}\n</AppCodeHiglight>\n\n            <i className=\"pi pi-spin pi-spinner\" style={{ fontSize: '2rem' }}></i>\n\n            <h5>Constants</h5>\n            <p>PrimeIcons constants API is provided to easily choose an icon with typescript e.g. when defining a menu model.</p>\n<AppCodeHiglight>\n{`\n<Menu model={items} />\n`}\n</AppCodeHiglight>\n<AppCodeHiglight lang=\"js\">\n{`\nimport {PrimeIcons} from 'primereact/api';\n\nconst items = [\n    {\n        label: 'Update',\n        icon: PrimeIcons.REFRESH,\n        to: '/update'\n    },\n    {\n        label: 'Delete',\n        icon: PrimeIcons.TIMES,\n        to: '/delete'\n    }\n]\n`}\n</AppCodeHiglight>\n            <h5>List of Icons</h5>\n            <p>Here is the current list of PrimeIcons, more icons are added periodically. You may also <a href=\"https://github.com/primefaces/primeicons/issues\" className=\"font-medium\">request new icons</a> at the issue tracker.</p>\n\n            <div>\n                <InputText type=\"text\" className=\"w-full p-3 mt-3 mb-5\" onInput={onFilter} placeholder=\"Search an icon\" />\n            </div>\n            <div className=\"grid icons-list text-center\">\n                {\n                    filteredIcons && filteredIcons.map(iconMeta => {\n                        const { icon, properties } = iconMeta;\n\n                        return icon.tags.indexOf('deprecate') === -1 && (\n                            <div className=\"col-6 sm:col-4 lg:col-3 xl:col-2 pb-5\" key={properties.name}>\n                                <i className={\"text-2xl mb-2 pi pi-\" + properties.name}></i>\n                                <div>pi-{properties.name}</div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(IconsDemo, comparisonFn);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { classNames } from 'primereact/utils';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Rating } from 'primereact/rating';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport ProductService from '../service/ProductService';\n\nconst CrudDemo = () => {\n\n    let emptyProduct = {\n        id: null,\n        name: '',\n        image: null,\n        description: '',\n        category: null,\n        price: 0,\n        quantity: 0,\n        rating: 0,\n        inventoryStatus: 'INSTOCK'\n    };\n\n    const [products, setProducts] = useState(null);\n    const [productDialog, setProductDialog] = useState(false);\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\n    const [deleteProductsDialog, setDeleteProductsDialog] = useState(false);\n    const [product, setProduct] = useState(emptyProduct);\n    const [selectedProducts, setSelectedProducts] = useState(null);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    useEffect(() => {\n        const productService = new ProductService();\n        productService.getProducts().then(data => setProducts(data));\n    }, []);\n\n    const formatCurrency = (value) => {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n\n    const openNew = () => {\n        setProduct(emptyProduct);\n        setSubmitted(false);\n        setProductDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setProductDialog(false);\n    }\n\n    const hideDeleteProductDialog = () => {\n        setDeleteProductDialog(false);\n    }\n\n    const hideDeleteProductsDialog = () => {\n        setDeleteProductsDialog(false);\n    }\n\n    const saveProduct = () => {\n        setSubmitted(true);\n\n        if (product.name.trim()) {\n            let _products = [...products];\n            let _product = { ...product };\n            if (product.id) {\n                const index = findIndexById(product.id);\n\n                _products[index] = _product;\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\n            }\n            else {\n                _product.id = createId();\n                _product.image = 'product-placeholder.svg';\n                _products.push(_product);\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\n            }\n\n            setProducts(_products);\n            setProductDialog(false);\n            setProduct(emptyProduct);\n        }\n    }\n\n    const editProduct = (product) => {\n        setProduct({ ...product });\n        setProductDialog(true);\n    }\n\n    const confirmDeleteProduct = (product) => {\n        setProduct(product);\n        setDeleteProductDialog(true);\n    }\n\n    const deleteProduct = () => {\n        let _products = products.filter(val => val.id !== product.id);\n        setProducts(_products);\n        setDeleteProductDialog(false);\n        setProduct(emptyProduct);\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\n    }\n\n    const findIndexById = (id) => {\n        let index = -1;\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].id === id) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n\n    const createId = () => {\n        let id = '';\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < 5; i++) {\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return id;\n    }\n\n    const exportCSV = () => {\n        dt.current.exportCSV();\n    }\n\n    const confirmDeleteSelected = () => {\n        setDeleteProductsDialog(true);\n    }\n\n    const deleteSelectedProducts = () => {\n        let _products = products.filter(val => !selectedProducts.includes(val));\n        setProducts(_products);\n        setDeleteProductsDialog(false);\n        setSelectedProducts(null);\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\n    }\n\n    const onCategoryChange = (e) => {\n        let _product = { ...product };\n        _product['category'] = e.value;\n        setProduct(_product);\n    }\n\n    const onInputChange = (e, name) => {\n        const val = (e.target && e.target.value) || '';\n        let _product = { ...product };\n        _product[`${name}`] = val;\n\n        setProduct(_product);\n    }\n\n    const onInputNumberChange = (e, name) => {\n        const val = e.value || 0;\n        let _product = { ...product };\n        _product[`${name}`] = val;\n\n        setProduct(_product);\n    }\n\n    const leftToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                    <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !selectedProducts.length} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"mr-2 inline-block\" />\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={exportCSV} />\n            </React.Fragment>\n        )\n    }\n\n    const codeBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Code</span>\n                {rowData.code}\n            </>\n        );\n    }\n\n    const nameBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Name</span>\n                {rowData.name}\n            </>\n        );\n    }\n\n    const imageBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Image</span>\n                <img src={`assets/demo/images/product/${rowData.image}`} alt={rowData.image} className=\"shadow-2\" width=\"100\" />\n            </>\n        )\n    }\n\n    const priceBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Price</span>\n                {formatCurrency(rowData.price)}\n            </>\n        );\n    }\n\n    const categoryBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Category</span>\n                {rowData.category}\n            </>\n        );\n    }\n\n    const ratingBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Reviews</span>\n                <Rating value={rowData.rating} readonly cancel={false} />\n            </>\n        );\n    }\n\n    const statusBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Status</span>\n                <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>\n            </>\n        )\n    }\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => editProduct(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning mt-2\" onClick={() => confirmDeleteProduct(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Manage Products</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const productDialogFooter = (\n        <>\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveProduct} />\n        </>\n    );\n    const deleteProductDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductDialog} />\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteProduct} />\n        </>\n    );\n    const deleteProductsDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductsDialog} />\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteSelectedProducts} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={products} selection={selectedProducts} onSelectionChange={(e) => setSelectedProducts(e.value)}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\n                        globalFilter={globalFilter} emptyMessage=\"No products found.\" header={header} responsiveLayout=\"scroll\">\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\n                        <Column field=\"code\" header=\"Code\" sortable body={codeBodyTemplate} headerStyle={{ width: '14%', minWidth: '10rem' }}></Column>\n                        <Column field=\"name\" header=\"Name\" sortable body={nameBodyTemplate} headerStyle={{ width: '14%', minWidth: '10rem' }}></Column>\n                        <Column header=\"Image\" body={imageBodyTemplate} headerStyle={{ width: '14%', minWidth: '10rem' }}></Column>\n                        <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable headerStyle={{ width: '14%', minWidth: '8rem' }}></Column>\n                        <Column field=\"category\" header=\"Category\" sortable body={categoryBodyTemplate} headerStyle={{ width: '14%', minWidth: '10rem' }}></Column>\n                        <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable headerStyle={{ width: '14%', minWidth: '10rem' }}></Column>\n                        <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable headerStyle={{ width: '14%', minWidth: '10rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\n                        {product.image && <img src={`assets/demo/images/product/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n                        <div className=\"field\">\n                            <label htmlFor=\"name\">Name</label>\n                            <InputText id=\"name\" value={product.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !product.name })} />\n                            {submitted && !product.name && <small className=\"p-invalid\">Name is required.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"description\">Description</label>\n                            <InputTextarea id=\"description\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\n                        </div>\n\n                        <div className=\"field\">\n                            <label className=\"mb-3\">Category</label>\n                            <div className=\"formgrid grid\">\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\n                                    <label htmlFor=\"category1\">Accessories</label>\n                                </div>\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\n                                    <label htmlFor=\"category2\">Clothing</label>\n                                </div>\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\n                                    <label htmlFor=\"category3\">Electronics</label>\n                                </div>\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\n                                    <label htmlFor=\"category4\">Fitness</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">Price</label>\n                                <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Quantity</label>\n                                <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} integeronly />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={hideDeleteProductDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {product && <span>Are you sure you want to delete <b>{product.name}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {product && <span>Are you sure you want to delete the selected products?</span>}\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(CrudDemo, comparisonFn);","import axios from 'axios'\n\nexport default class EventService {\n\n    getEvents() {\n        return axios.get('assets/demo/data/events.json').then(res => res.data.data);\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Calendar as PRCalendar } from 'primereact/calendar';\nimport EventService from '../service/EventService';\n\nconst CalendarDemo = () => {\n\n    const [eventDialog, setEventDialog] = useState(false);\n    const [clickedEvent, setClickedEvent] = useState(null);\n    const [changedEvent, setChangedEvent] = useState({ title: '', start: null, end: null, allDay: null });\n    const [events, setEvents] = useState(null);\n\n    const eventClick = (e) => {\n        const { title, start, end } = e.event;\n        setEventDialog(true);\n        setClickedEvent(e.event);\n        setChangedEvent({ title, start, end, allDay: null });\n    }\n\n    useEffect(() => {\n        const eventService = new EventService();\n        eventService.getEvents().then(data => setEvents(data));\n    }, [])\n\n    const save = () => {\n        setEventDialog(false);\n\n        clickedEvent.setProp('title', changedEvent.title)\n        clickedEvent.setStart(changedEvent.start)\n        clickedEvent.setEnd(changedEvent.end)\n        clickedEvent.setAllDay(changedEvent.allDay)\n\n        setChangedEvent({ title: '', start: null, end: '', allDay: null });\n    };\n\n    const reset = () => {\n        const { title, start, end } = clickedEvent;\n        setChangedEvent({ title, start, end, allDay: null });\n    };\n\n    const footer = (\n        <>\n            <Button type=\"button\" label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={save} />\n            <Button type=\"button\" label=\"Reset\" icon=\"pi pi-refresh\" className=\"p-button-text\" onClick={reset} />\n        </>\n    );\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card calendar-demo\">\n\n                    <FullCalendar events={events} eventClick={eventClick} initialDate=\"2023-01-01\" initialView='dayGridMonth' plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{ left: 'prev,next today', center: 'title', right: 'dayGridMonth,timeGridWeek,timeGridDay' }} editable selectable selectMirror dayMaxEvents />\n\n                    <Dialog visible={eventDialog && !!clickedEvent} style={{ width: '450px' }} header=\"Event Details\" footer={footer} modal closable onHide={() => setEventDialog(false)}>\n                        <div className=\"p-fluid\">\n                            <div className=\"field\">\n                                <label htmlFor=\"title\">Title</label>\n                                <InputText id=\"title\" value={changedEvent.title} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ title: e.target.value } })} required autoFocus />\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"start\">From</label>\n                                <PRCalendar id=\"start\" value={changedEvent.start} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ start: e.value } })} showTime appendTo={document.body} />\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"end\">To</label>\n                                <PRCalendar id=\"end\" value={changedEvent.end} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ end: e.value } })} showTime appendTo={document.body} />\n                            </div>\n                            <div className=\"field-checkbox\">\n                                <Checkbox inputId=\"allday\" name=\"allday\" value=\"All Day\" checked={!!changedEvent.allDay} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ allDay: e.value } })} />\n                                <label htmlFor=\"allday\">All Day</label>\n                            </div>\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(CalendarDemo, comparisonFn);\n","import React from 'react';\nimport { Button } from 'primereact/button';\nimport { Card } from 'primereact/card';\nimport { Timeline } from 'primereact/timeline';\nimport { classNames } from 'primereact/utils';\n\nconst TimelineDemo = () => {\n\n    const customEvents = [\n        {\n            status: 'Ordered',\n            date: '15/10/2020 10:30',\n            icon: 'pi pi-shopping-cart',\n            color: '#9C27B0',\n            image: 'game-controller.jpg'\n        },\n        { status: 'Processing', date: '15/10/2020 14:00', icon: 'pi pi-cog', color: '#673AB7' },\n        { status: 'Shipped', date: '15/10/2020 16:15', icon: 'pi pi-envelope', color: '#FF9800' },\n        { status: 'Delivered', date: '16/10/2020 10:00', icon: 'pi pi-check', color: '#607D8B' }\n    ];\n\n    const horizontalEvents = [\n        '2020', '2021', '2022', '2023'\n    ];\n\n\n    const customizedContent = (item) => {\n        return (\n            <Card title={item.status} subTitle={item.date}>\n                { item.image && <img src={`assets/demo/images/product/${item.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={item.name} width={200} className=\"shadow-2 mb-3\" />}\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Inventore sed consequuntur error repudiandae numquam deserunt\n                quisquam repellat libero asperiores earum nam nobis, culpa ratione quam perferendis esse, cupiditate neque quas!</p>\n                <Button label=\"Read more\" className=\"p-button-text\"></Button>\n            </Card>\n        );\n    };\n\n    const customizedMarker = (item) => {\n        return (\n            <span className=\"flex w-2rem h-2rem align-items-center justify-content-center text-white border-circle z-1 shadow-2\" style={{ backgroundColor: item.color }}>\n                <i className={classNames('marker-icon', item.icon)}></i>\n            </span>\n        );\n    };\n\n    return <div className=\"grid timeline-demo\">\n        <div className=\"col-12\">\n            <div className=\"card\">\n                <h4>Timeline</h4>\n\n                <h5>Custom Timeline</h5>\n                <Timeline value={customEvents} align=\"alternate\" className=\"customized-timeline\" marker={customizedMarker} content={customizedContent} />\n\n                <h5 style={{ marginTop: '5em' }}>Horizontal - Alternate Align</h5>\n                <Timeline value={horizontalEvents} layout=\"horizontal\" align=\"alternate\" content={(item) => item} opposite={<span>&nbsp;</span>} />\n            </div>\n        </div>\n    </div>\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(TimelineDemo, comparisonFn);\n","import React from 'react';\nimport { Button } from 'primereact/button';\n\nconst Invoice = () => {\n\n    const print = () => {\n        window.print();\n    }\n\n    return (\n        <div>\n        <Button label=\"Print\" icon=\"pi pi-print\" onClick={print} style={{display: 'block', marginBottom: '20px', marginLeft: '6px'}}></Button>\n\n        <div className=\"grid\">\n            <div className=\"col\">\n                <div className=\"card\">\n                    <div id=\"invoice-content\">\n                        <div className=\"invoice\">\n                            <div className=\"invoice-header\">\n                                <div className=\"invoice-company\">\n                                    <img id=\"invoice-logo\" className=\"logo-image\" src=\"assets/layout/images/logo-freya-single.svg\" alt=\"freya-layout\" />\n                                    <div className=\"company-name\">YOUR COMPANY</div>\n                                    <div>9137 3rd Lane California City</div>\n                                    <div>CA 93504, U.S.A.</div>\n                                </div>\n                                <div>\n                                    <div className=\"invoice-title\">INVOICE</div>\n                                    <div className=\"invoice-details\">\n                                        <div className=\"invoice-label\">DATE</div>\n                                        <div className=\"invoice-value\">30/08/2019</div>\n\n                                        <div className=\"invoice-label\">INVOICE #</div>\n                                        <div className=\"invoice-value\">8523</div>\n\n                                        <div className=\"invoice-label\">CUSTOMER ID</div>\n                                        <div className=\"invoice-value\">C1613</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"invoice-to\">\n                                <div className=\"bill-to\">BILL TO</div>\n                                <div className=\"invoice-to-info\">\n                                    <div>Claire Williams, 148 Hope Lane</div>\n                                    <div>Palo Alto, CA 94304.</div>\n                                </div>\n                            </div>\n                            <div className=\"invoice-items\">\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th>Description</th>\n                                            <th>Quantity</th>\n                                            <th>Unit Price</th>\n                                            <th>Line Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>Green T-Shirt</td>\n                                            <td>1</td>\n                                            <td>$49.00</td>\n                                            <td>$49.00</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Game Controller</td>\n                                            <td>2</td>\n                                            <td>$99.00</td>\n                                            <td>$198.00</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Mini Speakers</td>\n                                            <td>1</td>\n                                            <td>$85.00</td>\n                                            <td>$85.00</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"invoice-summary\">\n                                <div className=\"invoice-notes\">\n                                    <b>NOTES</b>\n                                    <div></div>\n                                </div>\n                                <div>\n                                    <div className=\"invoice-details\">\n                                        <div className=\"invoice-label\">SUBTOTAL</div>\n                                        <div className=\"invoice-value\">$332.00</div>\n\n                                        <div className=\"invoice-label\">VAT</div>\n                                        <div className=\"invoice-value\">0</div>\n\n                                        <div className=\"invoice-label\">TOTAL</div>\n                                        <div className=\"invoice-value\">$332.00</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div >\n    );\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(Invoice, comparisonFn);","import React from 'react';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\n\nconst Help = (props) => {\n\n    return (\n        <div className=\"grid help-page\">\n            <div className=\"col-12\">\n                <div className=\"card help-search grid\">\n                    <div className=\"help-search-content col-12 md:col-6\">\n                        <h4>We are here to help</h4>\n                        <div className=\"search-container\">\n                            <i className=\"pi pi-search\"></i>\n                            <input type=\"text\" className=\"p-inputtext\" placeholder=\"Search\" />\n                        </div>\n                    </div>\n                    <div className=\"help-search-effect col-12 md:col-6\"></div>\n                </div>\n            </div>\n\n            <div className=\"col-12 lg:col-6\">\n                    <h6>General</h6>\n                    <Accordion activeIndex={0}>\n                        <AccordionTab header=\"Header I\">\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                                ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                        </AccordionTab>\n                        <AccordionTab header=\"Header II\">\n                            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n                                architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                                voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius modi.</p>\n                        </AccordionTab>\n                        <AccordionTab header=\"Header III\">\n                            <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati\n                                cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.\n                                Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus.</p>\n                        </AccordionTab>\n                    </Accordion>\n\n                    <h6>FAQ</h6>\n                    <Accordion activeIndex={0}>\n                        <AccordionTab header=\"FAQ I\">\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                                ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                        </AccordionTab>\n                        <AccordionTab header=\"FAQ II\">\n                            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n                                architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                                voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius modi.</p>\n                        </AccordionTab>\n                        <AccordionTab header=\"FAQ III\">\n                            <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati\n                                cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.\n                                Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus.</p>\n                        </AccordionTab>\n                    </Accordion>\n            </div>\n\n\n            <div className=\"col-12 lg:col-6\">\n                <div className=\"card status-card\">\n                    <h6>System Status</h6>\n                    <p>All services are operational.</p>\n                    <div className=\"status-bars\">\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar status-bar-failure\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                        <div className=\"status-bar\"></div>\n                    </div>\n                    <div className=\"status-bar-footer\">\n                        <span>30 Days Ago</span>\n                        <span>Today</span>\n                    </div>\n                </div>\n\n                <div className=\"card articles-card\">\n                    <h6>Articles</h6>\n                    <p>Recent articles from our team.</p>\n                    <div className=\"blog-posts\">\n                        <div className=\"blog-post\">\n                            <div className=\"blog-text\">\n                                <h6>Building Revenue With Confidence</h6>\n                                <span>And avoiding failures</span>\n                            </div>\n                            <div className=\"blog-profile\">\n                                <img src=\"assets/demo/images/avatar/miracle.png\" alt=\"atlantis-layout\" />\n                            </div>\n                        </div>\n\n                        <div className=\"blog-post\">\n                            <div className=\"blog-text\">\n                                <h6>Latest Marketing Trends</h6>\n                                <span>Don't miss out our tips</span>\n                            </div>\n                            <div className=\"blog-profile\">\n                                <img src=\"assets/demo/images/avatar/kaylynn.png\" alt=\"atlantis-layout\" />\n                            </div>\n                        </div>\n\n                        <div className=\"blog-post\">\n                            <div className=\"blog-text\">\n                                <h6>How To Reach Your Audience</h6>\n                                <span>10 ways to increase your efficiency</span>\n                            </div>\n                            <div className=\"blog-profile\">\n                                <img src=\"assets/demo/images/avatar/angel.png\" alt=\"atlantis-layout\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(Help, comparisonFn);","import React from 'react';\n\nconst EmptyPage = () => {\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Empty Page</h5>\n                    <p>This is your empty page template to start building beautiful applications.</p>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(EmptyPage, comparisonFn);","import React, { useState } from 'react';\nimport { classNames } from 'primereact/utils';\nimport AppCodeHighlight from './AppCodeHighlight';\n\nconst BlockViewer = (props) => {\n\n    const [blockView, setBlockView] = useState('PREVIEW')\n\n    const copyCode = async (event) => {\n        await navigator.clipboard.writeText(props.code);\n        event.preventDefault();\n    }\n\n    return (\n        <div className=\"block-viewer\">\n            <div className=\"block-section\">\n                <div className=\"block-header\">\n                    <span className=\"block-title\">\n                        <span>{props.header}</span>\n                        {props.new && <span className=\"badge-new\">New</span>}\n                    </span>\n                    <div className=\"block-actions\">\n                        <button tabIndex=\"0\" className={classNames('p-link', { 'block-action-active': blockView === 'PREVIEW' })} onClick={() => setBlockView('PREVIEW')}><span>Preview</span></button>\n                        <button className={classNames('p-link', { 'block-action-active': blockView === 'CODE' })} onClick={() => setBlockView('CODE')} >\n                            <span>Code</span>\n                        </button>\n                        <button tabIndex=\"0\" className=\"p-link block-action-copy\" onClick={copyCode}>\n                            <i className=\"pi pi-copy\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"block-content\">\n                    {blockView === 'PREVIEW' &&\n                        <div className={props.containerClassName} style={props.previewStyle}>\n                            {props.children}\n                        </div>}\n\n                    {blockView === 'CODE' &&\n                        <AppCodeHighlight>\n                            {props.code}\n                        </AppCodeHighlight>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BlockViewer;\n","import React, { useState } from 'react';\nimport { Button } from 'primereact/button';\nimport { Chip } from 'primereact/chip';\nimport { InputText } from 'primereact/inputtext';\nimport { Checkbox } from 'primereact/checkbox';\nimport BlockViewer from '../BlockViewer';\n\nconst BlocksDemo = () => {\n\n    const [checked, setChecked] = useState(false);\n\n    const block1 = `\n<div className=\"grid grid-nogutter surface-section text-800\">\n    <div className=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\n        <section>\n            <span className=\"block text-6xl font-bold mb-1\">Create the screens your</span>\n            <div className=\"text-6xl text-primary font-bold mb-3\">your visitors deserve to see</div>\n            <p className=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n            <Button label=\"Learn More\" type=\"button\" className=\"mr-3 p-button-raised\"></Button>\n            <Button label=\"Live Demo\" type=\"button\" className=\"p-button-outlined\"></Button>\n        </section>\n    </div>\n    <div className=\"col-12 md:col-6 overflow-hidden\">\n        <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"hero-1\" className=\"md:ml-auto block md:h-full\" style={{ clipPath: 'polygon(8% 0, 100% 0%, 100% 100%, 0 100%)' }} />\n    </div>\n</div>\n    `;\n\n    const block2 = `\n<div className=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\n    <div className=\"mb-3 font-bold text-2xl\">\n        <span className=\"text-900\">One Product, </span>\n        <span className=\"text-blue-600\">Many Solutions</span>\n    </div>\n    <div className=\"text-700 text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\n    <div className=\"grid\">\n        <div className=\"col-12 md:col-4 mb-4 px-5\">\n            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                <i className=\"pi pi-desktop text-4xl text-blue-500\"></i>\n            </span>\n            <div className=\"text-900 mb-3 font-medium\">Built for Developers</div>\n            <span className=\"text-700 text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\n        </div>\n        <div className=\"col-12 md:col-4 mb-4 px-5\">\n            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                <i className=\"pi pi-lock text-4xl text-blue-500\"></i>\n            </span>\n            <div className=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\n            <span className=\"text-700 text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\n        </div>\n        <div className=\"col-12 md:col-4 mb-4 px-5\">\n            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                <i className=\"pi pi-check-circle text-4xl text-blue-500\"></i>\n            </span>\n            <div className=\"text-900 mb-3 font-medium\">Easy to Use</div>\n            <span className=\"text-700 text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\n        </div>\n        <div className=\"col-12 md:col-4 mb-4 px-5\">\n            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                <i className=\"pi pi-globe text-4xl text-blue-500\"></i>\n            </span>\n            <div className=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\n            <span className=\"text-700 text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\n        </div>\n        <div className=\"col-12 md:col-4 mb-4 px-5\">\n            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                <i className=\"pi pi-github text-4xl text-blue-500\"></i>\n            </span>\n            <div className=\"text-900 mb-3 font-medium\">Open Source</div>\n            <span className=\"text-700 text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\n        </div>\n        <div className=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\n            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                <i className=\"pi pi-shield text-4xl text-blue-500\"></i>\n            </span>\n            <div className=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\n            <span className=\"text-700 text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\n        </div>\n    </div>\n</div>\n    `;\n\n    const block3 = `\n<div className=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\n    <div className=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\n    <div className=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n\n    <div className=\"grid\">\n        <div className=\"col-12 lg:col-4\">\n            <div className=\"p-3 h-full\">\n                <div className=\"shadow-2 p-3 h-full flex flex-column surface-card\" style={{ borderRadius: '6px' }}>\n                    <div className=\"text-900 font-medium text-xl mb-2\">Basic</div>\n                    <div className=\"text-600\">Plan description</div>\n                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div className=\"flex align-items-center\">\n                        <span className=\"font-bold text-2xl text-900\">$9</span>\n                        <span className=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul className=\"list-none p-0 m-0 flex-grow-1\">\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                    </ul>\n                    <hr className=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\n                    <Button label=\"Buy Now\" className=\"p-3 w-full mt-auto\"></Button>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"col-12 lg:col-4\">\n            <div className=\"p-3 h-full\">\n                <div className=\"shadow-2 p-3 h-full flex flex-column surface-card\" style={{ borderRadius: '6px' }}>\n                    <div className=\"text-900 font-medium text-xl mb-2\">Premium</div>\n                    <div className=\"text-600\">Plan description</div>\n                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div className=\"flex align-items-center\">\n                        <span className=\"font-bold text-2xl text-900\">$29</span>\n                        <span className=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul className=\"list-none p-0 m-0 flex-grow-1\">\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Duis ultricies lacus sed</span>\n                        </li>\n                    </ul>\n                    <hr className=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                    <Button label=\"Buy Now\" className=\"p-3 w-full\"></Button>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"col-12 lg:col-4\">\n            <div className=\"p-3 h-full\">\n                <div className=\"shadow-2 p-3 flex flex-column surface-card\" style={{ borderRadius: '6px' }}>\n                    <div className=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\n                    <div className=\"text-600\">Plan description</div>\n                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <div className=\"flex align-items-center\">\n                        <span className=\"font-bold text-2xl text-900\">$49</span>\n                        <span className=\"ml-2 font-medium text-600\">per month</span>\n                    </div>\n                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                    <ul className=\"list-none p-0 m-0 flex-grow-1\">\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Arcu vitae elementum</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Dui faucibus in ornare</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Morbi tincidunt augue</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Duis ultricies lacus sed</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Imperdiet proin</span>\n                        </li>\n                        <li className=\"flex align-items-center mb-3\">\n                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                            <span>Nisi scelerisque</span>\n                        </li>\n                    </ul>\n                    <hr className=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                    <Button label=\"Buy Now\" className=\"p-3 w-full p-button-outlined\"></Button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n    `;\n\n    const block4 = `\n<div className=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\n    <div className=\"text-700 text-center\">\n        <div className=\"text-blue-600 font-bold mb-3\"><i className=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\n        <div className=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\n        <div className=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n        <Button label=\"Join Now\" icon=\"pi pi-discord\" className=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></Button>\n    </div>\n</div>\n    `;\n\n    const block5 = `\n<div className=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\n    <div className=\"font-bold mr-8\"><span role=\"img\" aria-label=\"fire\">🔥</span> Hot Deals!</div>\n    <div className=\"align-items-center hidden lg:flex\">\n        <span className=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\n    </div>\n    <a className=\"flex align-items-center ml-2 mr-8 text-white\">\n        <span className=\"underline font-bold\">Learn More</span>\n    </a>\n    <a className=\"p-ripple flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150 p-ripple\" style={{ width: '2rem', height: '2rem' }}>\n        <i className=\"pi pi-times\"></i>\n    </a>\n</div>\n    `;\n\n    const block6 = `\n<div className=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\n    <ul className=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\n        <li>\n            <a className=\"text-500 no-underline line-height-3 cursor-pointer\">Application</a>\n        </li>\n        <li className=\"px-2\">\n            <i className=\"pi pi-angle-right text-500 line-height-3\"></i>\n        </li>\n        <li>\n            <span className=\"text-900 line-height-3\">Analytics</span>\n        </li>\n    </ul>\n    <div className=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\n        <div>\n            <div className=\"font-medium text-3xl text-900\">Customers</div>\n            <div className=\"flex align-items-center text-700 flex-wrap\">\n                <div className=\"mr-5 flex align-items-center mt-3\">\n                    <i className=\"pi pi-users mr-2\"></i>\n                    <span>332 Active Users</span>\n                </div>\n                <div className=\"mr-5 flex align-items-center mt-3\">\n                    <i className=\"pi pi-globe mr-2\"></i>\n                    <span>9402 Sessions</span>\n                </div>\n                <div className=\"flex align-items-center mt-3\">\n                    <i className=\"pi pi-clock mr-2\"></i>\n                    <span>2.32m Avg. Duration</span>\n                </div>\n            </div>\n        </div>\n        <div className=\"mt-3 lg:mt-0\">\n            <Button label=\"Add\" className=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\" />\n            <Button label=\"Save\" icon=\"pi pi-check\" />\n        </div>\n    </div>\n</div>\n    `;\n\n    const block7 = `\n<div className=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\n    <div className=\"grid\">\n        <div className=\"col-12 md:col-6 lg:col-3\">\n            <div className=\"surface-card shadow-2 p-3 border-round\">\n                <div className=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span className=\"block text-500 font-medium mb-3\">Orders</span>\n                        <div className=\"text-900 font-medium text-xl\">152</div>\n                    </div>\n                    <div className=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                        <i className=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span className=\"text-green-500 font-medium\">24 new </span>\n                <span className=\"text-500\">since last visit</span>\n            </div>\n        </div>\n        <div className=\"col-12 md:col-6 lg:col-3\">\n            <div className=\"surface-card shadow-2 p-3 border-round\">\n                <div className=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span className=\"block text-500 font-medium mb-3\">Revenue</span>\n                        <div className=\"text-900 font-medium text-xl\">$2.100</div>\n                    </div>\n                    <div className=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                        <i className=\"pi pi-map-marker text-orange-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span className=\"text-green-500 font-medium\">%52+ </span>\n                <span className=\"text-500\">since last week</span>\n            </div>\n        </div>\n        <div className=\"col-12 md:col-6 lg:col-3\">\n            <div className=\"surface-card shadow-2 p-3 border-round\">\n                <div className=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span className=\"block text-500 font-medium mb-3\">Customers</span>\n                        <div className=\"text-900 font-medium text-xl\">28441</div>\n                    </div>\n                    <div className=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                        <i className=\"pi pi-inbox text-cyan-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span className=\"text-green-500 font-medium\">520  </span>\n                <span className=\"text-500\">newly registered</span>\n            </div>\n        </div>\n        <div className=\"col-12 md:col-6 lg:col-3\">\n            <div className=\"surface-card shadow-2 p-3 border-round\">\n                <div className=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span className=\"block text-500 font-medium mb-3\">Comments</span>\n                        <div className=\"text-900 font-medium text-xl\">152 Unread</div>\n                    </div>\n                    <div className=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                        <i className=\"pi pi-comment text-purple-500 text-xl\"></i>\n                    </div>\n                </div>\n                <span className=\"text-green-500 font-medium\">85 </span>\n                <span className=\"text-500\">responded</span>\n            </div>\n        </div>\n    </div>\n</div>\n    `;\n\n    const block8 = `\n<div className=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\n    <div className=\"text-center mb-5\">\n        <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"hyper\" height=\"50\" className=\"mb-3\" />\n        <div className=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\n        <span className=\"text-600 font-medium line-height-3\">Don't have an account?</span>\n        <a className=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</a>\n    </div>\n\n    <div>\n        <label htmlFor=\"email1\" className=\"block text-900 font-medium mb-2\">Email</label>\n        <InputText id=\"email1\" type=\"text\" className=\"w-full mb-3\" />\n\n        <label htmlFor=\"password1\" className=\"block text-900 font-medium mb-2\">Password</label>\n        <InputText id=\"password1\" type=\"password\" className=\"w-full mb-3\" />\n\n        <div className=\"flex align-items-center justify-content-between mb-6\">\n            <div className=\"flex align-items-center\">\n                <Checkbox inputId=\"rememberme1\" binary className=\"mr-2\" onChange={e => setChecked(e.checked)} checked={checked} />\n                <label htmlFor=\"rememberme1\">Remember me</label>\n            </div>\n            <a className=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</a>\n        </div>\n\n        <Button label=\"Sign In\" icon=\"pi pi-user\" className=\"w-full\" />\n    </div>\n</div>\n    `;\n\n    const block9 = `\n<div className=\"surface-section\">\n    <div className=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\n    <div className=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\n    <ul className=\"list-none p-0 m-0\">\n        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div className=\"text-500 w-6 md:w-2 font-medium\">Title</div>\n            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\n            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n            </div>\n        </li>\n        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div className=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\n            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\n                <Chip label=\"Crime\" className=\"mr-2\"></Chip>\n                <Chip label=\"Drama\" className=\"mr-2\"></Chip>\n                <Chip label=\"Thriller\"></Chip>\n            </div>\n            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n            </div>\n        </li>\n        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div className=\"text-500 w-6 md:w-2 font-medium\">Director</div>\n            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\n            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n            </div>\n        </li>\n        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n            <div className=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\n            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\n            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n            </div>\n        </li>\n        <li className=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\n            <div className=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\n            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\n                A group of professional bank robbers start to feel the heat from police\n                when they unknowingly leave a clue at their latest heist.</div>\n            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n            </div>\n        </li>\n    </ul>\n</div>\n    `;\n\n    const block10 = `\n<div className=\"surface-card p-4 shadow-2 border-round\">\n    <div className=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\n    <div className=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\n    <div style={{ height: '150px' }} className=\"border-2 border-dashed surface-border\"></div>\n</div>\n    `;\n\n    return (\n        <>\n            <BlockViewer header=\"Hero\" code={block1}>\n                <div className=\"grid grid-nogutter surface-section text-800\">\n                    <div className=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\n                        <section>\n                            <span className=\"block text-6xl font-bold mb-1\">Create the screens your</span>\n                            <div className=\"text-6xl text-primary font-bold mb-3\">your visitors deserve to see</div>\n                            <p className=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n\n                            <Button label=\"Learn More\" type=\"button\" className=\"mr-3 p-button-raised\"></Button>\n                            <Button label=\"Live Demo\" type=\"button\" className=\"p-button-outlined\"></Button>\n                        </section>\n                    </div>\n                    <div className=\"col-12 md:col-6 overflow-hidden\">\n                        <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"hero-1\" className=\"md:ml-auto block md:h-full\" style={{ clipPath: 'polygon(8% 0, 100% 0%, 100% 100%, 0 100%)' }} />\n                    </div>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Feature\" code={block2}>\n                <div className=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\n                    <div className=\"mb-3 font-bold text-2xl\">\n                        <span className=\"text-900\">One Product, </span>\n                        <span className=\"text-blue-600\">Many Solutions</span>\n                    </div>\n                    <div className=\"text-700 text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\n                    <div className=\"grid\">\n                        <div className=\"col-12 md:col-4 mb-4 px-5\">\n                            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                                <i className=\"pi pi-desktop text-4xl text-blue-500\"></i>\n                            </span>\n                            <div className=\"text-900 mb-3 font-medium\">Built for Developers</div>\n                            <span className=\"text-700 text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\n                        </div>\n                        <div className=\"col-12 md:col-4 mb-4 px-5\">\n                            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                                <i className=\"pi pi-lock text-4xl text-blue-500\"></i>\n                            </span>\n                            <div className=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\n                            <span className=\"text-700 text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\n                        </div>\n                        <div className=\"col-12 md:col-4 mb-4 px-5\">\n                            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                                <i className=\"pi pi-check-circle text-4xl text-blue-500\"></i>\n                            </span>\n                            <div className=\"text-900 mb-3 font-medium\">Easy to Use</div>\n                            <span className=\"text-700 text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\n                        </div>\n                        <div className=\"col-12 md:col-4 mb-4 px-5\">\n                            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                                <i className=\"pi pi-globe text-4xl text-blue-500\"></i>\n                            </span>\n                            <div className=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\n                            <span className=\"text-700 text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\n                        </div>\n                        <div className=\"col-12 md:col-4 mb-4 px-5\">\n                            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                                <i className=\"pi pi-github text-4xl text-blue-500\"></i>\n                            </span>\n                            <div className=\"text-900 mb-3 font-medium\">Open Source</div>\n                            <span className=\"text-700 text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\n                        </div>\n                        <div className=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\n                            <span className=\"p-3 shadow-2 mb-3 inline-block surface-card\" style={{ borderRadius: '10px' }}>\n                                <i className=\"pi pi-shield text-4xl text-blue-500\"></i>\n                            </span>\n                            <div className=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\n                            <span className=\"text-700 text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\n                        </div>\n                    </div>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Pricing\" code={block3}>\n                <div className=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\n                    <div className=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\n                    <div className=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n\n                    <div className=\"grid\">\n                        <div className=\"col-12 lg:col-4\">\n                            <div className=\"p-3 h-full\">\n                                <div className=\"shadow-2 p-3 h-full flex flex-column surface-card\" style={{ borderRadius: '6px' }}>\n                                    <div className=\"text-900 font-medium text-xl mb-2\">Basic</div>\n                                    <div className=\"text-600\">Plan description</div>\n                                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <div className=\"flex align-items-center\">\n                                        <span className=\"font-bold text-2xl text-900\">$9</span>\n                                        <span className=\"ml-2 font-medium text-600\">per month</span>\n                                    </div>\n                                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <ul className=\"list-none p-0 m-0 flex-grow-1\">\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Arcu vitae elementum</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Dui faucibus in ornare</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Morbi tincidunt augue</span>\n                                        </li>\n                                    </ul>\n                                    <hr className=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\n                                    <Button label=\"Buy Now\" className=\"p-3 w-full mt-auto\"></Button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 lg:col-4\">\n                            <div className=\"p-3 h-full\">\n                                <div className=\"shadow-2 p-3 h-full flex flex-column surface-card\" style={{ borderRadius: '6px' }}>\n                                    <div className=\"text-900 font-medium text-xl mb-2\">Premium</div>\n                                    <div className=\"text-600\">Plan description</div>\n                                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <div className=\"flex align-items-center\">\n                                        <span className=\"font-bold text-2xl text-900\">$29</span>\n                                        <span className=\"ml-2 font-medium text-600\">per month</span>\n                                    </div>\n                                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <ul className=\"list-none p-0 m-0 flex-grow-1\">\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Arcu vitae elementum</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Dui faucibus in ornare</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Morbi tincidunt augue</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Duis ultricies lacus sed</span>\n                                        </li>\n                                    </ul>\n                                    <hr className=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <Button label=\"Buy Now\" className=\"p-3 w-full\"></Button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 lg:col-4\">\n                            <div className=\"p-3 h-full\">\n                                <div className=\"shadow-2 p-3 flex flex-column surface-card\" style={{ borderRadius: '6px' }}>\n                                    <div className=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\n                                    <div className=\"text-600\">Plan description</div>\n                                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <div className=\"flex align-items-center\">\n                                        <span className=\"font-bold text-2xl text-900\">$49</span>\n                                        <span className=\"ml-2 font-medium text-600\">per month</span>\n                                    </div>\n                                    <hr className=\"my-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <ul className=\"list-none p-0 m-0 flex-grow-1\">\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Arcu vitae elementum</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Dui faucibus in ornare</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Morbi tincidunt augue</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Duis ultricies lacus sed</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Imperdiet proin</span>\n                                        </li>\n                                        <li className=\"flex align-items-center mb-3\">\n                                            <i className=\"pi pi-check-circle text-green-500 mr-2\"></i>\n                                            <span>Nisi scelerisque</span>\n                                        </li>\n                                    </ul>\n                                    <hr className=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\n                                    <Button label=\"Buy Now\" className=\"p-3 w-full p-button-outlined\"></Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Call to Action\" code={block4}>\n                <div className=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\n                    <div className=\"text-700 text-center\">\n                        <div className=\"text-blue-600 font-bold mb-3\"><i className=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\n                        <div className=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\n                        <div className=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\n                        <Button label=\"Join Now\" icon=\"pi pi-discord\" className=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></Button>\n                    </div>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Banner\" code={block5} containerClassName=\"surface-section py-8\">\n                <div className=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\n                    <div className=\"font-bold mr-8\"><span role=\"img\" aria-label=\"fire\">🔥</span> Hot Deals!</div>\n                    <div className=\"align-items-center hidden lg:flex\">\n                        <span className=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\n                    </div>\n                    <button className=\"p-link flex align-items-center ml-2 mr-8 text-white\">\n                        <span className=\"underline font-bold\">Learn More</span>\n                    </button>\n                    <button className=\"p-ripple p-link flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150 p-ripple\" style={{ width: '2rem', height: '2rem' }}>\n                        <i className=\"pi pi-times\"></i>\n                    </button>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Page Heading\" code={block6}>\n                <div className=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\n                    <ul className=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\n                        <li>\n                            <button className=\"p-link text-500 no-underline line-height-3 cursor-pointer\">Application</button>\n                        </li>\n                        <li className=\"px-2\">\n                            <i className=\"pi pi-angle-right text-500 line-height-3\"></i>\n                        </li>\n                        <li>\n                            <span className=\"text-900 line-height-3\">Analytics</span>\n                        </li>\n                    </ul>\n                    <div className=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\n                        <div>\n                            <div className=\"font-medium text-3xl text-900\">Customers</div>\n                            <div className=\"flex align-items-center text-700 flex-wrap\">\n                                <div className=\"mr-5 flex align-items-center mt-3\">\n                                    <i className=\"pi pi-users mr-2\"></i>\n                                    <span>332 Active Users</span>\n                                </div>\n                                <div className=\"mr-5 flex align-items-center mt-3\">\n                                    <i className=\"pi pi-globe mr-2\"></i>\n                                    <span>9402 Sessions</span>\n                                </div>\n                                <div className=\"flex align-items-center mt-3\">\n                                    <i className=\"pi pi-clock mr-2\"></i>\n                                    <span>2.32m Avg. Duration</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"mt-3 lg:mt-0\">\n                            <Button label=\"Add\" className=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\" />\n                            <Button label=\"Save\" icon=\"pi pi-check\" />\n                        </div>\n                    </div>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Stats\" code={block7}>\n                <div className=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\n                    <div className=\"grid\">\n                        <div className=\"col-12 md:col-6 lg:col-3\">\n                            <div className=\"surface-card shadow-2 p-3 border-round\">\n                                <div className=\"flex justify-content-between mb-3\">\n                                    <div>\n                                        <span className=\"block text-500 font-medium mb-3\">Orders</span>\n                                        <div className=\"text-900 font-medium text-xl\">152</div>\n                                    </div>\n                                    <div className=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                                        <i className=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\n                                    </div>\n                                </div>\n                                <span className=\"text-green-500 font-medium\">24 new </span>\n                                <span className=\"text-500\">since last visit</span>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-6 lg:col-3\">\n                            <div className=\"surface-card shadow-2 p-3 border-round\">\n                                <div className=\"flex justify-content-between mb-3\">\n                                    <div>\n                                        <span className=\"block text-500 font-medium mb-3\">Revenue</span>\n                                        <div className=\"text-900 font-medium text-xl\">$2.100</div>\n                                    </div>\n                                    <div className=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                                        <i className=\"pi pi-map-marker text-orange-500 text-xl\"></i>\n                                    </div>\n                                </div>\n                                <span className=\"text-green-500 font-medium\">%52+ </span>\n                                <span className=\"text-500\">since last week</span>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-6 lg:col-3\">\n                            <div className=\"surface-card shadow-2 p-3 border-round\">\n                                <div className=\"flex justify-content-between mb-3\">\n                                    <div>\n                                        <span className=\"block text-500 font-medium mb-3\">Customers</span>\n                                        <div className=\"text-900 font-medium text-xl\">28441</div>\n                                    </div>\n                                    <div className=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                                        <i className=\"pi pi-inbox text-cyan-500 text-xl\"></i>\n                                    </div>\n                                </div>\n                                <span className=\"text-green-500 font-medium\">520  </span>\n                                <span className=\"text-500\">newly registered</span>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-6 lg:col-3\">\n                            <div className=\"surface-card shadow-2 p-3 border-round\">\n                                <div className=\"flex justify-content-between mb-3\">\n                                    <div>\n                                        <span className=\"block text-500 font-medium mb-3\">Comments</span>\n                                        <div className=\"text-900 font-medium text-xl\">152 Unread</div>\n                                    </div>\n                                    <div className=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style={{ width: '2.5rem', height: '2.5rem' }}>\n                                        <i className=\"pi pi-comment text-purple-500 text-xl\"></i>\n                                    </div>\n                                </div>\n                                <span className=\"text-green-500 font-medium\">85 </span>\n                                <span className=\"text-500\">responded</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Sign-In\" code={block8} containerClassName=\"surface-ground px-4 py-8 md:px-6 lg:px-8 flex align-items-center justify-content-center\">\n                <div className=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\n                    <div className=\"text-center mb-5\">\n                        <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"hyper\" height=\"50\" className=\"mb-3\" />\n                        <div className=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\n                        <span className=\"text-600 font-medium line-height-3\">Don't have an account?</span>\n                        <button className=\"p-link font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</button>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"email1\" className=\"block text-900 font-medium mb-2\">Email</label>\n                        <InputText id=\"email1\" type=\"text\" className=\"w-full mb-3\" />\n\n                        <label htmlFor=\"password1\" className=\"block text-900 font-medium mb-2\">Password</label>\n                        <InputText id=\"password1\" type=\"password\" className=\"w-full mb-3\" />\n\n                        <div className=\"flex align-items-center justify-content-between mb-6\">\n                            <div className=\"flex align-items-center\">\n                                <Checkbox inputId=\"rememberme1\" className=\"mr-2\" onChange={e => setChecked(e.checked)} checked={checked} />\n                                <label htmlFor=\"rememberme1\">Remember me</label>\n                            </div>\n                            <button className=\"p-link font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</button>\n                        </div>\n\n                        <Button label=\"Sign In\" icon=\"pi pi-user\" className=\"w-full\" />\n                    </div>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Description List\" code={block9} containerClassName=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\n                <div className=\"surface-section\">\n                    <div className=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\n                    <div className=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\n                    <ul className=\"list-none p-0 m-0\">\n                        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                            <div className=\"text-500 w-6 md:w-2 font-medium\">Title</div>\n                            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\n                            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n                            </div>\n                        </li>\n                        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                            <div className=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\n                            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\n                                <Chip label=\"Crime\" className=\"mr-2\"></Chip>\n                                <Chip label=\"Drama\" className=\"mr-2\"></Chip>\n                                <Chip label=\"Thriller\"></Chip>\n                            </div>\n                            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n                            </div>\n                        </li>\n                        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                            <div className=\"text-500 w-6 md:w-2 font-medium\">Director</div>\n                            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\n                            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n                            </div>\n                        </li>\n                        <li className=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\n                            <div className=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\n                            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\n                            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n                            </div>\n                        </li>\n                        <li className=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\n                            <div className=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\n                            <div className=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\n                                A group of professional bank robbers start to feel the heat from police\n                                when they unknowingly leave a clue at their latest heist.</div>\n                            <div className=\"w-6 md:w-2 flex justify-content-end\">\n                                <Button label=\"Edit\" icon=\"pi pi-pencil\" className=\"p-button-text\" />\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </BlockViewer>\n\n            <BlockViewer header=\"Card\" code={block10} containerClassName=\"px-4 py-8 md:px-6 lg:px-8\">\n                <div className=\"surface-card p-4 shadow-2 border-round\">\n                    <div className=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\n                    <div className=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\n                    <div style={{ height: '150px' }} className=\"border-2 border-dashed surface-border\"></div>\n                </div>\n            </BlockViewer>\n        </>\n    )\n}\n\nconst comparisonFn = function (prevProps, nextProps) {\n    return prevProps.location.pathname === nextProps.location.pathname;\n};\n\nexport default React.memo(BlocksDemo, comparisonFn);","import axios from \"axios\"\r\nimport { getToken } from \"./Utils\"\r\n\r\nconst headers = {}\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                // navigate.push('/login')\r\n            }\r\n            config.headers[\"Authorization\"] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    // Agregar una respuesta al interceptor\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","\r\n// EN ARCHIVO package.json SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY:\r\n// \"proxy\": \"http://20.65.110.204:8080\",\r\n\r\n// SOLO PARA PRODUCCION\r\n// const apiURL = 'http://20.65.110.204/uprime-mge-web/uprime/api'\r\nconst apiURL = 'https://mygreenenterprise.org/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA DESARROLLO Y PRUEBAS\r\n// const apiURL = '/uprime-mge-web/uprime/api'\r\n\r\nexport const getAutenticarUrl = () => `${apiURL}/UsuarioServicioRest/authenticateUsuario`\r\nexport const getAutorizarUrl = () => `${apiURL}/UsuarioServicioRest/authorizationUsuario`\r\nexport const getRecuperarPasswordUrl = () => `${apiURL}/UsuarioServicioRest/recuperarPassword`\r\nexport const getResetPasswordUrl = () => `${apiURL}/UsuarioServicioRest/resetPassword`\r\nexport const getChangePasswordUrl = () => `${apiURL}/UsuarioServicioRest/changePassword`\r\nexport const getRegistrarUrl = () => `${apiURL}/InversionistaServicioRest/insertInversionista`\r\n\r\nexport const getRegistrarPersonaUrl = () => `${apiURL}/PersonaServicioRest/insertPersona`\r\n\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogosList`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogoByFilter`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogosListByFather`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogoServicioRest/getCatalogoById`\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/insertCatalogo`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/deleteCatalogo`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogoServicioRest/updateCatalogo`\r\n\r\nexport const getOpcionesUrl = () => `${apiURL}/OpcionServicioRest/getOpcionesList`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OpcionServicioRest/getOpcionesListByFather`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OpcionServicioRest/getOpcionById`\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OpcionServicioRest/insertOpcion`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OpcionServicioRest/deleteOpcion`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OpcionServicioRest/updateOpcion`\r\n\r\nexport const getPerfilesUrl = () => `${apiURL}/PerfilServicioRest/getPerfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/PerfilServicioRest/getPerfilById`\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/PerfilServicioRest/insertPerfil`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/PerfilServicioRest/updatePerfil`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/PerfilServicioRest/deletePerfil`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/PerfilOpcionServicioRest/getOpcionesPorPerfilList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/insertPerfilOpcion`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/updatePerfilOpcion`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/PerfilOpcionServicioRest/deletePerfilOpcion`\r\n\r\nexport const getUsuariosUrl = () => `${apiURL}/UsuarioServicioRest/getUsuariosList`\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UsuarioServicioRest/getUsuariosListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UsuarioServicioRest/getUsuarioById`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UsuarioServicioRest/updateUsuario`\r\n\r\n/* MGE */\r\nexport const insertUsuario = () => `${apiURL}/UsuarioServicioRest/insertUsuario`\r\nexport const enrollUsuario = () => `${apiURL}/UsuarioServicioRest/enrollPostulante`\r\n\r\nexport const insertTraining = () => `${apiURL}/EntrenamientoServicioRest/insertEntrenamiento`\r\nexport const updateTraining = () => `${apiURL}/EntrenamientoServicioRest/updateEntrenamiento`\r\nexport const getTrainingById = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/EntrenamientoServicioRest/getEntrenamientoList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulanteServicioRest/insertPostulante`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulanteServicioRest/sendEmailRegistro`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulanteServicioRest/getPostulanteByEntrenamiento`\r\nexport const deletePostulant = () => `${apiURL}/PostulanteServicioRest/deletePostulante`\r\nexport const validatePostulant = () => `${apiURL}/PostulanteServicioRest/validatePostulante`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulanteServicioRest/getEntrenamientoByPostulante`\r\n\r\nexport const insertCourse = () => `${apiURL}/CursoServicioRest/insertCurso`\r\nexport const getCourseByTraining = () => `${apiURL}/CursoServicioRest/getCursosByEntrenamiento`\r\nexport const deleteCourse = () => `${apiURL}/CursoServicioRest/deleteCurso`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AsistenciaServicioRest/insertAsistencia`\r\nexport const getAttendanceById = () => `${apiURL}/AsistenciaServicioRest/getAsistenciaById`\r\nexport const updateAttendance = () => `${apiURL}/AsistenciaServicioRest/updateAsistencia`\r\n\r\nexport const insertInform = () => `${apiURL}/InformeServicioRest/insertInforme`\r\nexport const updateInform = () => `${apiURL}/InformeServicioRest/updateInforme`\r\nexport const getInformById = () => `${apiURL}/InformeServicioRest/getInformeById`\r\nexport const downloadInformByName = () => `${apiURL}/InformeServicioRest/downloadInformeByName`\r\nexport const downloadWorkplan = () => `${apiURL}/InformeServicioRest/downloadPlanTrabajo`\r\nexport const downloadFinalReport = () => `${apiURL}/InformeServicioRest/downloadInformeFinal`\r\nexport const sendEmailLoadInform = () => `${apiURL}/InformeServicioRest/sendEmailLoadInforme`\r\nexport const sendEmailRateInform = () => `${apiURL}/InformeServicioRest/sendEmailRateInforme`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenciaServicioRest/insertEvidencia`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificadoServicioRest/generateCertificado`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificadoServicioRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificadoServicioRest/downloadCertificateByName`\r\n\r\nexport const recoveryPassword = () => `${apiURL}/UsuarioServicioRest/recoveryPassword`\r\nexport const updatePassword = () => `${apiURL}/UsuarioServicioRest/updatePassword`\r\n\r\n\r\nexport const getInversionistaPorIdUrl = () => `${apiURL}/InversionistaServicioRest/getInversionistaById`\r\nexport const getActualizarInversionistaUrl = () => `${apiURL}/InversionistaServicioRest/updateUsuario`\r\n\r\nexport const getOfertasInversionUrl = () => `${apiURL}/OfertaInversionServicioRest/getOfertaInversionList`\r\nexport const getOfertaInversionByIdUrl = () => `${apiURL}/OfertaInversionServicioRest/getOfertaInversionById`\r\n\r\nexport const getSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/getSolicitudInversionList`\r\nexport const getTablaAmortizacionUrl = () => `${apiURL}/SolicitudInversionServicioRest/getTablaAmortizacion`\r\nexport const getInsertarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/insertSolicitudInversion`\r\nexport const getActualizarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/updateSolicitudInversion`\r\nexport const getEliminarSolicitudInversionUrl = () => `${apiURL}/SolicitudInversionServicioRest/deleteSolicitudInversion`\r\nexport const getSolicitudInversionPorIdUrl = () => `${apiURL}/SolicitudInversionServicioRest/getSolicitudInversionById`\r\n\r\nexport const getInversionUrl = () => `${apiURL}/InversionServicioRest/getInversionList`\r\nexport const getInversionesPorInversionistaUrl = () => `${apiURL}/InversionServicioRest/getInversionesByInversionista`\r\nexport const getInversionPorIdUrl = () => `${apiURL}/InversionServicioRest/getInversionById`\r\nexport const getInsertarInversionUrl = () => `${apiURL}/InversionServicioRest/insertInversion`\r\nexport const getActualizarInversionUrl = () => `${apiURL}/InversionServicioRest/updateInversion`\r\nexport const getEliminarInversionUrl = () => `${apiURL}/InversionServicioRest/deleteInversion`","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getInversionesPorInversionistaUrl } from \"../utils/urls\";\r\n\r\nexport default class InversionService {\r\n    getInversionesPorInversionista = (props) => {\r\n        const { navigate, inversionista } = props\r\n        return AxiosInstance(navigate).post(getInversionesPorInversionistaUrl(), inversionista)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Row, Col, Spin, Alert, Typography, Badge, Card, Image, Avatar, Statistic, Progress, List, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport { formatoMoneda, getEstiloFerificada, getResponsable, getURLImagenPYMERandom, getURLImagenRandom } from './../../utils/Utils'\r\nimport InversionService from '../../service/InversionService'\r\n\r\nconst { Meta } = Card\r\n\r\nconst inversionService = new InversionService()\r\n\r\nconst MisInversiones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { filtro } = useParams()\r\n  const [inversiones, setInversiones] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  const OpenInversion = (c) => {\r\n    navigate.push(`/inversion/${c}`)\r\n  }\r\n\r\n  const renderInversion = (i) => {\r\n    const { ivsCuotaMensual, ivsId, ivsIdEstado, ivsIdOfertaInv, ivsIdPersona, ivsMonto, ivsPlazo, ivsRecaudado, ivsTasaTir } = i\r\n    return (\r\n      <Col key={ivsId} xs={24} sm={12} md={12} lg={8} xl={6}>\r\n        <Badge.Ribbon text={\r\n          <span {...getEstiloFerificada()}>\r\n            Verificada <anticons.CheckCircleOutlined></anticons.CheckCircleOutlined>\r\n          </span>\r\n        } color='#8A05BE'>\r\n          <Card\r\n            bodyStyle={{ background: '#fff' }}\r\n            hoverable={true}\r\n            cover={\r\n              <Image src={getURLImagenPYMERandom(ivsId)} alt=\"\" width={'100%'} heigh={'100%'} preview={false} />\r\n            }\r\n            actions={[]}\r\n          >\r\n            <Meta\r\n              avatar={\r\n                <Avatar src={getURLImagenRandom(ivsId)} />\r\n              }\r\n              title={`PYME ${ivsIdPersona}`}\r\n              description={`Oferta de Inversión ${ivsIdOfertaInv}`}\r\n              style={{ paddingBottom: '15px' }}\r\n            />\r\n            {/* <Row>\r\n              <Col span={24}>\r\n                <Typography.Title level={5}>\r\n                  Datos Inversión {oinIdPersona}\r\n                </Typography.Title>\r\n                <Typography.Text>\r\n                  <p>\r\n                    {oinDetalle}\r\n                  </p>\r\n                </Typography.Text>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              <Col span={12}>\r\n                <Statistic\r\n                  title={\r\n                    'Recaudado'\r\n                  }\r\n                  value={\r\n                    ivsRecaudado && ivsMonto ?\r\n                      ((ivsRecaudado || 0) * 100 / (ivsMonto || 0)).toFixed(2) : 0\r\n                  }\r\n                  valueStyle={{\r\n                    color: '#000',\r\n                    fontSize: '1em'\r\n                  }}\r\n                  suffix=\"%\"\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <Row justify='end'>\r\n                  <Statistic\r\n                    title={\r\n                      'Objetivo'\r\n                    }\r\n                    value={formatoMoneda(ivsMonto || 0)}\r\n                    valueStyle={{\r\n                      color: '#000',\r\n                      fontSize: '1em'\r\n                    }}\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Progress\r\n                  strokeLinecap='square'\r\n                  strokeColor={{\r\n                    '0%': '#8A05BE',\r\n                    '100%': '#006e2c',\r\n                  }}\r\n                  percent={((ivsRecaudado || 0) * 100 / (ivsMonto || 0)).toFixed(2)}\r\n                  showInfo={false} trailColor={'#ccc'} size='small' />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <List\r\n                  bordered={false}\r\n                  dataSource={[\r\n                    {\r\n                      label: 'Estado',\r\n                      value: ivsIdEstado\r\n                    },\r\n                    {\r\n                      label: 'Inversión',\r\n                      value: formatoMoneda(ivsMonto)\r\n                    },\r\n                    {\r\n                      label: 'TIR',\r\n                      value: `${ivsTasaTir}%`\r\n                    },\r\n                    {\r\n                      label: 'Cuota',\r\n                      value: formatoMoneda(ivsCuotaMensual),\r\n                    },\r\n                    {\r\n                      label: 'Plazo',\r\n                      value: `${ivsPlazo} meses`\r\n                    }\r\n                  ]}\r\n                  renderItem={(i) => (\r\n                    <List.Item\r\n                      extra={\r\n                        <Typography.Text>{i.value}</Typography.Text>\r\n                      }\r\n                    >\r\n                      <Typography.Text style={{ fontWeight: 600 }}>{i.label}</Typography.Text>\r\n                    </List.Item>\r\n                  )}\r\n                >\r\n                </List>\r\n              </Col>\r\n            </Row>\r\n            {/* <Row style={{ textAlign: 'center', paddingTop: '15px' }}>\r\n              <Col span={8} style={{ borderRight: 'solid 1px #f0f0f0' }}>\r\n                <Tooltip title=\"Plazo\">\r\n                  <div>\r\n                    <anticons.CalendarOutlined />\r\n                    <br />\r\n                    {ivsPlazo} Meses\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={8} style={{ borderRight: 'solid 1px #f0f0f0' }}>\r\n                <Tooltip title=\"TIR\">\r\n                  <div>\r\n                    <anticons.PercentageOutlined />\r\n                    <br />\r\n                    {ivsTasaTir}\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Tooltip title=\"Estado\">\r\n                  <div>\r\n                    <anticons.UserOutlined />\r\n                    <br />\r\n                    {ivsIdEstado}\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row> */}\r\n            <Row style={{ textAlign: 'center', paddingTop: '15px' }}>\r\n              <Col span={24}>\r\n                <Button type='primary' onClick={() => OpenInversion(i.ivsId)}>Ver más</Button>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Badge.Ribbon >\r\n      </Col >\r\n    )\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data } = await inversionService.getInversionesPorInversionista({ navigate, filtro, inversionista: { ivsIdInversionista: getResponsable() } })\r\n      if (data) {\r\n        setIsLoading(false)\r\n        setError(null)\r\n        setInversiones(data.listObject)\r\n      } else {\r\n        setIsLoading(false)\r\n        setError(\"Hubo un error al obtener las ofertas de invesión\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener las ofertas de invesión\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading &&\r\n        <Row>\r\n          <Col span={24}>\r\n            <Row justify='center'>\r\n              <Spin size=\"large\" />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      {\r\n        error &&\r\n        <Row>\r\n          <Col span={24} style={{ padding: '0 0 15px 0' }}>\r\n            <Alert description={error} type='warning' showIcon banner></Alert>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      <Row>\r\n        <Col span={24}>\r\n          <Typography.Paragraph>\r\n            <Typography.Title level={4} style={{ margin: 0 }}>\r\n              Mis Inversiones\r\n            </Typography.Title>\r\n          </Typography.Paragraph>\r\n        </Col>\r\n      </Row>\r\n      <Row justify='center' gutter={[20, 30]}>\r\n        {\r\n          inversiones.length > 0 ? inversiones.map(i => renderInversion(i))\r\n            :\r\n            !isLoading &&\r\n            <Result\r\n              icon={\r\n                <Image src='./assets/Agente_6.png' preview={false} />\r\n              }\r\n              extra={\r\n                <>\r\n                  <Alert\r\n                    message={\r\n                      <Typography.Title level={5} style={{ textAlign: 'left' }}>\r\n                        No tienes inversiones activas\r\n                      </Typography.Title>\r\n                    }\r\n                    description={\r\n                      <>\r\n                        <Typography.Paragraph style={{ textAlign: 'left' }}>\r\n                          Existe una variedad de empresas en las que puedes invertir en forma de crédito directo. No esperes más, realiza tu primera inversión.\r\n                        </Typography.Paragraph>\r\n                        <Typography.Paragraph>\r\n                          <Button type=\"primary\" style={{ letterSpacing: '1.5px' }} onClick={() => { navigate.push('/') }}>Quiero Invertir</Button>\r\n                        </Typography.Paragraph>\r\n                      </>\r\n                    }\r\n                    type=\"info\"\r\n                    showIcon\r\n                  />\r\n                </>\r\n              }\r\n            />\r\n        }\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MisInversiones","import axios from 'axios'\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOfertasInversionUrl, getOfertaInversionByIdUrl } from \"../utils/urls\"\r\nexport default class OfertaInversionService {\r\n    gets = () => {\r\n        return axios.get(getOfertasInversionUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, ofertaInversion } = props\r\n        return AxiosInstance(navigate).post(getOfertaInversionByIdUrl(), ofertaInversion)\r\n    }\r\n}","import AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { getTablaAmortizacionUrl } from \"../utils/urls\"\r\n\r\nexport default class TablaAmortizacionService {\r\n    get = (props) => {\r\n        const { navigate, solicitudInversion } = props\r\n        return AxiosInstance(navigate).post(getTablaAmortizacionUrl(), solicitudInversion)\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Col, Row, Table, Typography } from 'antd'\r\nimport { formatoMoneda } from '../../utils/Utils'\r\n\r\nimport './TablaAmortizacion.css'\r\n\r\nconst columns = [\r\n    {\r\n        title: '#',\r\n        dataIndex: 'numCuota'\r\n    },\r\n    {\r\n        title: 'Fecha',\r\n        dataIndex: 'fechaPago'\r\n    },\r\n    {\r\n        title: 'Capital',\r\n        dataIndex: 'amortizacion',\r\n        render: (e) => (\r\n            formatoMoneda(e)\r\n        )\r\n    }\r\n    ,\r\n    {\r\n        title: 'Interés',\r\n        dataIndex: 'interes',\r\n        render: (e) => (\r\n            formatoMoneda(e)\r\n        )\r\n    }\r\n    ,\r\n    {\r\n        title: 'Recibes',\r\n        dataIndex: 'cuotaMensual',\r\n        className: 'aRecibir',\r\n        render: (e) => (\r\n            <Typography.Text strong>\r\n                {formatoMoneda(e)}\r\n            </Typography.Text>\r\n        )\r\n    }\r\n]\r\n\r\nconst getTotal = (t) => {\r\n    return t.reduce((p, c) => p + c.cuotaMensual, 0)\r\n}\r\n\r\nconst TablaAmortizacion = (props) => {\r\n    const { tabla, cuota, plazo, isLoading } = props\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                        <Typography.Title level={5} style={{ color: '#8A05BE', textTransform: 'uppercase' }}>\r\n                            Por tu inversión de {formatoMoneda(cuota || 0)} recibiras en total {formatoMoneda(getTotal(tabla) || 0)} en {plazo} meses\r\n                        </Typography.Title>\r\n                    </Typography.Paragraph>\r\n                </Col>\r\n            </Row>\r\n            {/* <Typography.Title level={5}>Detalle de Inversión</Typography.Title> */}\r\n            <Table\r\n                rowKey={'numCuota'}\r\n                columns={columns}\r\n                dataSource={tabla}\r\n                size='small'\r\n                pagination={{\r\n                    defaultCurrent: 1,\r\n                    total: tabla.length\r\n                }}\r\n                loading={isLoading}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nTablaAmortizacion.propTypes = {\r\n    tabla: PropTypes.arrayOf(Object).isRequired,\r\n    cuota: PropTypes.number.isRequired,\r\n    plazo: PropTypes.number.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default TablaAmortizacion","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Typography } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport { formatoMoneda } from '../../utils/Utils'\r\n\r\nconst ResumenInversion = (props) => {\r\n    const { cuota } = props\r\n    return (\r\n        <Typography.Title level={4} style={{ color: '#8A05BE' }}>\r\n            <anticons.MoneyCollectOutlined /> Inversión total: {formatoMoneda(cuota || 0)}\r\n        </Typography.Title>\r\n    )\r\n}\r\n\r\nResumenInversion.propTypes = {\r\n    cuota: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ResumenInversion","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col>\r\n                                <Spin size='large'></Spin>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getInversionistaPorIdUrl } from \"../utils/urls\";\r\n\r\nexport default class InversionistaService {\r\n    get = (props) => {\r\n        const { navigate, inversionista } = props\r\n        return AxiosInstance(navigate).post(getInversionistaPorIdUrl(), inversionista)\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nexport default class CatalogoService {\r\n    getTiposIdentificacion = () => this.getCatalogo({ catalogo: { catNombre: \"TIPO IDENTIFICACION\" } })\r\n    getTiposPersona = () => this.getCatalogo({ catalogo: { catNombre: \"TIPO PERSONA\" } })\r\n    getActividadesEconomicas = () => this.getCatalogo({ catalogo: { catNombre: \"ACTIVIDAD ECONOMICA\" } })\r\n    getBancos = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"INSTITUCIONES FINANCIERAS\" } })\r\n    getTiposCuenta = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"TIPOS DE CUENTA\" } })\r\n    getFuentesIngreso = (navigate) => this.getPorPadre({ navigate, catalogo: { catNombre: \"FUENTE INGRESO\" } })\r\n    getPaises = () => this.getPorPadre({ catalogo: { catNombre: \"COUNTRIES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catNombre: \"MODALITY\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catNombre: \"COURSES\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catNombre: \"SEX\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catNombre: \"TRAINING STATUS\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catNombre: \"REPORT TYPE\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catNombre: \"STATUS REPORT\" } })\r\n\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n        // return AxiosInstance(navigate).post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Typography, Button, Input, Row, Col, Form, InputNumber, DatePicker, Collapse, Select, Divider } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport moment from 'moment/moment'\r\nimport { getLocale } from '../../utils/Utils'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport InversionistaService from './../../service/InversionistaService'\r\nimport CatalogoService from './../../service/CatalogoService'\r\n\r\nconst { Panel } = Collapse\r\nconst { Option } = Select\r\n\r\nconst inversionistaService = new InversionistaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Inversionista = (props) => {\r\n    const { navigate } = props\r\n    const [bancos, setBancos] = useState([])\r\n    const [tiposCuenta, setTiposCuenta] = useState([])\r\n    const [fuentesIngreso, setFuentesIngreso] = useState([])\r\n    const [tiposIdentificacion, setTiposIdentificacion] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n    const [inversionista, setInversionista] = useState(null)\r\n    const [formRegistro] = Form.useForm();\r\n\r\n    const get = async () => {\r\n\r\n        Promise\r\n            .all([\r\n                catalogoService.getTiposIdentificacion(navigate),\r\n                catalogoService.getBancos(navigate),\r\n                catalogoService.getTiposCuenta(navigate),\r\n                catalogoService.getFuentesIngreso(navigate),\r\n                inversionistaService.get(props)\r\n            ])\r\n            .then(r => {\r\n                setIsLoading(false)\r\n                setError('')\r\n                const tiposIdentificacion = r[0].data.listObject[0]\r\n                const bancos = r[1].data.listObject[0]\r\n                const tiposCuenta = r[2].data.listObject[0]\r\n                const fuentesIngreso = r[3].data.listObject[0]\r\n                const inversionista = r[4].data.listObject.map(i => ({\r\n                    ...i, ...{\r\n                        invFecNac: moment(i.invFecNac, 'DD/MM/YYYY', true),\r\n                        invFueIng: 140,\r\n                        invCar: '',\r\n                        invIngMenApr: 0,\r\n                        invTitCueBan: `${i.invNombres} ${i.invApellidos}`,\r\n                        invBan: 130,\r\n                        invTipCue: 91,\r\n                        invNumCueBan: ''\r\n                    }\r\n                }))[0]\r\n                setTiposIdentificacion(tiposIdentificacion)\r\n                setBancos(bancos)\r\n                setTiposCuenta(tiposCuenta)\r\n                setFuentesIngreso(fuentesIngreso)\r\n                setInversionista(inversionista)\r\n            })\r\n            .catch(e => {\r\n                setIsLoading(false)\r\n                setError(\"No pudimos hacer la solicitud para obtener el inversionista\")\r\n            })\r\n    }\r\n\r\n    const registrar = (values) => {\r\n    }\r\n\r\n    const renderCatalogo = e => <Option key={e.catId} value={e.catId}>{e.catNombre}</Option>\r\n    const renderCatalogoValor = e => <Option key={e.catValor} value={e.catValor}>{e.catNombre}</Option>\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            get()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <AlertWait error={error} isLoading={isLoading} />\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Row justify='start'>\r\n                        <Typography.Title\r\n                            level={4}\r\n                            style={{\r\n                                margin: 0,\r\n                            }}\r\n                        >Inversionista</Typography.Title>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                inversionista &&\r\n                <Form\r\n                    layout={'vertical'}\r\n                    form={formRegistro}\r\n                    initialValues={inversionista}\r\n                    onFinish={registrar}\r\n                >\r\n                    <Collapse defaultActiveKey={['1']} bordered={false} accordion>\r\n                        <Panel\r\n                            key=\"1\"\r\n                            header={\r\n                                <Typography.Text strong>Información Personal</Typography.Text>\r\n                            }\r\n                            extra={\r\n                                <Typography.Text type='success'>\r\n                                    <anticons.CheckCircleOutlined />\r\n                                </Typography.Text>\r\n                            }\r\n                        >\r\n                            <Row justify='center' gutter={10}>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Nombres\"\r\n                                        name='invNombres'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese sus nombres',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invNombres\" name=\"invNombres\" label='Nombres' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Apellidos\"\r\n                                        name='invApellidos'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese sus apellidos',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invApellidos\" name=\"invApellidos\" label='Apellidos' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row justify='center' gutter={10}>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n\r\n                                    <Form.Item label=\"Tipo de Identificación\"\r\n                                        name='invTipoDoc'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Seleccione el tipo de identificación',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Select name='invTipoDoc'>\r\n                                            {\r\n                                                tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Identificación\"\r\n                                        name='invDocumento'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese su identificación',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invDocumento\" name=\"invDocumento\" label='Identificación' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row justify='center' gutter={10}>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                                    <Form.Item label=\"Dirección\"\r\n                                        name='invDireccion'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese su dirección',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invDireccion\" name=\"invDireccion\" label='Dirección' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row justify='center' gutter={10}>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Ciudad\"\r\n                                        name='invCiudad'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese la ciudad',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invCiudad\" name=\"invCiudad\" label='Ciudad' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"País\"\r\n                                        name='invPais'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese el país',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invPais\" name=\"invPais\" label='País' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row justify='center' gutter={10}>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Fecha de Nacimiento\"\r\n                                        name='invFecNac'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese la fecha de nacimiento',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <DatePicker id=\"invFecNac\" name='invFecNac' format={['DD/MM/YYYY']} locale={getLocale()} style={{ width: '100%' }}></DatePicker>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Teléfono\"\r\n                                        name='invTelefono'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese el teléfono',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invTelefono\" name=\"invTelefono\" label='Teléfono' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Panel>\r\n                        <Panel\r\n                            key=\"2\"\r\n                            header={\r\n                                <Typography.Text strong>Fuente de Ingresos</Typography.Text>\r\n                            }\r\n                            extra={\r\n                                <Typography.Text type='success'>\r\n                                    <anticons.CheckCircleOutlined />\r\n                                </Typography.Text>\r\n                            }\r\n                        >\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                                    <Form.Item label=\"Principal Fuente de ingresos\"\r\n                                        name='invFueIng'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Seleccione la fuente de ingresos',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Select name='invFueIng'>\r\n                                            {\r\n                                                fuentesIngreso && fuentesIngreso.map(p => renderCatalogo(p))\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Cargo\"\r\n                                        name='invCar'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese el cargo',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invCar\" name=\"invCar\" label='Cargo' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Ingresos mensuales aproximados\"\r\n                                        name='invIngMenApr'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete los ingresos',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            name=\"invIngMenApr\" label='Ingresos mensuales aproximados'\r\n                                            formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                                            style={{ width: '100%' }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Panel>\r\n                        <Panel\r\n                            key=\"3\"\r\n                            header={\r\n                                <Typography.Text strong>Cuenta Bancaria</Typography.Text>\r\n                            }\r\n                            extra={\r\n                                <Typography.Text type='success'>\r\n                                    <anticons.CheckCircleOutlined />\r\n                                </Typography.Text>\r\n                            }\r\n                        >\r\n                            <Typography.Paragraph>\r\n                                <Typography.Text type='secondary'>Donde recibiras tus ganancias</Typography.Text>\r\n                            </Typography.Paragraph>\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Titular\"\r\n                                        name='invTitCueBan'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Titular',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invTitCueBan\" name=\"invTitCueBan\" label='Titular' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Banco\"\r\n                                        name='invBan'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Seleccione el banco',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Select name='invBan'>\r\n                                            {\r\n                                                bancos && bancos.map(p => renderCatalogo(p))\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Tipo Cuenta\"\r\n                                        name='invTipCue'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Seleccione el tipo de cuenta',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Select name='invTipCue'>\r\n                                            {\r\n                                                tiposCuenta && tiposCuenta.map(p => renderCatalogo(p))\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                                    <Form.Item label=\"Número de Cuenta\"\r\n                                        name='invNumCueBan'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Ingrese el número de cuenta',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"invNumCueBan\" name=\"invNumCueBan\" label='Número de Cuenta' type='text' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Panel>\r\n                    </Collapse>\r\n                    <Divider></Divider>\r\n                    <Button type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Guardar</Button>\r\n                </Form>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nInversionista.propTypes = {\r\n    inversionista: PropTypes.object.isRequired,\r\n    navigate: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Inversionista","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport './inversion.css'\r\nimport { Typography, Badge, Divider, Button, Spin, Progress, message, Row, Col, Alert, Card, Avatar, Form, Image, Statistic, InputNumber, Upload, Result, Drawer, Rate } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport { formatoMoneda, getCalificaciones, getURLImagenRandom, getURLImagenPYMERandom, getEstiloFerificada } from '../../utils/Utils'\r\nimport { getOrigenes } from '../../service/OrigenServices'\r\n\r\nimport OfertaInversionService from '../../service/OfertaInversionService'\r\nimport TablaAmortizacionService from '../../service/TablaAmortizacionService'\r\n\r\nimport TablaAmortizacion from '../tablaAmortizacion/TablaAmortizacion'\r\nimport ResumenInversion from './ResumenInversion'\r\nimport Inversionista from '../inversionista/Inversionista'\r\n\r\nconst { Meta } = Card\r\nconst { Dragger } = Upload\r\n\r\nconst calificacion = {\r\n  value: 3\r\n}\r\nconst pasos = [\r\n  {\r\n    id: 1,\r\n    titulo: 'CALCULA TU INVERSIÓN'\r\n  },\r\n  {\r\n    id: 2,\r\n    titulo: 'DATOS DEL INVERSIONISTA'\r\n  },\r\n  {\r\n    id: 3,\r\n    titulo: 'DECLARACIÓN DE ORIGEN DE FONDOS'\r\n  },\r\n  {\r\n    id: 4,\r\n    titulo: 'CONFIRMA TU INVERSIÓN'\r\n  },\r\n  {\r\n    id: 5,\r\n    titulo: 'Inversión Confirmada'\r\n  }\r\n]\r\n\r\nconst ofertaInversionService = new OfertaInversionService()\r\nconst tablaAmortizacionService = new TablaAmortizacionService()\r\n\r\nconst Inversion = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [inversion, setInversion] = useState({})\r\n  const [solicitudInversion, setSolicitudInversion] = useState({ slcMonto: 200 })\r\n  const [tablaAmortizacion, setTablaAmortizacion] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isCalculando, setIsCalculando] = useState(false)\r\n  const [isInvertir, setIsInvertir] = useState(false)\r\n  const [inversionEnviada, setInversionEnviada] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [formSimular] = Form.useForm();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [paso, setPaso] = useState(0);\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const siguientePaso = () => {\r\n    setPaso(paso + 1);\r\n  }\r\n\r\n  const anteriorPaso = () => {\r\n    setPaso(paso - 1);\r\n  }\r\n\r\n  // const onChange = (e) => {\r\n  //   setSolicitudInversion({ ...solicitudInversion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  // }\r\n\r\n  const fetchInversion = async () => {\r\n    Promise\r\n      .all([\r\n        ofertaInversionService.get({ navigate, ofertaInversion: { oinId: id } })\r\n      ])\r\n      .then(r => {\r\n        setIsLoading(false)\r\n        setError('')\r\n        const ofertaInversion = r[0].data.listObject[0]\r\n        setInversion(ofertaInversion)\r\n      })\r\n      .catch(e => {\r\n        setIsLoading(false)\r\n        setError(\"No pudimos hacer la solicitud para obtener la oferta de invesión\")\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      fetchInversion()\r\n    }\r\n  })\r\n\r\n  const Invertir = async (c) => {\r\n    setPaso(pasos.length - 1)\r\n    setInversionEnviada(true)\r\n    setIsInvertir(true);\r\n    message.success(\"Insersión enviada exitosamente\")\r\n    setIsInvertir(false);\r\n    // setError('')\r\n    // setIsInvertir(true)\r\n    // try {\r\n    //   const { data } = await AxiosInstance(navigate).post(getInsertarSolicitudInversionUrl(), solicitudInversion)\r\n    //   const _solicitudInversion = data.listObject[0]\r\n    //   setSolicitudInversion(_solicitudInversion)\r\n    //   const registro = {\r\n    //     idUsuario: getDatosUsuario().idUsuario,\r\n    //     solicitudes: [_solicitudInversion]\r\n    //   }\r\n    //   localStorage.setItem(\r\n    //     \"ckSolicitudes\",\r\n    //     JSON.stringify(registro)\r\n    //   )\r\n    //   setIsInvertir(false)\r\n    //   message.success('Solicitud Registrada')\r\n    // }\r\n    // catch (error) {\r\n    //   setIsInvertir(false)\r\n    //   setError(\"No pudimos hacer la solicitud para guardar la solicitud de inversión\")\r\n    // }\r\n  }\r\n\r\n  const CalcularInversion = async (solicitudInversion) => {\r\n    const datosCalcular = {\r\n      slcMonto: solicitudInversion.slcMonto,\r\n      slcNumCuotas: inversion.oinPlazo,\r\n      slcTazaInt: inversion.oinTir\r\n    }\r\n    setIsCalculando(true)\r\n    try {\r\n      const { data } = await tablaAmortizacionService.get({ navigate, solicitudInversion: { ...datosCalcular } })\r\n      const tabla = data.listObject[0]\r\n      setTablaAmortizacion(tabla)\r\n      const _solicitudInversion = {\r\n        idInversionista: 13,\r\n        idOfertaInv: id,\r\n        slcCapMasInt: tabla.length > 0 ? tabla.reduce((p, c) => p + c.cuotaMensual, 0) : 0,\r\n        slcCuotaMensual: tabla.length > 0 ? tabla[0].cuotaMensual : 0,\r\n        slcMonto: solicitudInversion.slcMonto,\r\n        slcNumCuotas: inversion.oinPlazo\r\n      }\r\n      setSolicitudInversion(_solicitudInversion)\r\n      setIsCalculando(false)\r\n    }\r\n    catch (error) {\r\n      setIsCalculando(false)\r\n      setError('No fue posible realizar el cálculo')\r\n    }\r\n  }\r\n\r\n  const Calcular = (values) => {\r\n    if (!inversionEnviada) {\r\n      setPaso(0)\r\n    }\r\n    showModal(true)\r\n    CalcularInversion(values)\r\n  }\r\n\r\n  const renderTablaAmortizacion = () => {\r\n    const props = {\r\n      tabla: tablaAmortizacion,\r\n      cuota: solicitudInversion.slcMonto ? parseFloat(solicitudInversion.slcMonto) : 0,\r\n      plazo: inversion.oinPlazo || 0,\r\n      isLoading: isCalculando\r\n    }\r\n    return <TablaAmortizacion {...props}></TablaAmortizacion>\r\n  }\r\n\r\n  const renderResumenInversion = () => {\r\n    const props = {\r\n      cuota: solicitudInversion.slcMonto ? parseFloat(solicitudInversion.slcMonto) : 0\r\n    }\r\n    return <ResumenInversion {...props}></ResumenInversion>\r\n  }\r\n\r\n  const renderSimulador = (props) => {\r\n    const { etiqueta } = props\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form\r\n            layout={'vertical'}\r\n            form={formSimular}\r\n            initialValues={\r\n              {\r\n                slcMonto: 200\r\n              }\r\n            }\r\n            onFinish={Calcular}\r\n          >\r\n            <Row gutter={[10, 10]} align='bottom' justify='center'>\r\n              <Col>\r\n                <Form.Item label=\"Inversión\"\r\n                  name=\"slcMonto\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Ingrese el monto de su inversión',\r\n                    },\r\n                  ]}>\r\n                  <InputNumber\r\n                    label='Inversión'\r\n                    formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                    parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Button type='primary' htmlType='submit' loading={isCalculando}>{etiqueta}</Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row justify='center'>\r\n              <Col>\r\n                <Typography.Text type='secondary'>\r\n                  Inversión mínima $200.00\r\n                </Typography.Text>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row >\r\n    )\r\n  }\r\n\r\n  const renderInversion = (i) => {\r\n    const { oinId, oinCapital, oinDetalle, oinInversionistas, oinPlazo, oinRecaudado, oinTir, oinIdPersona } = i\r\n    return (\r\n      <Row gutter={20}>\r\n        <Col xs={24} sm={14} md={14} lg={14} xl={14}>\r\n          <Badge.Ribbon text={\r\n            <span {...getEstiloFerificada()}>Solicitud Verificada <anticons.CheckCircleOutlined></anticons.CheckCircleOutlined></span>\r\n          } color='#8A05BE'>\r\n            <Card\r\n              bordered={false}\r\n              description={{ oinDetalle }}\r\n              cover={\r\n                <Image src={getURLImagenPYMERandom(oinId)} alt=\"\" width={'100%'} heigh={'100%'} />\r\n              }\r\n            >\r\n              <Meta\r\n                avatar={\r\n                  <>\r\n                    <Avatar src={getURLImagenRandom(oinId)} /><br />\r\n                    <Rate tooltips={getCalificaciones()} value={3} /><br />\r\n                    {calificacion.value ? <span className=\"ant-rate-text\">{getCalificaciones()[calificacion.value - 1]}</span> : ''}\r\n                  </>\r\n                }\r\n                title={`Nombre del PYME ${oinIdPersona}`}\r\n                description={oinDetalle}\r\n              />\r\n            </Card>\r\n          </Badge.Ribbon>\r\n        </Col>\r\n        <Col xs={24} sm={10} md={10} lg={10} xl={10}>\r\n          <Row>\r\n            <Col span={12}>\r\n              <Statistic\r\n                value={\r\n                  oinRecaudado && oinCapital ?\r\n                    (oinRecaudado || 0) * 100 / (oinCapital || 0) : 0\r\n                }\r\n                precision={2}\r\n                suffix=\"%\"\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row justify='end'>\r\n                <Statistic\r\n                  value={formatoMoneda(oinCapital || 0)}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Progress\r\n                strokeLinecap='square'\r\n                strokeColor={{\r\n                  '0%': '#8A05BE',\r\n                  '100%': '#006e2c',\r\n                }}\r\n                percent={((oinRecaudado || 0) * 100 / (oinCapital || 0)).toFixed(2)} showInfo={false} trailColor={'#ccc'} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={12}>\r\n              <Statistic\r\n                title={formatoMoneda(oinRecaudado || 0)}\r\n                value={'Recaudado'}\r\n                valueStyle={{\r\n                  color: '#000',\r\n                  fontSize: '1em'\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row justify='end'>\r\n                <Statistic\r\n                  title={\r\n                    <div style={{\r\n                      textAlign: 'right'\r\n                    }}>\r\n                      {formatoMoneda(oinCapital || 0 - oinRecaudado || 0)}\r\n                    </div>\r\n                  }\r\n                  value={'Por Recaudar'}\r\n                  valueStyle={{\r\n                    color: '#000',\r\n                    fontSize: '1em'\r\n                  }}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Datos para la inversión</span></Divider>\r\n          <Row style={{ textAlign: 'center', background: 'rgba(41, 127, 255, 0.04)', paddingTop: '15px', borderRadius: '12px' }}>\r\n            <Col span={8} style={{ borderRight: 'solid 1px #f0f0f0' }}>\r\n              <Statistic\r\n                title={\r\n                  <div>Plazo</div>\r\n                }\r\n                value={oinPlazo}\r\n                precision={0}\r\n                suffix={\r\n                  <Typography.Paragraph>\r\n                    <Typography.Text strong>\r\n                      Meses\r\n                    </Typography.Text>\r\n                  </Typography.Paragraph>\r\n                }\r\n                valueStyle={\r\n                  {\r\n                    fontSize: '1.1em',\r\n                    fontWeight: 600,\r\n                    color: 'rgba(0, 0, 0, 0.85)'\r\n                  }\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={8} style={{ borderRight: 'solid 1px #f0f0f0' }}>\r\n              <Statistic\r\n                title={\r\n                  <div>TIR %</div>\r\n                }\r\n                value={oinTir}\r\n                precision={2}\r\n                valueStyle={\r\n                  {\r\n                    fontSize: '1.1em',\r\n                    fontWeight: 600,\r\n                    color: 'rgba(0, 0, 0, 0.85)'\r\n                  }\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Statistic\r\n                title={\r\n                  <div>Inversionistas</div>\r\n                }\r\n                value={oinInversionistas}\r\n                precision={0}\r\n                valueStyle={\r\n                  {\r\n                    fontSize: '1.1em',\r\n                    fontWeight: 600,\r\n                    color: 'rgba(0, 0, 0, 0.85)'\r\n                  }\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Calcula tu Ganancia</span></Divider>\r\n          {\r\n            renderSimulador({ etiqueta: 'Simular' })\r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading &&\r\n        <Row>\r\n          <Col span={24}>\r\n            <Row justify='center'>\r\n              <Spin size=\"large\" />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      {\r\n        error &&\r\n        <Row>\r\n          <Col span={24} style={{ padding: '0 0 15px 0' }}>\r\n            <Alert description={error} type='warning' showIcon banner></Alert>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >Inversión</Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Row justify='center'>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={16}>\r\n          {\r\n            inversion && renderInversion(inversion)\r\n          }\r\n        </Col>\r\n      </Row>\r\n\r\n      <Drawer\r\n        title={\r\n          <Row justify='center'>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={16}>\r\n              <Typography.Paragraph>\r\n                <Typography.Title level={4}>\r\n                  Inversión\r\n                </Typography.Title>\r\n              </Typography.Paragraph>\r\n              <Typography.Paragraph>\r\n                <Typography.Text type='secondary'>\r\n                  Tu Progreso {(paso) * (100 / (pasos.length - 1))} %\r\n                </Typography.Text>\r\n              </Typography.Paragraph>\r\n              <Typography.Paragraph>\r\n\r\n                <Progress\r\n                  strokeLinecap='square'\r\n                  strokeColor={{\r\n                    '0%': '#8A05BE',\r\n                    '100%': '#006e2c',\r\n                  }}\r\n                  percent={(paso) * 25}\r\n                  showInfo={false}\r\n                  trailColor={'#ccc'} size='default' />\r\n              </Typography.Paragraph>\r\n              <Typography.Paragraph style={{ textAlign: 'center', letterSpacing: '1px' }}>\r\n                <Typography.Title level={5}>\r\n                  {pasos[paso].titulo}\r\n                </Typography.Title>\r\n              </Typography.Paragraph>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        headerStyle={{\r\n          padding: '10px'\r\n        }}\r\n        placement=\"bottom\"\r\n        closable={true}\r\n        onClose={handleCancel}\r\n        open={isModalOpen}\r\n        height={\"94%\"}\r\n      >\r\n        <Row justify='center'>\r\n          <Col xs={24} sm={24} md={24} lg={24} xl={16}>\r\n            {\r\n              paso === 0 ?\r\n                <>\r\n                  {\r\n                    renderSimulador({ etiqueta: 'Calcular' })\r\n                  }\r\n                  <div className='steps-content'>\r\n                    {tablaAmortizacion && tablaAmortizacion.length > 0 ? renderTablaAmortizacion() : <></>}\r\n                    <Typography.Paragraph>\r\n                      * Al dar clic en Siguiente confirmo haber aceptado previamente los <a href='/files/politicasuso.pdf' target={'_blank'}><Typography.Text strong>Acuerdos específicos de uso del sitio web</Typography.Text></a> como usuario inversionista y entiendo los riesgos que se desprenden de este tipo de inversiones.\r\n                      <br />\r\n                      ** CredKlub se encarga de conectar a emprendedores con inversionistas. CredKlub no se responsabiliza por el pago de los créditos concedidos a los solicitantes.\r\n                    </Typography.Paragraph>\r\n                  </div>\r\n                </>\r\n                : paso === 1 ?\r\n                  <div className='steps-content'>\r\n                    <Inversionista inversionista={{ invId: 13 }} navigate={navigate} />\r\n                  </div>\r\n                  : paso === 2 ?\r\n                    <div className='steps-content'>\r\n                      <Typography.Paragraph>\r\n                        Yo, <Typography.Text strong>\"NOMBRE INVERSIONISTA\"</Typography.Text> portador de la cédula de ciudadanía No. <Typography.Text strong>\"IDENTIFICACION INVERSIONISTA\"</Typography.Text>, por sus propios y personales derechos, manifiesto que la información descrita en el formulario de usuario en calidad de inversionista para la operación de financiamiento colaborativo con interés a plazo fijo, utilizando la plataforma virtual de CredKlub es cierta, y realizo las siguientes declaraciones de fuentes u origen de fondos y actividades lícitas:\r\n                      </Typography.Paragraph>\r\n                      <ol>\r\n                        {\r\n                          getOrigenes().map(o => <li key={o.id}>{o.value}</li>)\r\n                        }\r\n                      </ol>\r\n                      <Typography.Paragraph>\r\n                        <Typography.Text strong italic>\r\n                          Los datos aquí consignados obedecen a la realidad. Al dar clic en Siguiente declaro (amos) haber leído, entendido y aceptado libremente el presente documento.\r\n                        </Typography.Text>\r\n                      </Typography.Paragraph>\r\n                    </div>\r\n                    : paso === 3 ?\r\n                      <>\r\n                        <Typography.Paragraph>\r\n                          <Typography.Title level={5}>\r\n                            Transfiere los fondos a la siguiente cuenta y asegura tu inversión:\r\n                          </Typography.Title>\r\n                        </Typography.Paragraph>\r\n                        <div className='steps-content' style={{ textAlign: 'center' }}>\r\n                          <Typography.Paragraph>\r\n                            {\r\n                              tablaAmortizacion && tablaAmortizacion.length > 0 ? renderResumenInversion() : <></>\r\n                            }\r\n                            <Typography.Text strong>Cuenta Corriente: </Typography.Text>123456789\r\n                            <br /><Typography.Text strong>BANCO DE GUAYAQUIL</Typography.Text>\r\n                            <br /><Typography.Text strong>A nombre de: </Typography.Text>CREDKLUB\r\n                            <br /><Typography.Text strong>RUC: </Typography.Text>099999999001\r\n                            <br /><Typography.Text strong>Correo: </Typography.Text>info@credklub.com\r\n                            <br /><Typography.Text strong>Teléfono: </Typography.Text>0999999999\r\n                          </Typography.Paragraph>\r\n                          <Dragger>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                              <anticons.InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Cargar comprobante</p>\r\n                            <p className=\"ant-upload-hint\">\r\n                              Adjunta tu comprobante de transferencia\r\n                            </p>\r\n                          </Dragger><br />\r\n                          <Button type='primary' onClick={() => Invertir(inversion.oinId)} disabled={inversionEnviada} loading={isCalculando || isInvertir}>Confirmar Inversión</Button>\r\n                        </div>\r\n                        <Alert\r\n                          description={\r\n                            <div style={{ textAlign: 'justify' }}>\r\n                              Esta cuenta está a nombre del emprendedor, sin embargo, es administrada por CredKlub quien impide el acceso a los fondos hasta que se complete el total solicitado y se firmen los documentos de respaldo.\r\n                            </div>\r\n                          }\r\n                          type=\"info\"\r\n                          showIcon\r\n                        /><br />\r\n                        <Typography.Paragraph>\r\n                          <Typography.Text type='secondary' italic>\r\n                            CredKlub se encarga de conectar a emprendedores con inversionistas.\r\n                            <br />CredKlub no se responsabiliza por el pago de los créditos concedidos a los solicitantes.\r\n                          </Typography.Text>\r\n                        </Typography.Paragraph>\r\n                      </>\r\n                      : paso === 4 ?\r\n                        <div className='steps-content' style={{ textAlign: 'center' }}>\r\n                          {inversionEnviada === true && <Result\r\n                            status=\"success\"\r\n                            title=\"Inversión enviada existosamente\"\r\n                            subTitle=\"Inversión enviada existosamente\"\r\n                            extra={[]}\r\n                          />\r\n                          }\r\n                        </div>\r\n                        : <></>\r\n            }\r\n            <Row gutter={[10, 10]} justify='center'>\r\n              <Col>\r\n                <Button disabled={!(paso > 0) || inversionEnviada} onClick={() => anteriorPaso()}>Anterior</Button>\r\n              </Col>\r\n              <Col>\r\n                <Button disabled={!(paso < (pasos.length - 2)) || inversionEnviada} onClick={() => siguientePaso()}>Siguiente</Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst comparisonFn = function (prevProps, nextProps) {\r\n  return (prevProps.location.pathname === nextProps.location.pathname) && (prevProps.colorMode === nextProps.colorMode);\r\n};\r\n\r\nexport default React.memo(Inversion, comparisonFn);","import { Typography } from \"antd\"\r\nexport const getOrigenes = () =>\r\n    [\r\n        {\r\n            id: 1,\r\n            value:\r\n                <Typography.Paragraph>\r\n                    <Typography.Text strong>Declaro que los recursos utilizados</Typography.Text> descritos para la operación de financiamiento colaborativo con interés a plazo fijo, utilizando la plataforma virtual de CredKlub <Typography.Text strong> proviene de actividades lícitas</Typography.Text>, de conformidad con la normatividad Ecuatoriana.\r\n                </Typography.Paragraph>\r\n        },\r\n        {\r\n            id: 2,\r\n            value:\r\n                <Typography.Paragraph>\r\n                    Que <Typography.Text strong>todas las actividades e ingresos</Typography.Text> que se perciben provienen de actividades licitas.\r\n                </Typography.Paragraph>\r\n        },\r\n        {\r\n            id: 3,\r\n            value:\r\n                <Typography.Paragraph>\r\n                    Que <Typography.Text strong>no me encuentro</Typography.Text> en ninguna lista de reporte internacional o bloqueado por actividades de <Typography.Text strong>narcotráfico, lavado de activos, o delitos asociados al turismo sexual en menores de edad.</Typography.Text> Que en nuestra contra <Typography.Text strong>no se existe ningún proceso judicial</Typography.Text> en instancias nacionales o internacionales por ninguno de los aspectos anteriores.\r\n                </Typography.Paragraph>\r\n        },\r\n        {\r\n            id: 4,\r\n            value:\r\n                <Typography.Paragraph>\r\n                    Autorizo a resolver cualquier acuerdo, beneticio, subsidio, negocio o contrato celebrado utilizando la plataforma virtual de CredKlub en caso de infracción de cualquiera de los numerales contenidos en este documento <Typography.Text strong> eximiendo a CredKlub de toda responsabilidad</Typography.Text > que se derive por<Typography.Text strong> información errónea, falsa o inexacta</Typography.Text> que yo hubiere proporcionado en este u otro documento durante la operación de financiamiento colaborativo utilizando la plataforma de CredKlub, o de la violación del mismo.\r\n                </Typography.Paragraph>\r\n        },\r\n        {\r\n            id: 5,\r\n            value:\r\n                <Typography.Paragraph>\r\n                    Autorizo a CredKlub para que <Typography.Text strong>consulte mi información crediticia</Typography.Text> en las Centrales de Riesgo y ante las entidades que estime necesarias.\r\n                </Typography.Paragraph>\r\n        }\r\n    ]","import React from 'react'\r\n\r\nconst Invertir = () => {\r\n  return (\r\n    <div className=\"layout-dashboard\">\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"notification\">\r\n            <h3>Invertir</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Invertir","import React from 'react'\r\n\r\nconst Reportes = () => {\r\n  return (\r\n    <div>Reportes</div>\r\n  )\r\n}\r\n\r\nexport default Reportes","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport Inversionista from '../inversionista/Inversionista'\r\n\r\nconst MiCuenta = () => {\r\n  const navigate = useHistory()\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  return (\r\n    <>\r\n      {\r\n        <Inversionista inversionista={{ invId: id }} navigate={navigate} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MiCuenta","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl } from \"./../utils/urls\"\r\n\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport UsuarioService from '../../service/UsuarioService'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/usuario/${e.key}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Identificación',\r\n      dataIndex: 'documento'\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Teléfono',\r\n      dataIndex: 'telefono',\r\n      responsive: ['xl']\r\n    },\r\n    // {\r\n    //   title: 'Tipo',\r\n    //   dataIndex: 'perId',\r\n    //   render: (text) => text.perNombre\r\n    // },\r\n    // {\r\n    //   title: 'Estado',\r\n    //   dataIndex: 'estado',\r\n    //   render: (text) => text.catNombre\r\n    // }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          let filtros = {\r\n          }\r\n          if (documento) {\r\n            filtros = { ...filtros, documento }\r\n          }\r\n          if (email) {\r\n            filtros = { ...filtros, email }\r\n          }\r\n          if (nombres) {\r\n            filtros = { ...filtros, nombres }\r\n          }\r\n          if (estado !== null) {\r\n            filtros = { ...filtros, estado }\r\n          }\r\n          const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n          if (data) {\r\n            const _usuarios = data.listObject[0].map(u => ({ ...u, unique: { key: u.usuId, label: `${u.nombres} ${u.apellidos}` } }))\r\n            setUsuarios(_usuarios)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener los usuarios\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los usuarios\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate, documento, email, nombres, estado])\r\n\r\n  const fetchUsuarios = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Usuarios\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Identificación\">\r\n              <Input label='Identificación' type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Nombres\">\r\n              <Input label='Nombres' type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Email\">\r\n              <Input label='Email' type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Estado\">\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                <Radio value={true}>Activo</Radio>\r\n                <Radio value={false}>Inactivo</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='center'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Button type=\"primary\" onClick={fetchUsuarios} icon={<anticons.SearchOutlined />} loading={isLoading} disabled={isLoading}>Consultar</Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, message } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport CatalogoService from './../../service/CatalogoService'\r\n\r\nimport md5 from 'md5'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst catalogoService = new CatalogoService()\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [estados, setEstados] = useState([])\r\n  const [tiposIdentificacion, setTiposIdentificacion] = useState([])\r\n  const [usuario, setUsuario] = useState({})\r\n  const [error, setError] = useState(null)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n\r\n        catalogoService.getPorPadre({ navigate, catalogo: { catNombre: 'ESTADOS' } }).then(r => {\r\n          const { data } = r\r\n          setEstados(data.listObject[0])\r\n        })\r\n\r\n        catalogoService.getTiposIdentificacion(navigate).then(r => {\r\n          const { data } = r\r\n          setTiposIdentificacion(data.listObject[0])\r\n        })\r\n\r\n        try {\r\n          const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n          if (data) {\r\n            setUsuario({ ...data.listObject[0], password: '' })\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener el usuario\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          const { response } = error\r\n          setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el usuario\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate, id])\r\n\r\n  const onChange = (e) => {\r\n    setUsuario({ ...usuario, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangeEstado = (v, o) => {\r\n    setUsuario({ ...usuario, blnEstado: { catId: v, catValor: o.children } })\r\n  }\r\n\r\n  const onChangeTipoIdentificacion = (v, o) => {\r\n    setUsuario({ ...usuario, tipoDocumento: v })\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setError('')\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario: { ...usuario, password: md5(usuario.password) } })\r\n      setIsSaving(false)\r\n      message.success('Usuario guardado correctamente')\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"No pudimos hacer la solicitud para guardar el usuario\")\r\n    }\r\n  }\r\n\r\n  const renderEstado = e => <Option key={e.catId} value={e.catId}>{e.catNombre}</Option>\r\n  const renderCatalogoValor = e => <Option key={e.catValor} value={e.catValor}>{e.catNombre}</Option>\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/usuarios'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/usuarios'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Gestión de Usuario\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Espere un momento...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Identificación\">\r\n                  <Input id=\"documento\" name=\"documento\" label='Identificación' type='text' value={usuario.documento} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Tipo de Identificación\">\r\n                  <Select defaultValue={usuario.tipoDocumento} value={usuario.tipoDocumento} onChange={onChangeTipoIdentificacion}>\r\n                    {\r\n                      tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Nombres\">\r\n                  <Input id=\"nombres\" name=\"nombres\" label='Nombres' type='text' value={usuario.nombres} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Apellidos\">\r\n                  <Input id=\"apellidos\" name=\"apellidos\" label='Apellidos' type='text' value={usuario.apellidos} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Dirección\">\r\n                  <Input id=\"direccion\" name=\"direccion\" label='Dirección' type='text' value={usuario.direccion} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Email\">\r\n                  <Input id=\"email\" name=\"email\" label='Email' type='text' value={usuario.email} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Teléfono\">\r\n                  <Input id=\"telefono\" name=\"telefono\" label='Teléfono' type='text' value={usuario.telefono} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Login\">\r\n                  <Input id=\"login\" name=\"login\" label='Login' type='text' value={usuario.login} onChange={onChange} disabled />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Contraseña\">\r\n                  <Input.Password id=\"password\" name=\"password\" label='Contraseña' value={usuario.password} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n             <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Estado\">\r\n                  <Select\r\n                    defaultValue={usuario.estado.catValor}\r\n                    value={usuario.estado.catValor}\r\n                    onChange={onChangeEstado}\r\n                  >\r\n                    {\r\n                      estados && estados.map(e => renderEstado(e))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item>\r\n              <Button type=\"primary\" onClick={(e) => guardar(e)} disabled={isSaving}\r\n                loading={isSaving}\r\n              >\r\n                {isSaving ? 'Guardando...' : 'Guardar'}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Radio } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport CatalogoService from '../../service/CatalogoService'\r\n\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Catalogos = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [catalogos, setCatalogos] = useState([])\r\n  const [catalogosSeleccionados, setCatalogosSeleccionados] = useState([])\r\n  const [catalogo, setCatalogo] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [catalogoAbierto, setCatalogoAbierto] = useState(false)\r\n  const [formCatalogo] = Form.useForm()\r\n\r\n  const [nombre, setNombre] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/catalogo/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Descripción',\r\n      dataIndex: 'catDescripcion',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Estado',\r\n      dataIndex: 'catEstado',\r\n      render: (e) => <> {e ? 'Habilitado' : 'Deshabilitado'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setCatalogosSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangeCatalogo = (e) => {\r\n    setCatalogo({ ...catalogo, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      let filtros = {}\r\n      if (nombre) {\r\n        filtros = { ...filtros, catNombre: nombre }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, catEstado: estado }\r\n      }\r\n      catalogoService\r\n        .getsFiltro({ navigate, filtros })\r\n        .then(response => {\r\n          setIsLoading(false)\r\n          const { data } = response\r\n          if (data) {\r\n            const _catalogos = data.listObject[0].filter(c => c.catPadre === undefined).map(c => ({ ...c, unique: { key: c.catId, label: c.catNombre } }))\r\n            setCatalogos(_catalogos)\r\n            setError(null)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener los catálogos\")\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setIsLoading(false)\r\n          const { response } = error\r\n          setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el catálogo\")\r\n        })\r\n    }\r\n  })\r\n\r\n  const fetchCatalogos = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoCatalogo = () => ({\r\n    catDescripcion: \"\",\r\n    catEstado: true,\r\n    catNombre: \"\",\r\n    catValor: \"\"\r\n  })\r\n\r\n  const abrirCatalogo = (c) => {\r\n    setCatalogo({\r\n      ...c\r\n    })\r\n    setCatalogoAbierto(true);\r\n  }\r\n\r\n  const cerrarCatalogo = () => {\r\n    setCatalogoAbierto(false);\r\n  };\r\n\r\n  const guardarCatalogo = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await catalogoService.set({ navigate, catalogo })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setCatalogo(data.listObject[0])\r\n        message.success('Catálogo guardado correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para guardar el catálogo\")\r\n    }\r\n  }\r\n\r\n  const eliminarCatalogos = (e) => {\r\n    const requests = []\r\n    catalogosSeleccionados.forEach(c => {\r\n      requests.push(catalogoService.del({ navigate, catalogo: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setCatalogosSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar los catálogos: ${msgError}`)\r\n\r\n      })\r\n  }\r\n\r\n  const eliminarCatalogo = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await catalogoService.del({ navigate, catalogo })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Catálogo eliminado correctamente')\r\n        cerrarCatalogo()\r\n      } else {\r\n        message.error('No fue posible eliminar el catálogo')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el catálogo\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Catálogos\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirCatalogo(getNuevoCatalogo())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                catalogosSeleccionados && catalogosSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar los catálogos seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarCatalogos()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\" disabled={isDeleting}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchCatalogos} loading={isLoading} icon={<anticons.SearchOutlined />}>Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Nombre\">\r\n              <Input label='Nombre' type='text' value={nombre} onChange={(e) => setNombre(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Estado\">\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                <Radio value={true}>Activo</Radio>\r\n                <Radio value={false}>Inactivo</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='catId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={catalogos}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Catálogo\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarCatalogo}\r\n        open={catalogoAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formCatalogo}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"catNombre\" name=\"catNombre\" label='Nombre' type='text' value={catalogo.catNombre} onChange={onChangeCatalogo} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n              <Form.Item label=\"Valor\">\r\n                <Input id=\"catValor\" name=\"catValor\" label='Valor' type='text' value={catalogo.catValor} onChange={onChangeCatalogo} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Descripción\">\r\n                <Input id=\"catDescripcion\" name=\"catDescripcion\" label='Descripción' type='text' value={catalogo.catDescripcion} onChange={onChangeCatalogo} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='catEstado' name='catEstado' onChange={onChangeCatalogo} checked={catalogo.catEstado}>\r\n                  {\r\n                    catalogo.catEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarCatalogo(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    catalogo && catalogo.catId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar el catálogo?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarCatalogo()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Catalogos","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Table, Checkbox, Spin, Typography, Divider, message, Popconfirm, Drawer, Space } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport CatalogoService from '../../service/CatalogoService'\r\n\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Catalogo = () => {\r\n  const navigate = useHistory()\r\n  const { id, nombre } = useParams()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [catalogo, setCatalogo] = useState({})\r\n  const [subCatalogo, setSubCatalogo] = useState({})\r\n  const [catalogos, setCatalogos] = useState([])\r\n  const [error, setError] = useState(null)\r\n  const [subCatalogoAbierto, setSubCatalogoAbierto] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [formSubCatalogo] = Form.useForm()\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Acciones',\r\n      dataIndex: 'unique',\r\n      render: (_, record) =>\r\n        catalogos.length >= 1 ? (\r\n          <>\r\n            <Button type='link' icon={<anticons.EditFilled />} onClick={() => abrirSubCatalogo(record)}></Button>\r\n            <Popconfirm title=\"¿Seguro(a) que desea eliminar el catálogo?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => quitarSubCatalogo(record)}\r\n              okButtonProps={{\r\n                loading: isDeleting,\r\n              }}\r\n            >\r\n              <Button type='link' icon={<anticons.DeleteFilled />} danger></Button>\r\n            </Popconfirm>\r\n          </>\r\n        ) : <></>\r\n    },\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'catNombre'\r\n    },\r\n    {\r\n      title: 'Estado',\r\n      dataIndex: 'catEstado',\r\n      render: (e) => <> {e ? 'Habilitado' : 'Deshabilitado'} </>\r\n    }\r\n  ]\r\n\r\n  const getNuevoSubCatalogo = () => ({\r\n    catDescripcion: \"\",\r\n    catEstado: true,\r\n    catNombre: \"\",\r\n    catValor: \"\"\r\n  })\r\n\r\n  const abrirSubCatalogo = (c) => {\r\n    setSubCatalogo({\r\n      ...c, catIdPadre: id,\r\n    })\r\n    setSubCatalogoAbierto(true);\r\n  }\r\n\r\n  const cerrarSubCatalogo = () => {\r\n    setSubCatalogoAbierto(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      catalogoService\r\n        .get({ navigate, catalogo: { catId: id } })\r\n        .then(response => {\r\n          const { data } = response\r\n          if (data) {\r\n            setCatalogo(data.listObject[0])\r\n\r\n            setError(null)\r\n            setIsLoading(false)\r\n\r\n            catalogoService\r\n              .getPorPadre({ navigate, catalogo: { catNombre: nombre } })\r\n              .then(response => {\r\n                const { data } = response\r\n                if (data) {\r\n                  const _catalogos = data.listObject[0].map(c => ({ ...c, unique: { key: c.catId, label: c.catNombre } }))\r\n                  setCatalogos(_catalogos)\r\n                  setError(null)\r\n                  setIsLoading(false)\r\n                } else {\r\n                  setIsLoading(false)\r\n                  setError(\"Hubo un error al obtener los catalogos\")\r\n                }\r\n              })\r\n              .catch(error => {\r\n                setIsLoading(false)\r\n                setCatalogos([])\r\n                const { response } = error\r\n                if ((!response.data[0].messageCode === 1002 && response.data[0].messageText === 'response.data[0].messageText')) {\r\n                  setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener los catálogos\")\r\n                }\r\n              })\r\n\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener el catálogo\")\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setIsLoading(false)\r\n          const { response } = error\r\n          setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el catálogo\")\r\n        })\r\n    }\r\n  })\r\n\r\n  const onChange = (e) => {\r\n    setCatalogo({ ...catalogo, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangeSubCatalogo = (e) => {\r\n    setSubCatalogo({ ...subCatalogo, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await catalogoService.set({ navigate, catalogo })\r\n      setIsSaving(false)\r\n      const catalogoActualizado = data.listObject[0]\r\n      setCatalogo(catalogoActualizado)\r\n      message.success('Catálogo guardado correctamente')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"No pudimos hacer la solicitud para guardar el catalogo\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await catalogoService.del({ navigate, catalogo })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Catálogo eliminado')\r\n        navigate.push('/catalogos')\r\n      } else {\r\n        message.error('No fue posible eliminar el catálogo')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el catálogo\")\r\n    }\r\n  }\r\n\r\n  const guardarSubCatalogo = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await catalogoService.set({ navigate, catalogo: { ...subCatalogo } })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setSubCatalogo(data.listObject[0])\r\n        message.success('Catálogo guardado correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para guardar el catálogo\")\r\n    }\r\n  }\r\n\r\n  const eliminarSubCatalogo = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await catalogoService.del({ navigate, catalogo: subCatalogo })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Catálogo eliminado correctamente')\r\n        cerrarSubCatalogo()\r\n      } else {\r\n        message.error('No fue posible eliminar el catálogo')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el catálogo\")\r\n    }\r\n  }\r\n\r\n  const quitarSubCatalogo = async (c) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await catalogoService.del({ navigate, catalogo: { ...c } })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Catálogo eliminado correctamente')\r\n        cerrarSubCatalogo()\r\n      } else {\r\n        message.error('No fue posible eliminar el catálogo')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el catálogo\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/catalogos'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/catalogos'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {\r\n              catalogo && catalogo.catNombre\r\n            }\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Espere un momento...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Nombre\">\r\n                  <Input id=\"catNombre\" name=\"catNombre\" label='Nombre' type='text' value={catalogo.catNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                <Form.Item label=\"Valor\">\r\n                  <Input id=\"catValor\" name=\"catValor\" label='Valor' type='text' value={catalogo.catValor} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Descripción\">\r\n                  <Input id=\"catDescripcion\" name=\"catDescripcion\" label='Descripción' type='text' value={catalogo.catDescripcion} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Estado\">\r\n                  <Checkbox id='catEstado' name='catEstado' onChange={onChange} checked={catalogo.catEstado}>\r\n                    {\r\n                      catalogo.catEstado ? 'Habilitado' : 'Deshabilitado'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Button type='default' onClick={(e) => abrirSubCatalogo(getNuevoSubCatalogo())} icon={<anticons.PlusOutlined />}>\r\n                  Agregar\r\n                </Button>\r\n              </Col>\r\n            </Row><br />\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                {\r\n                  catalogos && catalogos.length > 0 &&\r\n                  <Table\r\n                    rowKey='catId'\r\n                    columns={columnas}\r\n                    dataSource={catalogos}\r\n                    loading={isLoading}\r\n                    size='small'\r\n                  />\r\n                }\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                      icon={<anticons.SaveFilled />}\r\n                    >\r\n                      {isSaving ? 'Guardando' : 'Guardar'}\r\n                    </Button>\r\n                    {\r\n                      catalogos && catalogos.length <= 0 &&\r\n                      <Popconfirm title=\"¿Seguro(a) que desea eliminar el catálogo?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                        okButtonProps={{\r\n                          loading: isDeleting,\r\n                        }}\r\n                      >\r\n                        <Button type=\"danger\"\r\n                          disabled={isDeleting || isSaving}\r\n                          loading={isDeleting}\r\n                          icon={<anticons.DeleteFilled />}\r\n                        >\r\n                          {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                        </Button>\r\n                      </Popconfirm>\r\n                    }\r\n\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n      <Drawer\r\n        title=\"Catálogo\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarSubCatalogo}\r\n        open={subCatalogoAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formSubCatalogo}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"catNombre\" name=\"catNombre\" label='Nombre' type='text' value={subCatalogo.catNombre} onChange={onChangeSubCatalogo} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n              <Form.Item label=\"Valor\">\r\n                <Input id=\"catValor\" name=\"catValor\" label='Valor' type='text' value={subCatalogo.catValor} onChange={onChangeSubCatalogo} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Descripción\">\r\n                <Input id=\"catDescripcion\" name=\"catDescripcion\" label='Descripción' type='text' value={subCatalogo.catDescripcion} onChange={onChangeSubCatalogo} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='catEstado' name='catEstado' onChange={onChangeSubCatalogo} checked={subCatalogo.catEstado}>\r\n                  {\r\n                    subCatalogo.catEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarSubCatalogo(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    subCatalogo && subCatalogo.catId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar el catálogo?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarSubCatalogo()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default Catalogo","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport OpcionService from './../../service/OpcionService'\r\n\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject[0].filter(o => o.opcNivel === 1).map(o => ({ title: o.opcNombre, key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`, children: o.opcHijos.map(o => ({ title: o.opcNombre, key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}` })) }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener los opciones\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los opciones\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    // const opcionPadre = nodo.key ? { opcIdPadre: nodo.key.split('_')[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n        // ...opcionPadre,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(\"Hubo un error al obtener la opción\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener la opción\")\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para guardar la opción\")\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar la opción\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n// import AxiosInstance from './../../utils/AxiosInstance'\r\n// import { getPerfilesUrl, getEliminarPerfilUrl, getActualizarPerfilUrl, getInsertarPerfilUrl } from './../../utils/urls'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Nivel',\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Estado',\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? 'Habilitado' : 'Deshabilitado'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject[0].map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"Hubo un error al obtener los perfiles\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los perfiles\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success('Perfil guardado correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para guardar el perfil\")\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar los perfiles: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Perfil eliminado correctamente')\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error('No fue posible eliminar el perfil')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el perfil\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Perfiles\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar los perfiles seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading} icon={<anticons.SearchOutlined />}>Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Perfil\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nivel\">\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" label='Nivel' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='perEstado' name='perEstado' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar el perfil?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre Opción',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Lectura',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura}/>\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Escritura',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({  navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`Opción ${perfilOpcionActualizado.pfoOpcId.opcNombre} actualizada correctamente`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"No pudimos hacer la solicitud para guardar la opción del perfil\")\r\n    }\r\n  }\r\n  \r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setIsLoading(false)\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setIsLoading(false)\r\n        setError(\"Hubo un error al obtener el perfil\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el perfil\")\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n        \r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject[0].filter(o => o.opcNivel === 1)\r\n              .map((o) => ({\r\n                key: `${o.opcId}`,\r\n                opcNombre: o.opcNombre,\r\n                ..._opcionesPerfil.filter((op) => op.idOpcion === o.opcId)[0],\r\n                children: o.opcHijos.map((o) => ({\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter((op) => op.idOpcion === o.opcId)[0]\r\n                }))\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(\"Hubo un error al obtener los opciones\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(\"No pudimos hacer la solicitud para obtener los opciones\")\r\n        }\r\n\r\n      } else {\r\n        setIsLoadingOpciones(false)\r\n        setError(\"Hubo un error al obtener las opciones del perfil\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpciones(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener las opciones del perfil\")\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success('Perfil guardado correctamente')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"No pudimos hacer la solicitud para guardar el perfil\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Perfil eliminado')\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error('No fue posible eliminar el perfil')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para eliminar el perfil\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Perfil {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Espere un momento...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Nombre\">\r\n                  <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Nivel\">\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" label='Nivel' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Estado\">\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? 'Habilitado' : 'Deshabilitado'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>Opciones</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                      icon={<anticons.SaveFilled />}\r\n                    >\r\n                      {isSaving ? 'Guardando' : 'Guardar'}\r\n                    </Button>\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar el perfil?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Row, Col, Typography } from 'antd'\r\n\r\nconst Titulo = (props) => {\r\n    const { titulo } = props\r\n    return (\r\n        <Row>\r\n            <Col span={24}>\r\n                <Row justify='start'>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        {\r\n                            titulo\r\n                        }\r\n                    </Typography.Title>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nTitulo.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Titulo","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { getAutenticarUrl, getAutorizarUrl, getRegistrarUrl, getRecuperarPasswordUrl, getChangePasswordUrl, getRegistrarPersonaUrl, updatePassword, recoveryPassword } from \"../utils/urls\"\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales)\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales)\r\n    }\r\n    register = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRegistrarUrl(), datos)\r\n    }\r\n    registerPersona = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRegistrarPersonaUrl(), datos)\r\n    }\r\n    recoverPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRecuperarPasswordUrl(), datos)\r\n    }\r\n    resetPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(getRecuperarPasswordUrl(), datos)\r\n    }\r\n    changePassword = (props) => {\r\n        const { navigate, datos } = props\r\n        return AxiosInstance(navigate).post(getChangePasswordUrl(), datos)\r\n    }\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos)\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Divider } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport Titulo from './../Titulo'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from './../../service/CuentaService'\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ChangePassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [form] = Form.useForm();\r\n\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\")\r\n\r\n    const change = async values => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await cuentaService.changePassword({ navigate, datos: { password: md5(values.password), newPassword: md5(values.newPassword), newPasswordConfirm: md5(values.newPasswordConfirm) } })\r\n            setIsLoading(false)\r\n            setError('Su contraseña fue modificada. Ingrese nuevamente.')\r\n        }\r\n        catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(\r\n                    \"El recurso solicitado no esta disponible o no existe\"\r\n                )\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Titulo titulo=\"Cambiar Contraseña\" />\r\n            <Divider></Divider>\r\n            <Row justify='center' align='middle'>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={6}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                form={form}\r\n                                onFinish={change}\r\n                            >\r\n                                <Form.Item label=\"Actual Contraseña\"\r\n                                    name='password'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Ingrese la actual contraseña',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password autoComplete='' />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Nueva Contraseña\"\r\n                                    name='newPassword'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Ingrese la nueva contraseña',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password autoComplete='' onChange={e => setNewPassword(e.target.value)} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Confirme la Nueva Contraseña\"\r\n                                    name='newPasswordConfirm'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Confirme la nueva contraseña',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password autoComplete='' onChange={e => setNewPasswordConfirm(e.target.value)} />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <PasswordChecklist\r\n                                        rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                        minLength={8}\r\n                                        value={newPassword}\r\n                                        valueAgain={newPasswordConfirm}\r\n                                        messages={{\r\n                                            minLength: \"La contraseña tiene más de 8 caracteres.\",\r\n                                            specialChar: \"La contraseña tiene caracteres especiales.\",\r\n                                            number: \"La contraseña tiene un número.\",\r\n                                            capital: \"La contraseña tiene una letra mayúscula.\",\r\n                                            match: \"Las contraseñas coinciden.\",\r\n                                        }}\r\n                                        onChange={(isValid) => { }}\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Button type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Cambiar Contraseña</Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nexport const Courses = () => {\r\n    const navigate = useHistory()\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={8}>\r\n                <div className='card'>\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text type='secondary'>\r\n                                {numPostulantes} applicants\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                View\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        const trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(\"Hubo un error al obtener las ofertas de invesión\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener las ofertas de invesión\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"mgeCard\">\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-4\">\r\n                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                    Training\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                <Space>\r\n                                    <Button\r\n                                        type='default'\r\n                                        loading={isLoading}\r\n                                        disabled={isLoading}\r\n                                        onClick={() => {\r\n                                            fetchData()\r\n                                        }}>Refresh</Button>\r\n                                    <Button\r\n                                        type='primary'\r\n                                        disabled={isLoading}\r\n                                        onClick={() => {\r\n                                            navigate.push('/trainingnew')\r\n                                        }}>New Training</Button>\r\n                                </Space>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='center'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\";\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const headers = {}\r\n        const axiosInstance = axios.create({\r\n            headers\r\n        })\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, List, Alert } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst baseTraining = {\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\n\r\nexport const Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [error, setError] = useState('')\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n      onChange={e => setSelectedModality(catId)}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 20px',\r\n          borderRadius: '15px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: 'The email has already been added.'\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 3000)\r\n      return\r\n    }\r\n    setPostulants([...postulants.filter(p => p !== postulant), postulant])\r\n    setMessage(`Email successfully added`)\r\n    setMessage({\r\n      type: 'success',\r\n      message: 'Email successfully added.'\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 3000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p.posEmail !== email)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      ...values,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        setError(null)\r\n        // Asignar cursos\r\n        const requests = []\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`It was not possible to add the applicant: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        setError(\"An error occurred.\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      New Training\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >Save Draft</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                      onClick={() => {\r\n                        toast.success('Training published')\r\n                      }}\r\n                    >Publish</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label=\"Country\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select country',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select name='idPais'>\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {/* <Col span={16}>\r\n                <Form.Item\r\n                  name='name'\r\n                  label=\"Training name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete training name',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col> */}\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label=\"Modality\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select modality',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label=\"Start Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select start date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label=\"End Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select end date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row >\r\n            <Form layout='vertical' style={{ width: '100%' }}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label='Courses'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select courses',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Form>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form layout='vertical' style={{ width: '100%' }}\r\n              initialValues={{\r\n                postulant: ''\r\n              }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label='Applicants emails'\r\n                  extra='Press enter to add email'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete applicants',\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: 'Email is not valid'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setError(null)\r\n                setCourse(data.listObject[0])\r\n            } else {\r\n                setError(\"Hubo un error al obtener el entrenamiento\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"No pudimos hacer la solicitud para obtener el entrenamiento\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (e) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        informeList && informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length > 0 ?\r\n                                                            <Image src={`./../../assets/${informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                            :\r\n                                                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                    }\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        informeList && informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length > 0 ?\r\n                                                            <Image src={`./../../assets/${informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                            :\r\n                                                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                    }\r\n                                                </div>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        certificadoList && certificadoList.filter(c => c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                            <Image src={`./../../assets/${certificadoList.filter(c => c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                            :\r\n                                                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                    }\r\n                                                </div>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import axios from \"axios\"\r\nimport { getToken } from \"./Utils\"\r\n\r\n// responseType: 'arraybuffer'\r\nconst headers = {\r\n}\r\n\r\nconst AxiosInstanceBlob = (navigate) => {\r\n\r\n    const axiosInstanceBlob = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstanceBlob.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                // navigate.push('/login')\r\n            }\r\n            config.headers[\"Authorization\"] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    // Agregar una respuesta al interceptor\r\n    axiosInstanceBlob.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                // localStorage.removeItem('mgeCatalogos')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    // localStorage.removeItem('mgeCatalogos')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n\r\n    return axiosInstanceBlob\r\n\r\n}\r\n\r\nexport default AxiosInstanceBlob","import AxiosInstance from '../utils/AxiosInstance'\r\nimport AxiosInstanceBlob from '../utils/AxiosInstanceBlob'\r\nimport { downloadFinalReport, downloadInformByName, downloadWorkplan, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    downloadWorkplan = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstanceBlob(navigate).get(downloadWorkplan())\r\n    }\r\n    downloadFinalReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(downloadFinalReport())\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    download = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, DatePicker, Typography, Space, Spin, InputNumber, Badge, Popconfirm, Tooltip, Descriptions } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nimport { getFormatoFecha } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst trainingService = new TrainingService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n\r\n\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, evidenciaList }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Typography.Text\r\n            strong\r\n            style={{\r\n              fontWeight: 'normal',\r\n            }}\r\n          >\r\n            {infNombre}\r\n          </Typography.Text>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Tooltip title={infEstado.catNombre}>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Tooltip>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 2,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n          }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n    </Row>\r\n\r\n  const downloadCertificate = async (cerNombre, cerRuta) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        cerNombre,\r\n        cerRuta\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={8} lg={8} xl={8} xxl={8}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Title level={5}>\r\n                Certificate\r\n              </Typography.Title>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={12} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n          <Typography.Title level={5}>\r\n            Expires: {cerFechaCad.substring(0, 10)}\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col xs={12} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n              >Download</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      toast.success('Attendance successfully saved')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendCertificate = async ({ cerId }) => {\r\n    setIsSavingInform(true)\r\n    try {\r\n      const certificate = { cerId }\r\n      const { data } = await certificateService.send({ navigate, certificate })\r\n      toast.success('Certificate sent successfully')\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const generate = async () => {\r\n    setIsSavingInform(true)\r\n    try {\r\n      const course = {\r\n        idCurso: courses[0].curId,\r\n        idPostulante: postulant.posId\r\n      }\r\n      const { data } = await certificateService.generate({ navigate, course })\r\n      const certificate = data.listObject[0]\r\n      toast.success('Certificate generated successfully')\r\n      sendCertificate(certificate)\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId, infEstado }) => {\r\n    setIsSavingInform(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      toast.success('Email sent successfully')\r\n      if (infEstado.catValor === 'EST_INF_APR') {\r\n        generate()\r\n      } else {\r\n        setLoad(true)\r\n      }\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'PLAN_TRABAJO' ? commentWorkplan : catValor === 'INFORME_FINAL' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail(informe)\r\n      // setLoad(true)\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = {\r\n      entId: idTraining\r\n    }\r\n    try {\r\n      const { data } = await trainingService.getById({ navigate, training })\r\n      if (data) {\r\n        setError(null)\r\n        const courses = data.listObject[0].cursoList\r\n        const postulant = data.listObject[0].postulanteList.filter(p => p.posId === parseInt(id))[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        setError(\"An error occurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                      {/* <Space>\r\n                        <Button type='primary'>Edit</Button>\r\n                      </Space> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          <Image preview src='./assets/user.png' />\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Role:\r\n                            </Typography.Text>\r\n                            <br />Applicant\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Invited by:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <Typography.Text type='danger'> Agregar este campo a servicio</Typography.Text>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label=\"First Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label=\"Last Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label=\"Sex\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label=\"Date Birth\"\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label=\"Country\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label=\"City\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label=\"Country Code\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label=\"Phone number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label=\"ID Number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label=\"Currenty Working\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label=\"Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label=\"Additional Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Attendance\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >Save</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            {\r\n                              postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                            }\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Workplan\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <Button type='default'\r\n                                onClick={() => downloadInform(postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV')[0] || {})}\r\n                                loading={isDownloading}\r\n                                disabled={\r\n                                  isDownloading\r\n                                  || postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                }\r\n                              >\r\n                                Download\r\n                              </Button>\r\n                              {/* <Button type='primary'\r\n                                onClick={() => downloadInform(postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV')[0] || {})}\r\n                                loading={isDownloading}\r\n                                disabled={\r\n                                  isDownloading\r\n                                  || postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                }\r\n                              >View</Button>\r\n                              <Button type='text'>\r\n                                <anticons.ArrowUpOutlined />\r\n                              </Button> */}\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col span={24}>\r\n                        <Row style={{ padding: '10px' }}>\r\n                          <Col span={24}>\r\n                            {\r\n                              postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').map(w => renderInform(w))\r\n                            }\r\n                          </Col>\r\n                          <Col span={24} style={{ padding: '10px 0' }}>\r\n                            <Typography.Text>\r\n                              Comments:\r\n                            </Typography.Text>\r\n                            <Input.TextArea\r\n                              disabled={\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                              }\r\n                              value={commentWorkplan}\r\n                              onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                            />\r\n                          </Col>\r\n                          <Col span={24}>\r\n                            <Row justify='end'\r\n                              style={{ padding: '10px 0 0 0' }}\r\n                              gutter={10}\r\n                            >\r\n                              <Col>\r\n                                <Popconfirm title=\"Are you sure to approve the workplan?\" okText=\"Yes, approve\" cancelText=\"No\" onConfirm={() => setInform(postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV')[0], getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0])}\r\n                                  okButtonProps={{\r\n                                    loading: isSavingInform,\r\n                                  }}\r\n                                  disabled={\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                  }\r\n                                >\r\n                                  <Button\r\n                                    type='primary'\r\n                                    loading={isSavingInform}\r\n                                    disabled={\r\n                                      postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                    }\r\n                                  >Approve</Button>\r\n                                </Popconfirm>\r\n                              </Col>\r\n                              <Col>\r\n                                <Popconfirm title=\"Are you sure to reject the workplan?\" okText=\"Yes, reject\" cancelText=\"No\" onConfirm={() => setInform(postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV')[0], getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0])}\r\n                                  okButtonProps={{\r\n                                    loading: isSavingInform,\r\n                                  }}\r\n                                  disabled={\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                  }\r\n                                >\r\n                                  <Button\r\n                                    danger\r\n                                    type='primary'\r\n                                    loading={isSavingInform}\r\n                                    disabled={\r\n                                      postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                    }\r\n                                  >Reject</Button>\r\n                                </Popconfirm>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            {\r\n                              postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                            }\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Final Report\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <Button type='default'\r\n                                onClick={() => downloadInform(postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV')[0] || {})}\r\n                                loading={isDownloading}\r\n                                disabled={\r\n                                  isDownloading\r\n                                  || postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                }\r\n                              >\r\n                                Download\r\n                              </Button>\r\n                              {/* <Button type='primary'\r\n                                onClick={() => downloadInform(postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV')[0] || {})}\r\n                                loading={isDownloading}\r\n                                disabled={\r\n                                  isDownloading\r\n                                  || postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                }\r\n                              >View</Button>\r\n                              <Button type='text'>\r\n                                <anticons.ArrowUpOutlined />\r\n                              </Button> */}\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col span={24}>\r\n                        <Row style={{ padding: '10px' }}>\r\n                          <Col span={24}>\r\n                            {\r\n                              postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').map(w => renderInform(w))\r\n                            }\r\n                          </Col>\r\n                          {/* <Col span={24} style={{ padding: '10px 0' }}>\r\n                            <Typography.Text>\r\n                              Evidences:\r\n                            </Typography.Text>\r\n                            {\r\n                              postulant.evidenciaList && postulant.evidenciaList.map(e => renderEvidence(e))\r\n                            }\r\n                          </Col> */}\r\n                          <Col span={24} style={{ padding: '0 0' }}>\r\n                            <Typography.Text>\r\n                              Comments:\r\n                            </Typography.Text>\r\n                            <Input.TextArea\r\n                              disabled={\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                              }\r\n                              value={commentFinalReport}\r\n                              onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                            />\r\n                          </Col>\r\n                          <Col span={24}>\r\n                            <Row justify='end'\r\n                              style={{ padding: '10px 0 0 0' }}\r\n                              gutter={10}\r\n                            >\r\n                              <Col>\r\n                                <Popconfirm title=\"Are you sure to approve the final report?\" okText=\"Yes, approve\" cancelText=\"No\" onConfirm={() => setInform(postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV')[0], getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0])}\r\n                                  okButtonProps={{\r\n                                    loading: isSavingInform,\r\n                                  }}\r\n                                  disabled={\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                  }\r\n                                >\r\n                                  <Button\r\n                                    type='primary'\r\n                                    loading={isSavingInform}\r\n                                    disabled={\r\n                                      postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                    }\r\n                                  >Approve</Button>\r\n                                </Popconfirm>\r\n                              </Col>\r\n                              <Col>\r\n                                <Popconfirm title=\"Are you sure to reject the workplan?\" okText=\"Yes, reject\" cancelText=\"No\" onConfirm={() => setInform(postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV')[0], getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0])}\r\n                                  okButtonProps={{\r\n                                    loading: isSavingInform,\r\n                                  }}\r\n                                  disabled={\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                  }\r\n                                >\r\n                                  <Button\r\n                                    danger\r\n                                    type='primary'\r\n                                    loading={isSavingInform}\r\n                                    disabled={\r\n                                      postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' && w.infEstado.catValor === 'EST_INF_ENV').length < 1\r\n                                    }\r\n                                  >Reject</Button>\r\n                                </Popconfirm>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                          &&\r\n                          postulant.certificadoList.length > 0\r\n                          ?\r\n                          <>\r\n                            {\r\n                              postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                            }\r\n                          </>\r\n                          :\r\n                          <>\r\n                          </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs >\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React from 'react'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Input, Form } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nconst applicants = [\r\n    {\r\n        id: 1,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'ecuador.png',\r\n            name: 'Ecuador'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'minus.png'\r\n        },\r\n        finalReport: {\r\n            value: 'minus.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 2,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'mexico.png',\r\n            name: 'México'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'accept.png'\r\n        },\r\n        finalReport: {\r\n            value: 'minus.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 3,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'peru.png',\r\n            name: 'Perú'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'accept.png'\r\n        },\r\n        finalReport: {\r\n            value: 'cancel.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 4,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'venezuela.png',\r\n            name: 'Venezuela'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'cancel.png'\r\n        },\r\n        workPlan: {\r\n            value: 'minus.png'\r\n        },\r\n        finalReport: {\r\n            value: 'minus.png'\r\n        },\r\n        certificate: {\r\n            value: 'minus.png'\r\n        }\r\n    },\r\n    {\r\n        id: 5,\r\n        identification: '1234567890',\r\n        firstName: 'Camila',\r\n        lastName: 'Doe',\r\n        sex: 'Female',\r\n        dateBirth: '01/09/2023',\r\n        country: {\r\n            id: 1,\r\n            img: 'colombia.png',\r\n            name: 'Colombia'\r\n        },\r\n        city: {\r\n            id: 1,\r\n            name: 'Quito'\r\n        },\r\n        countryCode: '593',\r\n        phone: '9999999999',\r\n        currentyWorking: true,\r\n        placeWorking: 'OIT',\r\n        email: 'email1@abc.com',\r\n        role: 'Role',\r\n        attendance: {\r\n            value: 'accept.png'\r\n        },\r\n        workPlan: {\r\n            value: 'accept.png'\r\n        },\r\n        finalReport: {\r\n            value: 'accept.png'\r\n        },\r\n        certificate: {\r\n            value: 'download.png'\r\n        }\r\n    }\r\n]\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst columnas = [\r\n    {\r\n        title: '',\r\n        dataIndex: 'id',\r\n        render: (e) => <img alt='' src='./assets/women.png' width={32} height={32} />\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'firstName'\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'lastName'\r\n    },\r\n    {\r\n        title: 'Country',\r\n        dataIndex: 'country',\r\n        render: (_, { country }) => <div style={{ textAlign: 'center' }}><img alt='' src={`./assets/${country.img}`} width={32} height={32} /></div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        responsive: ['lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        dataIndex: '',\r\n        render: (_, record) => <Button type='primary' href='/#/applicants/1/1'>View</Button>\r\n    }\r\n]\r\n\r\nconst Users = () => {\r\n    return (\r\n        <>\r\n            <Row gutter={[15, 15]}>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#54873C',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={28}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#70B450',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={80}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#385A28',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={25}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        hoverable\r\n                        style={{\r\n                            background: '#636466',\r\n                            color: '#f0f0f0'\r\n                        }}\r\n                    >\r\n                        <Statistic\r\n                            title={\r\n                                <Typography.Text\r\n                                    style={{\r\n                                        color: '#ffffff'\r\n                                    }}\r\n                                >\r\n                                    Postulantes\r\n                                </Typography.Text>\r\n                            }\r\n                            value={30}\r\n                            precision={2}\r\n                            valueStyle={{\r\n                                color: '#ffffff',\r\n                            }}\r\n                            prefix={<anticons.UserOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        120 Usuarios\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item\r\n                            label='Search expression'\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type='default'>Search</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Table\r\n                        {...tableProps}\r\n                        rowKey='id'\r\n                        columns={columnas}\r\n                        dataSource={applicants}>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            {/* <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                            <Col>\r\n                                <img alt='' src='./../../assets/accept.png' height={24} width={24} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Typography.Title level={5}>\r\n                                    Attendance\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                            <Col style={{ textAlign: 'end' }}>\r\n                                <Space>\r\n                                    <Input />\r\n                                    <Button type='primary'>Save</Button>\r\n                                </Space>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\n\r\nconst User = () => {\r\n  return (\r\n    <div>User</div>\r\n  )\r\n}\r\n\r\nexport default User","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const metaData = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, \"WorkplanTemplate.docx\")\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infFechaReg.substring(0, 10)}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        {/* {\r\n                            infFechaSAprRec && <Col>\r\n                                <Typography.Title level={5}>\r\n                                    {infFechaSAprRec.substring(0, 10)}\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        } */}\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async () => {\r\n        const inform = new FormData();\r\n        fileList.forEach((file) => {\r\n            inform.append('file', file)\r\n            inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'PLAN_TRABAJO')[0].catId)\r\n            inform.append('idCurso', postulant.entId.cursoList[0].curId)\r\n            inform.append('idPostulante', postulant.posId)\r\n        });\r\n        setUploading(true)\r\n\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Upload successfully')\r\n            // setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Workplan template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    {\r\n                        postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').map(w => renderWorkplan(w))\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO')[postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO').length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                                ?\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Upload {...props}>\r\n                                            <Button icon={<anticons.UploadOutlined />}>Select File</Button>\r\n                                        </Upload>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            onClick={handleUpload}\r\n                                            disabled={fileList.length === 0}\r\n                                            loading={uploading}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                : <>\r\n                                </>\r\n                        }\r\n                    </>\r\n\r\n            }\r\n\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Upload your workplan\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Dragger {...props}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <anticons.InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                        </Dragger>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24} style={{ textAlign: 'end' }}>\r\n                    <Button type='primary'>Send</Button>\r\n                </Col>\r\n            </Row> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n\r\n        const metaData = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, \"FinalReportTemplate.docx\")\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infFechaReg.substring(0, 10)}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        {/* {\r\n                            infFechaSAprRec && <Col>\r\n                                <Typography.Title level={5}>\r\n                                    {infFechaSAprRec.substring(0, 10)}\r\n                                </Typography.Title>\r\n                            </Col>\r\n                        } */}\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const inform = new FormData();\r\n        fileList.forEach((file) => {\r\n            inform.append('file', file)\r\n            inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'INFORME_FINAL')[0].catId)\r\n            inform.append('idCurso', postulant.entId.cursoList[0].curId)\r\n            inform.append('idPostulante', postulant.posId)\r\n        });\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0].infId\r\n            sendLoadEmail(informe)\r\n            toast.success('Evidence sended successfully')\r\n            // setLoad(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Final Report template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    {\r\n                        postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'INFORME_FINAL').map(f => renderFinalReport(f))\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'PLAN_TRABAJO' &&\r\n                                w.infEstado.catValor === 'EST_INF_APR'\r\n                            ).length > 0\r\n                                &&\r\n                                (\r\n                                    postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length < 1\r\n                                    ||\r\n                                    (\r\n                                        postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL')[postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL').length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                    )\r\n                                )\r\n                                ?\r\n                                <Form\r\n                                    onFinish={handleUpload}\r\n                                    autoComplete='off'\r\n                                    layout='vertical'\r\n                                >\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Typography.Title level={5}>\r\n                                                Upload your final report\r\n                                            </Typography.Title>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='file'\r\n                                                label='File'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Upload\r\n                                                    multiple={false}\r\n                                                    {...props}\r\n                                                >\r\n                                                    <Button\r\n                                                        icon={<anticons.UploadOutlined />}\r\n                                                        disabled={\r\n                                                            fileList.length > 0\r\n                                                        }\r\n                                                    >Select File</Button>\r\n                                                </Upload>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            <Typography.Title level={5}>\r\n                                                Copy evidence link\r\n                                            </Typography.Title>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='url'\r\n                                                label='URL'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'url',\r\n                                                        warningOnly: true,\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'string',\r\n                                                        min: 6,\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={24}>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                disabled={fileList.length === 0}\r\n                                                loading={uploading}\r\n                                            >\r\n                                                {uploading ? 'Uploading' : 'Send'}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                                : <>\r\n                                </>\r\n                        }\r\n                    </>\r\n\r\n            }\r\n\r\n            {/* <Row>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Upload your final report\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Dragger {...props}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <anticons.InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                        </Dragger>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Typography.Title level={5}>\r\n                        Copy evidence link\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Form.Item>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={24} style={{ textAlign: 'end' }}>\r\n                    <Button type='primary'>Send</Button>\r\n                </Col>\r\n            </Row> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Divider, Result } from 'antd'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'INFORME_FINAL' &&\r\n                                w.infEstado.catValor === 'EST_INF_APR'\r\n                            ).length > 0\r\n                                &&\r\n                                postulant.certificadoList.length >= 0\r\n                                ?\r\n                                <>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={24} md={24} lg={24} xl={20} xxl={14}>\r\n                                            <div style={\r\n                                                {\r\n                                                    backgroundColor: '#ffffff',\r\n                                                    padding: '40px 45px',\r\n                                                    borderRadius: '15px',\r\n                                                    marginBottom: '20px'\r\n                                                }\r\n                                            }\r\n                                            >\r\n                                                <Row justify='center'\r\n                                                    style={{\r\n                                                        position: 'relative'\r\n                                                    }}>\r\n                                                    <Col span={12}>\r\n                                                        <Image src='./../../assets/logo.png' />\r\n                                                    </Col>\r\n                                                    <Col span={12}>\r\n                                                    </Col>\r\n                                                    <Col span={24} style={{ padding: '15px 40px', textAlign: 'center' }}>\r\n                                                        <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n                                                            <span className='mge-green'>\r\n                                                                {\r\n                                                                    postulant && postulant.entId &&\r\n                                                                    <>\r\n                                                                        {\r\n                                                                            `CERTIFICADO DE FACILITADOR/A DEL CURSO ${postulant.entId.cursoList[0].curNombre.catNombre}`\r\n                                                                        }\r\n                                                                    </>\r\n                                                                }\r\n                                                            </span>\r\n                                                        </Typography.Title>\r\n                                                        <Typography.Paragraph className='mge-darkGreen' strong>\r\n                                                            Otorgado a:\r\n                                                        </Typography.Paragraph>\r\n                                                    </Col>\r\n                                                    <Col span={18} style={{ padding: '0 20px 0 20px', textAlign: 'center' }}>\r\n                                                        <Typography.Paragraph className='mge-darkGreen'>\r\n                                                            <span style={{\r\n                                                                fontStyle: 'italic',\r\n                                                                fontFamily: 'cursive',\r\n                                                                fontSize: '2em',\r\n                                                                color: '#666666'\r\n                                                            }}>\r\n                                                                {\r\n                                                                    postulant && postulant.usuId &&\r\n                                                                    <>\r\n                                                                        {\r\n                                                                            `${postulant.usuId.nombres} ${postulant.usuId.apellidos}`\r\n                                                                        }\r\n                                                                    </>\r\n                                                                }\r\n                                                            </span>\r\n                                                            <Divider style={{ borderWidth: '1px', borderColor: '#385A28' }} />\r\n                                                        </Typography.Paragraph>\r\n                                                    </Col>\r\n                                                    <Col span={20} style={{ padding: '0 40px', textAlign: 'center' }}>\r\n                                                        <Typography.Paragraph className='mge-darkGreen' strong>\r\n                                                            {\r\n                                                                postulant && postulant.entId &&\r\n                                                                <>\r\n                                                                    {\r\n                                                                        `Al haber cumplido con satisfacción la aplicación del curso Enverdeciendo mi negocio del programa My Green Enterprise, desarrollado desde el ${postulant.entId.entFechaIni.substring(0, 10)} al ${postulant.entId.entFechaFin.substring(0, 10)}.`\r\n                                                                    }\r\n                                                                </>\r\n                                                            }\r\n                                                        </Typography.Paragraph>\r\n                                                    </Col>\r\n                                                    <Col span={24}>\r\n                                                        <Row justify='center'>\r\n                                                            <Col span={8} style={{ textAlign: 'center' }}>\r\n                                                                <Divider style={{ borderWidth: '1px', borderColor: '#333333', padding: '0 0', margin: '40px 0 0 0' }} />\r\n                                                                Firma\r\n                                                            </Col>\r\n                                                            <Col span={4}></Col>\r\n                                                            <Col span={8} style={{ textAlign: 'center' }}>\r\n                                                                <Divider style={{ borderWidth: '1px', borderColor: '#333333', padding: '0 0', margin: '40px 0 0 0' }} />\r\n                                                                Firma\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <div className='mgeBG'\r\n                                                        style={{\r\n                                                            position: 'absolute',\r\n                                                            bottom: '-40px',\r\n                                                            right: '-45px',\r\n                                                            width: '100%',\r\n                                                            height: '100vh',\r\n                                                            opacity: '0.1'\r\n                                                        }}\r\n                                                    >\r\n                                                        &nbsp;\r\n                                                    </div>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {/* <Row>\r\n                                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                                            <Button type='primary'>Download</Button>\r\n                                        </Col>\r\n                                    </Row> */}\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <Result\r\n                                        title=\"You will see your certificate once your final report is approved\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/finalreport')\r\n                                                }}\r\n                                            >\r\n                                                Send Final Report\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                                </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React from 'react'\r\nimport { Layout, Row, Col, Typography } from 'antd'\r\n\r\nconst Classes = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Classes\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import AxiosInstance from '../../utils/AxiosInstance'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, message, Spin, Typography, Popconfirm, List, Card, Checkbox, Image, Alert } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\nimport { sendEmailRegister } from '../../utils/urls'\r\n\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\nconst { Option } = Select\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadCourse, setLoadCourse] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isLoadingPostulant, setIsLoadingPostulant] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEnvio === true ? <><anticons.SendOutlined />&nbsp;</> : <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    setError(null)\r\n                    fetchCourses()\r\n                } else {\r\n                    setError(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    setError(null)\r\n                    fetchCourses()\r\n                } else {\r\n                    setError(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: 'The email has already been added.'\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 3000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: 'Email successfully saved.'\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 3000)\r\n                setError(null)\r\n                fetchPostulants()\r\n            } else {\r\n                setError(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: 'Email successfully deleted.'\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 3000)\r\n                setError(null)\r\n                fetchPostulants()\r\n            } else {\r\n                setError(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setError(null)\r\n                setTraining({\r\n                    ...training,\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setSelectedModality(training.entModalidad.catId)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setLoadCourse(false)\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setError(null)\r\n                setCourses(courses)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        setIsLoadingPostulant(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject\r\n                setError(null)\r\n                setPostulants(postulants)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingPostulant(false)\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        toast.success(`Training ${training.entNombre} update succesfully`)\r\n        // // const training = {\r\n        // //     ...values,\r\n        // //     idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n        // //     idUsuario: getDatosUsuario().usuarioId\r\n        // // }\r\n        // setIsSaving(true)\r\n        // // try {\r\n        // //     const { data } = await trainingService.put({ navigate, training })\r\n        // //     if (data) {\r\n        // //         setError(null)\r\n        // // Asignar cursos\r\n        // const requests = []\r\n        // if (courses.length > 0) {\r\n        //     courses.forEach(p => {\r\n        //         requests.push(courseService.put({\r\n        //             navigate, course: {\r\n        //                 \"idEntrenamiento\": training.entId,\r\n        //                 \"idNombreCurso\": p.catId\r\n        //             }\r\n        //         }))\r\n        //     });\r\n        // }\r\n        // // Asignar postulantes\r\n        // if (training.postulanteList.length > 0) {\r\n        //     training.postulanteList.filter(p => p.posId === undefined || p.posId === null).forEach(p => {\r\n        //         requests.push(postulantService.put({\r\n        //             navigate, postulant: {\r\n        //                 \"idEntrenamiento\": training.entId,\r\n        //                 \"posEmail\": p.posEmail,\r\n        //                 \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n        //             }\r\n        //         }))\r\n        //     });\r\n        // }\r\n        // if (requests.length > 0) {\r\n        //     Promise.all(requests)\r\n        //         .then((results) => {\r\n        //             toast.success(`Training ${training.entNombre} update succesfully`)\r\n        //             // navigate.push('/training')\r\n        //             setLoad(true)\r\n        //         }).catch(error => {\r\n        //             const { response } = error\r\n        //             const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        //             message.error(`It was not possible to add the applicant: ${msgError}`)\r\n        //         })\r\n        //     // } else {\r\n        //     //     toast.success(`Training ${data.listObject[0].entNombre} update succesfully`)\r\n        //     //     // navigate.push('/training')\r\n        //     //     setLoad(true)\r\n        //     // }\r\n        //     //     } else {\r\n        //     //         setError(\"An error occurred.\")\r\n        //     //     }\r\n        //     // } catch (error) {\r\n        //     //     const { response } = error\r\n        //     //     setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        //     // } finally {\r\n        //     //     setIsSaving(false)\r\n        // }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (courses.length < 1 || postulants.length < 1) {\r\n            toast.error('Add at least one course and one applicant')\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                setError(null)\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error('Could not send email')\r\n                                    else\r\n                                        toast.success('Email sent successfully')\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\")\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadCourse) {\r\n            fetchCourses()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        Edit Training\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >Save Draft</Button>\r\n                                                    <Popconfirm title=\"Are you sure to publish the training?\" okText=\"Yes, publish\" cancelText=\"No\" onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >Publish</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                            <Form.Item\r\n                                                name={['entPais', 'catId']}\r\n                                                label=\"Country\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select country',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select>\r\n                                                    {\r\n                                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                    }\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label=\"Training name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete training name',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label=\"Modality\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select modality',\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'>\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label=\"Start Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select start date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label=\"End Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select end date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Typography.Paragraph>\r\n                                    <Typography.Text type='danger'>*</Typography.Text>&nbsp;Courses\r\n                                </Typography.Paragraph>\r\n                                {\r\n                                    training.entEstado.catValor === 'ACTIVE' ?\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={training.cursoList}\r\n                                            renderItem={({ curNombre }) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            checked\r\n                                                        >\r\n                                                            {curNombre.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                        :\r\n                                        getCatalogos().cursos &&\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={getCatalogos().cursos}\r\n                                            renderItem={(item) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            disabled={isSaving || isLoadingCourse}\r\n                                                            checked={\r\n                                                                courses.filter(c => c.curNombre.catId === item.catId).length > 0\r\n                                                            }\r\n                                                            onChange={(e) => {\r\n                                                                setCourse({\r\n                                                                    checked: e.target.checked,\r\n                                                                    idNombreCurso: item.catId,\r\n                                                                    curId: courses.filter(c => c.curNombre.catId === item.catId).length > 0 ? courses.filter(c => c.curNombre.catId === item.catId)[0].curId : 0\r\n                                                                })\r\n                                                            }}>\r\n                                                            {item.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                }\r\n                            </Col>\r\n                        </Row >\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form layout='vertical' style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isLoadingCourse}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label='Applicants emails'\r\n                                                extra='Press enter to add email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete applicants',\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            <Row gutter={[15, 15]}>\r\n                                                {\r\n                                                    postulants && postulants.map(a => renderApplicants(a))\r\n                                                }\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row >\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport { Route, useLocation } from \"react-router-dom\";\n\nimport AppTopbar from \"./AppTopbar\";\nimport AppFooter from \"./AppFooter\";\nimport AppRightPanel from \"./AppRightPanel\";\n\n// import Dashboard from './components/Dashboard';\nimport FormLayoutDemo from \"./components/FormLayoutDemo\";\nimport InputDemo from \"./components/InputDemo\";\nimport FloatLabelDemo from \"./components/FloatLabelDemo\";\nimport InvalidStateDemo from \"./components/InvalidStateDemo\";\nimport ButtonDemo from \"./components/ButtonDemo\";\nimport TableDemo from \"./components/TableDemo\";\nimport ListDemo from \"./components/ListDemo\";\nimport TreeDemo from \"./components/TreeDemo\";\nimport PanelDemo from \"./components/PanelDemo\";\nimport OverlayDemo from \"./components/OverlayDemo\";\nimport MediaDemo from \"./components/MediaDemo\";\nimport MenuDemo from \"./components/MenuDemo\";\nimport MessagesDemo from \"./components/MessagesDemo\";\nimport FileDemo from \"./components/FileDemo\";\nimport ChartDemo from \"./components/ChartDemo\";\nimport MiscDemo from \"./components/MiscDemo\";\nimport Documentation from \"./components/Documentation\";\nimport IconsDemo from \"./utilities/IconsDemo\";\nimport CrudDemo from \"./pages/CrudDemo\";\nimport CalendarDemo from \"./pages/CalendarDemo\";\nimport TimelineDemo from \"./pages/TimelineDemo\";\nimport Invoice from \"./pages/Invoice\";\nimport Help from \"./pages/Help\";\nimport EmptyPage from \"./pages/EmptyPage\";\nimport BlocksDemo from \"./components/BlocksDemo\";\nimport { Tooltip } from \"primereact/tooltip\";\n\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./App.scss\";\n\n// import Inversiones from \"./components/inversiones/Inversiones\";\nimport MisInversiones from \"./components/inversiones/MisInversiones\";\nimport Inversion from \"./components/inversiones/Inversion\";\nimport Invertir from \"./components/inversiones/Invertir\";\nimport Reportes from \"./components/Reportes\";\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\nimport Usuarios from \"./components/usuario\";\nimport Usuario from \"./components/usuario/Usuario\";\nimport Catalogos from \"./components/catalogo\";\nimport Catalogo from \"./components/catalogo/Catalogo\";\nimport Opciones from \"./components/opcion\";\nimport Perfiles from \"./components/perfil\";\nimport Perfil from \"./components/perfil/Perfil\";\nimport { getOpcionesMenu } from \"./utils/Utils\";\nimport ChangePassword from \"./components/cuenta/ChangePassword\";\n// import Home from \"./pages/Home\";\nimport { Courses } from \"./components/courses/Courses\";\nimport { Course } from \"./components/courses/Course\";\n\n// import { Toaster } from \"react-hot-toast\";\nimport Applicants from \"./components/Applicant/Applicants\";\nimport Applicant from \"./components/Applicant/Applicant\";\nimport Users from \"./components/user/Users\";\nimport User from \"./components/user/User\";\nimport WorkPlan from \"./components/workplan/WorkPlan\";\nimport FinalReport from \"./components/finalReport/FinalReport\";\nimport Certificate from \"./components/certificate/Certificate\";\nimport Classes from \"./components/classes/Classes\";\nimport Training from \"./components/training/Training\";\n\nconst App = (props) => {\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\n  const [sidebarStatic, setSidebarStatic] = useState(true);\n  const [sidebarActive, setSidebarActive] = useState(true);\n  const [menuActive, setMenuActive] = useState(false);\n  const [configActive, setConfigActive] = useState(false);\n  const [rightPanelActive, setRightPanelActive] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\n  const copyTooltipRef = useRef();\n  const location = useLocation();\n\n  const menu = getOpcionesMenu();\n\n  let menuClick;\n  let rightPanelClick;\n  let configClick;\n  let searchClick;\n  let topbarUserMenuClick;\n\n  useEffect(() => {\n    copyTooltipRef &&\n      copyTooltipRef.current &&\n      copyTooltipRef.current.updateTargetEvents();\n  }, [location]);\n\n  useEffect(() => {\n    if (staticMenuMobileActive) {\n      blockBodyScroll();\n    } else {\n      unblockBodyScroll();\n    }\n  }, [staticMenuMobileActive]);\n\n  useEffect(() => {\n    setResetActiveIndex(true);\n    setMenuActive(false);\n  }, []);\n\n  const onMenuItemClick = (event) => {\n    if (!event.item.items) {\n      setResetActiveIndex(true);\n      hideOverlayMenu();\n    }\n    if (!event.item.items && (isSlim() || isHorizontal())) {\n      setMenuActive(false);\n    }\n  };\n\n  const onMenuClick = (event) => {\n    if (menuActive && event.target.className === \"layout-menu-container\") {\n      setResetActiveIndex(true);\n      setMenuActive(false);\n    }\n    menuClick = true;\n  };\n\n  const blockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.add(\"blocked-scroll\");\n    } else {\n      document.body.className += \" blocked-scroll\";\n    }\n  };\n\n  const unblockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.remove(\"blocked-scroll\");\n    } else {\n      document.body.className = document.body.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n    }\n  };\n\n  const onMenuButtonClick = (event) => {\n    menuClick = true;\n    setTopbarUserMenuActive(false);\n    setRightPanelActive(false);\n\n    if (isMobile()) {\n      setStaticMenuMobileActive(\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\n      );\n      if (staticMenuMobileActive) {\n        blockBodyScroll();\n      } else {\n        unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 991;\n  };\n\n  const isHorizontal = () => {\n    return \"sideBar\" === \"horizontal\";\n  };\n\n  const isSlim = () => {\n    return \"sideBar\" === \"slim\";\n  };\n\n  const hideOverlayMenu = () => {\n    setStaticMenuMobileActive(false);\n    unblockBodyScroll();\n  };\n\n  const onRightPanelClick = () => {\n    rightPanelClick = true;\n  };\n\n  const onRightPanelButtonClick = () => {\n    setRightPanelActive((prevState) => !prevState);\n    rightPanelClick = true;\n  };\n\n  const onTopbarSearchToggle = () => {\n    setSearchActive((prevState) => !prevState);\n    searchClick = true;\n  };\n\n  const onTopbarSearchClick = () => {\n    searchClick = true;\n  };\n\n  const onTopbarUserMenuClick = () => {\n    setTopbarUserMenuActive((prevState) => !prevState);\n    topbarUserMenuClick = true;\n  };\n\n  const onDocumentClick = () => {\n    if (!searchClick && searchActive) {\n      setSearchActive(false);\n      searchClick = false;\n    }\n\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\n      setTopbarUserMenuActive(false);\n      topbarUserMenuClick = false;\n    }\n\n    if (!rightPanelClick && rightPanelActive) {\n      setRightPanelActive(false);\n    }\n\n    if (!configClick && configActive) {\n      setConfigActive(false);\n    }\n\n    if (!menuClick) {\n      if (isSlim() || isHorizontal()) {\n        setResetActiveIndex(true);\n        setMenuActive(false);\n      }\n\n      if (staticMenuMobileActive) {\n        hideOverlayMenu();\n      }\n\n      unblockBodyScroll();\n    }\n\n    searchClick = false;\n    topbarUserMenuClick = false;\n    rightPanelClick = false;\n    configClick = false;\n    menuClick = false;\n  };\n\n  const onSidebarMouseOver = () => {\n    setSidebarActive(!isMobile());\n  };\n\n  const onSidebarMouseLeave = () => {\n    setSidebarActive(false);\n  };\n\n  const onToggleMenu = (event) => {\n    menuClick = true;\n    setSidebarStatic((prevState) => !prevState);\n\n    event.preventDefault();\n  };\n\n  const onRootMenuItemClick = () => {\n    setMenuActive((prevMenuActive) => !prevMenuActive);\n  };\n\n  const layoutClassName = classNames(\n    \"layout-wrapper\",\n    {\n      \"layout-sidebar\": \"sidebar\",\n      \"layout-static\": \"sidebar\" && sidebarStatic,\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\n      \"layout-rightpanel-active\": rightPanelActive,\n      \"layout-slim\": \"sidebar\" === \"slim\",\n      \"layout-mobile-active\": staticMenuMobileActive,\n      \"p-input-filled\": \"filled\",\n      \"p-ripple-disabled\": false,\n    },\n    \"layout-menu-light layout-topbar-light\"\n  );\n\n  // return <Route path=\"/signup/:id/:email\" exact component={Signup} />;\n\n  return (\n    <div\n      className={layoutClassName}\n      onClick={onDocumentClick}\n      style={{ backgroundColor: \"#F0F0F0\" }}\n    >\n      {/* <Toaster /> */}\n\n      <Tooltip\n        ref={copyTooltipRef}\n        target=\".block-action-copy\"\n        position=\"bottom\"\n        content=\"Copied to clipboard\"\n        event=\"focus\"\n      />\n\n      <AppTopbar\n        topbarScheme={\"light\"}\n        onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive}\n        onTopbarSearchToggle={onTopbarSearchToggle}\n        onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive}\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu}\n        menuActive={menuActive}\n        onRootMenuItemClick={onRootMenuItemClick}\n        mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick}\n        menuMode={\"sidebar\"}\n        sidebarStatic={sidebarStatic}\n        sidebarActive={sidebarActive}\n        onSidebarMouseOver={onSidebarMouseOver}\n        onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu}\n        onMenuButtonClick={onMenuButtonClick}\n        resetActiveIndex={resetActiveIndex}\n        onMenuClick={onMenuClick}\n      />\n\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n      <div className=\"layout-main\">\n        <div\n          className=\"mgeBG\"\n          style={{\n            opacity: \"0.3\",\n            height: \"100vh\",\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: \"0\",\n            right: \"0\",\n          }}\n        >\n          &nbsp;\n        </div>\n        <div className=\"layout-content\">\n          <Route path=\"/\" exact component={Courses} />\n          <Route\n            path=\"/misinversiones/:filtro\"\n            exact\n            component={MisInversiones}\n          />\n          <Route path=\"/inversion/:id\" exact component={Inversion} />\n          <Route path=\"/invertir/:id\" exact component={Invertir} />\n          <Route path=\"/reportes\" exact component={Reportes} />\n          <Route path=\"/cuenta\" exact component={MiCuenta} />\n          <Route path=\"/change\" exact component={ChangePassword} />\n          <Route path=\"/usuarios\" exact component={Usuarios} />\n          <Route path=\"/usuario/:id\" exact component={Usuario} />\n          <Route path=\"/catalogos\" exact component={Catalogos} />\n          <Route path=\"/catalogo/:id/:nombre\" exact component={Catalogo} />\n          <Route path=\"/opciones\" exact component={Opciones} />\n          <Route path=\"/perfiles\" exact component={Perfiles} />\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\n\n          <Route path=\"/training\" exact component={Courses} />\n          <Route path=\"/training/:id\" exact component={Applicants} />\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\n          <Route path=\"/trainingnew\" exact component={Course} />\n\n          <Route path=\"/applicants\" exact component={Applicants} />\n          <Route\n            path=\"/applicants/:id/:idTraining\"\n            exact\n            component={Applicant}\n          />\n\n          <Route path=\"/users\" exact component={Users} />\n          <Route path=\"/users/:id\" exact component={User} />\n\n          <Route path=\"/classes\" exact component={Classes} />\n          <Route path=\"/workplan\" exact component={WorkPlan} />\n          <Route path=\"/finalreport\" exact component={FinalReport} />\n          <Route path=\"/certificate\" exact component={Certificate} />\n\n          <Route path=\"/start/documentation\" component={Documentation} />\n          <Route path=\"/uikit/formlayout\" component={FormLayoutDemo} />\n          <Route path=\"/uikit/floatlabel\" component={FloatLabelDemo} />\n          <Route path=\"/uikit/input\" component={InputDemo} />\n          <Route path=\"/uikit/invalidstate\" component={InvalidStateDemo} />\n          <Route path=\"/uikit/button\" component={ButtonDemo} />\n          <Route path=\"/uikit/table\" component={TableDemo} />\n          <Route path=\"/uikit/list\" component={ListDemo} />\n          <Route path=\"/uikit/tree\" component={TreeDemo} />\n          <Route path=\"/uikit/panel\" component={PanelDemo} />\n          <Route path=\"/uikit/overlay\" component={OverlayDemo} />\n          <Route path=\"/uikit/menu\" component={MenuDemo} />\n          <Route path=\"/uikit/message\" component={MessagesDemo} />\n          <Route path=\"/uikit/media\" component={MediaDemo} />\n          <Route path=\"/uikit/file\" component={FileDemo} />\n          <Route\n            path=\"/uikit/chart\"\n            render={() => <ChartDemo colorMode={\"light\"} location={location} />}\n          />\n          <Route path=\"/uikit/misc\" component={MiscDemo} />\n          <Route path=\"/utilities/icons\" component={IconsDemo} />\n          <Route path=\"/pages/crud\" component={CrudDemo} />\n          <Route path=\"/pages/calendar\" component={CalendarDemo} />\n          <Route\n            path=\"/pages/help\"\n            render={() => <Help colorScheme={\"light\"} />}\n            location={location}\n          />\n          <Route path=\"/pages/invoice\" component={Invoice} />\n          <Route path=\"/pages/empty\" component={EmptyPage} />\n          <Route path=\"/pages/timeline\" component={TimelineDemo} />\n          <Route path=\"/uiblocks/blocks\" component={BlocksDemo} />\n        </div>\n\n        <AppFooter />\n      </div>\n      <div className=\"layout-mask modal-in\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Typography, Layout, Spin, Result, Alert } from 'antd'\r\nimport AlertWait from \"./AlertWait\"\r\nimport Logo from \"../components/Logo\"\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport toast from \"react-hot-toast\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState({\r\n        posEstado: {\r\n            catValor: 'EST_INV'\r\n        }\r\n    })\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = (values) => {\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        cuentaService\r\n            .recoveryPassword({ datos })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n                // toast.success('Your password was sent to the indicated email. Check your inbox.')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                    // toast.error(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\"The requested resource is not available or cannot be found.\")\r\n                    // toast.error('The requested resource is not available or cannot be found')\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                    // toast.error(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    validPostulant &&\r\n                    <>\r\n                        {\r\n                            validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                <Row justify='center'>\r\n                                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                        <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                        <Form\r\n                                            layout={'vertical'}\r\n                                            form={form}\r\n                                            onFinish={recuperar}\r\n                                        >\r\n                                            <Form.Item label=\"Email\"\r\n                                                name='email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    },\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete your email',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                            </Form.Item>\r\n\r\n                                            {\r\n                                                error &&\r\n                                                <Alert\r\n                                                    message=''\r\n                                                    description={error}\r\n                                                    type='warning'\r\n                                                    showIcon\r\n                                                    closable\r\n                                                    banner\r\n                                                />\r\n                                            }\r\n\r\n                                            {\r\n                                                okMsg &&\r\n                                                <Alert\r\n                                                    message=''\r\n                                                    description={okMsg}\r\n                                                    type='success'\r\n                                                    showIcon\r\n                                                    closable\r\n                                                    banner\r\n                                                />\r\n                                            }\r\n\r\n                                            <div style={{\r\n                                                paddingTop: '20px'\r\n                                            }}>\r\n                                                <Form.Item>\r\n                                                    <Button\r\n                                                        type='primary'\r\n                                                        htmlType='submit'\r\n                                                        loading={isLoading}\r\n                                                        disabled={isLoading}\r\n                                                        block\r\n                                                    >Recover Password</Button>\r\n                                                </Form.Item>\r\n                                            </div>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                                :\r\n                                <Result\r\n                                    title=\"Your account has been previously created\"\r\n                                    extra={\r\n                                        <Button type=\"primary\" key=\"console\"\r\n                                            onClick={() => {\r\n                                                navigate.push('/login')\r\n                                            }}\r\n                                        >\r\n                                            Log in\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useState } from \"react\"\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Spin, Typography, Result, Alert } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport AlertWait from \"./AlertWait\"\r\nimport Logo from \"../components/Logo\"\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const [validPostulant, setValidPostulant] = useState({\r\n        posEstado: {\r\n            catValor: 'EST_INV'\r\n        }\r\n    })\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n\r\n    const reset = (values) => {\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                // setError('Your password was reset succesfully. Please log in again.')\r\n                setOkMsg(<>\r\n                    Your password was reset succesfully. Please click <Link to='/login'>here</Link> log in again.\r\n                </>)\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\"The requested resource is not available or cannot be found.\")\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    validPostulant &&\r\n                    <>\r\n                        {\r\n                            validPostulant.posEstado.catValor === 'EST_INV' ?\r\n                                <Row justify='center'>\r\n                                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                        <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                        <Row>\r\n                                            <Col span={24}>\r\n                                                <Form\r\n                                                    layout={'vertical'}\r\n                                                    form={form}\r\n                                                    onFinish={reset}\r\n                                                >\r\n                                                    <Form.Item label=\"New Password\"\r\n                                                        name='password'\r\n                                                        rules={[\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Complete new password',\r\n                                                            },\r\n                                                        ]}\r\n                                                    >\r\n                                                        <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item label=\"Confirm new password\"\r\n                                                        name='passwordConfirm'\r\n                                                        rules={[\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Confirme new password',\r\n                                                            },\r\n                                                        ]}\r\n                                                    >\r\n                                                        <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item>\r\n                                                        <PasswordChecklist\r\n                                                            rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                            minLength={8}\r\n                                                            value={password}\r\n                                                            valueAgain={passwordConfirm}\r\n                                                            messages={{\r\n                                                                minLength: \"Password has more than 8 characters.\",\r\n                                                                specialChar: \"Password has special characters.\",\r\n                                                                number: \"Password has a number.\",\r\n                                                                capital: \"Password has a capital letter.\",\r\n                                                                match: \"Passwords match.\",\r\n                                                            }}\r\n                                                            onChange={(isValid) => { }}\r\n                                                        />\r\n                                                    </Form.Item>\r\n\r\n                                                    {\r\n                                                        error &&\r\n                                                        <Alert\r\n                                                            message=''\r\n                                                            description={error}\r\n                                                            type='warning'\r\n                                                            showIcon\r\n                                                            closable\r\n                                                            banner\r\n                                                        />\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        okMsg &&\r\n                                                        <Alert\r\n                                                            message=''\r\n                                                            description={okMsg}\r\n                                                            type='success'\r\n                                                            showIcon\r\n                                                            closable\r\n                                                            banner\r\n                                                        />\r\n                                                    }\r\n                                                    <div style={{\r\n                                                        paddingTop: '10px'\r\n                                                    }}>\r\n                                                        <Form.Item>\r\n                                                            <Button\r\n                                                                type='primary'\r\n                                                                htmlType='submit'\r\n                                                                loading={isLoading}\r\n                                                                disabled={isLoading}\r\n                                                                block>Reset Password</Button>\r\n                                                        </Form.Item>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {/* <AlertWait error={error} isLoading={isLoading} /> */}\r\n                                    </Col>\r\n                                </Row>\r\n                                :\r\n                                <Result\r\n                                    title=\"Your account has been previously created\"\r\n                                    extra={\r\n                                        <Button type=\"primary\" key=\"console\"\r\n                                            onClick={() => {\r\n                                                navigate.push('/login')\r\n                                            }}\r\n                                        >\r\n                                            Log in\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(false)\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [validPostulant, setValidPostulant] = useState()\r\n    const [form] = Form.useForm()\r\n\r\n\r\n    const validate = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, posInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: posInvitadoPor.usuId, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject[0],\r\n                        cursos: results[1].data.listObject[0],\r\n                        modalidades: results[2].data.listObject[0],\r\n                        generos: results[3].data.listObject[0],\r\n                        trainingStatus: results[4].data.listObject[0],\r\n                        reportType: results[5].data.listObject[0],\r\n                        reportStatus: results[6].data.listObject[0]\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                setError(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const registrar = (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        usuarioService\r\n            .put({ usuario })\r\n            .then(response => {\r\n                // setIsRegister(false)\r\n                const { data } = response\r\n                if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                    toast.success('Your account has been created successfully. Please log in.')\r\n                    setTimeout(() => {\r\n                        navigate.push('/login')\r\n                    }, 3000);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setIsRegister(false)\r\n                const { status, data } = error.response\r\n                switch (status) {\r\n                    case 409:\r\n                        toast.error(data.map(e => renderError(e)))\r\n                        break\r\n                    case 500:\r\n                        toast.error(data)\r\n                        break\r\n                    default:\r\n                        break\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={20} lg={16} xl={14} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                form={form}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Row>\r\n                                                            <Col span={24}>\r\n                                                                <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                                    Upload your profile picture\r\n                                                                </Typography.Paragraph>\r\n                                                            </Col>\r\n                                                            <Col span={24}>\r\n                                                                <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                                    <Image src='./../assets/user.png' preview={false} />\r\n                                                                </Typography.Paragraph>\r\n                                                            </Col>\r\n                                                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                <Form.Item>\r\n                                                                    <Button type='primary'>Upload photo</Button>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone Number\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space>\r\n                                                                    Are you currently working?\r\n                                                                    <Switch defaultChecked onChange={(c) => { setCurrentlyWorking(c) }} />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'Are you currently working?',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const { opciones } = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject[0],\r\n                                cursos: results[1].data.listObject[0],\r\n                                modalidades: results[2].data.listObject[0],\r\n                                generos: results[3].data.listObject[0],\r\n                                trainingStatus: results[4].data.listObject[0],\r\n                                reportType: results[5].data.listObject[0],\r\n                                reportStatus: results[6].data.listObject[0]\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                if (credenciales.perId === 5) {\r\n                    history.push(\"/workplan\")\r\n                } else {\r\n                    history.push(\"/\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        \"El recurso solicitado no esta disponible o no se encuentra\"\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].idPerfil }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        \"El recurso solicitado no esta disponible o no se encuentra\"\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    Welcome back\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    Log in to access your account\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label=\"Log in with your email\"\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter you email',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Enter your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter your password'\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password id=\"password\" name=\"password\" label='Password' />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Log in</Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>Forgot your password?</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react';\nimport { Route, withRouter, useLocation } from 'react-router-dom';\nimport App from './App';\n// import { Error } from './pages/Error';\n// import { NotFound } from './pages/NotFound';\n// import { Access } from './pages/Access';\n// import Register from './pages/Register';\nimport RecuperarPassword from './pages/RecuperarPassword';\nimport ResetPassword from './pages/ResetPassword';\n// import RegisterPYME from './pages/RegisterPersona';\n// import Help from './pages/Help';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n\nexport const ctx = React.createContext()\n\nconst AppWrapper = (props) => {\n\tlet location = useLocation();\n\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0)\n\t}, [location]);\n\n\tconst [colorScheme, setColorScheme] = useState('light')\n\n\tswitch (props.location.pathname) {\n\t\tcase '/login':\n\t\t\treturn <Route path=\"/login\" render={() => <Login colorScheme={colorScheme} />} />\n\t\t// case '/register':\n\t\t// \treturn <Route path=\"/register\" render={() => <Register colorScheme={colorScheme} />} />\n\t\tcase '/signup':\n\t\t\treturn <Route path=\"/signup\" render={() => <Signup colorScheme={colorScheme} />} />\n\t\t// case '/registerpyme':\n\t\t// \treturn <Route path=\"/registerpyme\" render={() => <RegisterPYME colorScheme={colorScheme} />} />\n\t\tcase '/recover':\n\t\t\treturn <Route path=\"/recover\" render={() => <RecuperarPassword colorScheme={colorScheme} />} />\n\t\tcase '/reset':\n\t\t\t\treturn <Route path=\"/reset\" render={() => <ResetPassword colorScheme={colorScheme} />} />\n\t\t// case '/error':\n\t\t// \treturn <Route path=\"/error\" render={() => <Error colorScheme={colorScheme} />} />\n\t\t// case '/notfound':\n\t\t// \treturn <Route path=\"/notfound\" render={() => <NotFound colorScheme={colorScheme} />} />\n\t\t// case '/access':\n\t\t// \treturn <Route path=\"/access\" render={() => <Access colorScheme={colorScheme} />} />\n\t\t// case '/help':\n\t\t// \treturn <Route path=\"/help\" render={() => <Help colorScheme={colorScheme} />} />\n\t\tdefault:\n\t\t\treturn <App setColorScheme={setColorScheme} />;\n\t}\n\n}\n\nexport default withRouter(AppWrapper);","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}