{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","service/InformService.jsx","service/CertificateService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","pages/AlertWait.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","service/BeneficiaryService.jsx","components/beneficiary/Beneficiary.jsx","components/beneficiary/Beneficiaries.jsx","App.js","service/CuentaService.jsx","service/CatalogoService.jsx","pages/Login.jsx","pages/Signup.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getOpcionesMenu","informs","w","infTipo","catValor","infEstado","opcionesSubOpciones","undefined","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","id","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perNombre","push","gutter","removeItem","AppFooter","display","AppRightPanel","onRightPanelClick","headers","AxiosInstance","navigate","axiosInstance","axios","create","interceptors","request","use","config","token","toast","error","Promise","reject","response","status","apiURL","getCatalogosPorPadreUrl","updateTraining","downloadInformByName","downloadCertificateByName","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","new","put","set","patch","upLoadPhoto","datos","getLessPostulants","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setError","documento","setDocumento","email","setEmail","setNombres","estado","setEstado","columnas","title","dataIndex","render","_","width","responsive","codigotel","celular","record","usuId","fetchData","a","estadoId","data","listObject","messageText","subTitle","extra","span","justify","Title","level","layout","xs","sm","md","lg","xl","Item","onChange","Group","states","s","catId","catNombre","direction","loading","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","fileList","setFileList","onRemove","file","newFileList","slice","splice","beforeUpload","URL","createObjectURL","handleUpload","FormData","append","success","update","values","trabaja","countryCode","sexoId","sexo","paisId","pais","usuarioActualizado","newUsuario","fechanac","moment","$d","align","initialValues","onFinish","xxl","name","imagen","multiple","rules","required","message","fieldNames","showSearch","options","generos","optionFilterProp","placement","paises","p","catDescripcion","srcSet","checked","c","htmlType","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","requests","forEach","all","then","results","catch","msgError","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","onClose","open","form","opcIcono","PerfilService","perfil","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","defaultChecked","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","console","log","op","guardar","perfilActualizado","eliminar","tableProps","statistics","hoverable","background","color","precision","prefix","suffix","description","Dashboard","users","setUsers","valueStyle","renderStatistics","tip","Paragraph","TrainingService","getByTraining","trainer","getById","training","pub","trainingService","UserInfo","trainings","setTrainings","fetchTrainings","idUsuario","centered","letterSpacing","strong","readOnly","t","entEstado","entFechaFin","entFechaIni","entId","entNombre","entModalidad","entPais","numPostulantes","marginBottom","reverse","renderTraining","showIcon","borderRadius","border","UsuarioNew","password","setPassword","passwordConfirm","setPasswordConfirm","validForm","setValidForm","insert","md5","fetchProfiles","Password","minLength","valueAgain","messages","specialChar","number","capital","match","isValid","User","user","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","state","setState","courses","setCourses","paddingBottom","cursoList","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CourseService","course","baseTraining","entCultura","postulantService","courseService","Course","formPostulante","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","startDate","setStartDate","endDate","setEndDate","removePostulant","newPostulantsList","save","idEstado","trainingStatus","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","mode","cursos","option","resetFields","posEmail","closeIcon","Applicants","setCourse","applicants","setApplicants","postulanteList","posEstado","criteria","searchCriteria","ciudad","filteredCourse","asistenciaList","asiValor","informeList","curNombre","substr","idCurso","curId","certificadoList","tc","cerEstado","posId","AttendanceService","attendance","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","CertificateService","generate","send","certificate","download","attendanceService","informService","certificateService","panelStyle","backgroundColor","Applicant","idTraining","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","isDownloading","setIsDownloading","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","downloadInform","column","eviUrl","TextArea","setInform","reportStatus","danger","renderInform","downloadCertificate","cerNombre","cerRuta","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","stringify","xhr","blob","Blob","saveAs","setAttendance","sendCertificate","cerId","idPostulante","sendRateEmail","informe","idEntrenamiento","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","cerFechaCad","cerFechaReg","renderCertificate","WorkPlan","setPostulant","uploading","setUploading","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","reportType","setItem","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","informInserted","newInform","sendFinalReport","idInforme","downloadFinalReportTemplate","f","Certificate","Classes","AlertWait","Training","loadCourse","setLoadCourse","loadPostulant","setLoadPostulant","isLoadingCourse","setIsLoadingCourse","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","newCourse","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","modTraining","envios","reduce","promise","fn","resolve","itemLayout","grid","renderItem","idNombreCurso","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","BeneficiaryService","beneficiary","getByPostulant","val","renderPaisValor","Beneficiary","saveBeneficiary","closeBeneficiary","formBeneficiary","valuePropName","educationLevels","beneficiaryService","Typography","Beneficiaries","operation","isLoadingBeneficiaries","setIsLoadingBeneficiaries","beneficiaryC1","setBeneficiaryC1","beneficiaryC2","setBeneficiaryC2","openC1","setOpenC1","openC2","setOpenC2","closeBeneficiaryC1","getBeneficiaryC1","benId","idTipo","benTipo","idPais","benPais","idSexo","benSexo","idNivelInt","benNivelInt","saveBeneficiaryC1","closeBeneficiaryC2","getBeneficiaryC2","saveBeneficiaryC2","delBeneficiary","validateBeneficiary","sendBeneficiaries","typeLoad","ben","benTrabaja","typePersons","catReferencia","beneficiarioList","benDocumento","benNombres","benCargo","benNomEmpresa","benNumPer","benValidado","b","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","location","useLocation","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","validateResetPassword","recoveryPassword","updatePassword","CatalogoService","getPaises","getPorPadre","catalogo","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","getEducationLevel","getTypePerson","getCatalogo","cuentaService","catalogoService","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","opcionesVisible","mgeCatalogos","statusText","textTransform","actions","renderPerfil","backgroundImage","renderError","messageCode","Signup","search","decodeURIComponent","uuid","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","invitadopor","fetchCatalogos","registrar","cultura","RecuperarPassword","okMsg","setOkMsg","emailSent","setEmailSent","recuperar","banner","ResetPassword","setValidate","isValidating","setIsValidating","setIsValid","isResetting","setIsResetting","isReset","setIsReset","reset","validateRequest","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5a35eae3.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\n      </div>\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nexport const toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nconst getInforms = () => localStorage.getItem('mgeInformList') ? JSON.parse(localStorage.getItem('mgeInformList')) : []\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const informs = getInforms()\r\n    let opciones = getDatosUsuario().opciones || []\r\n    //  Si existe informes se muestran las opciones de beneficiarios para registro y calificación.\r\n    if (informs.length > 1) {\r\n        // Si existe un WP aprobado se habilita el registro de beneficiarios.\r\n        if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/registry') >= 0 ? { ...o, visible: true } : { ...o }))\r\n    }\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined && o.visible === true)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport AppMenu from \"./AppMenu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Typography } from \"antd\";\nimport { getDatosUsuario } from \"./utils/Utils\";\n\nconst AppTopbar = (props) => {\n  const history = useHistory();\n  const searchPanelDesktop = useRef(null);\n  const searchPanelMobile = useRef(null);\n\n  useEffect(() => {\n    if (props.searchActive) {\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\n      else searchPanelMobile.current.focus();\n    }\n  }, [props.searchActive]);\n\n  const datosUsuario = (e) => {\n    history.push(\"/myaccount\");\n  };\n\n  const cerrarSesion = (e) => {\n    localStorage.removeItem(\"mgeToken\");\n    localStorage.removeItem(\"mgeDatosUsuario\");\n    localStorage.removeItem(\"mgeInformList\");\n    history.push(\"/login\");\n  };\n\n  const logo = {\n    fontSize: \"1.5em\",\n    padding: 0,\n    margin: 0,\n  };\n\n  return (\n    <div className=\"layout-topbar\">\n      <div className=\"layout-topbar-wrapper\">\n        <div className=\"layout-topbar-left\">\n          <button\n            tabIndex=\"0\"\n            className=\"menu-button p-link\"\n            onClick={props.onMenuButtonClick}\n          >\n            <i className=\"pi pi-bars\"></i>\n          </button>\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n              MG\n            </span>\n            <span className=\"mge mge-bold mge-green\" style={logo}>\n              E\n            </span>\n          </div>\n        </div>\n\n        <AppMenu\n          menuMode={props.menuMode}\n          sidebarActive={props.sidebarActive}\n          sidebarStatic={props.sidebarStatic}\n          model={props.menu}\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          onMobileMenuActive={props.onMobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          onSidebarMouseOver={props.onSidebarMouseOver}\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\n          onToggleMenu={props.onToggleMenu}\n          resetActiveIndex={props.resetActiveIndex}\n          onMenuClick={props.onMenuClick}\n        />\n\n        <div className=\"layout-topbar-right\">\n          <ul className=\"layout-topbar-actions\">\n            <li\n              className={classNames(\"topbar-item user-profile\", {\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\n              })}\n            >\n              <button\n                className=\"p-link\"\n                style={{ cursor: \"pointer\" }}\n                onClick={props.onTopbarUserMenuClick}\n              >\n                {getDatosUsuario() && (\n                  <Row>\n                    <Col\n                      style={{\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        textAlign: \"right\",\n                        lineHeight: \"1em\",\n                      }}\n                    >\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\n                        {`${getDatosUsuario().nombres || \"\"} ${\n                          getDatosUsuario().apellidos || \"\"\n                        }`}\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\n                          <>\n                            <br />\n                            <Typography.Text\n                              type=\"secondary\"\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\n                            >\n                              {`${getDatosUsuario().perfiles[0].perNombre}`}\n                            </Typography.Text>\n                          </>\n                        )}\n                      </Typography.Text>\n                    </Col>\n                    <Col>\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\n                    </Col>\n                  </Row>\n                )}\n              </button>\n              <ul className=\"fadeInDown\">\n                <li onClick={datosUsuario}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-user-gear\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Profile</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                <li onClick={cerrarSesion}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-right-from-bracket\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Sign off</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppTopbar;\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from 'react';\n\nconst AppRightPanel = (props) => {\n\n\treturn (\n\t\t<div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n\t\t\t<div className=\"rightpanel-wrapper\" >\n\t\t\t\t<div className=\"rightpanel-section weather-section\">\n\t\t\t\t\t<div className=\"section-header\">\n\t\t\t\t\t\t<h6>Today</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"weather\">\n\t\t\t\t\t\t<img src=\"assets/demo/images/rightpanel/icon-sun.svg\" alt=\"freya-layout\" />\n\t\t\t\t\t\t<div className=\"weather-info\">\n\t\t\t\t\t\t\t<h6>Ankara, 22 May</h6>\n\t\t\t\t\t\t\t<h1>24º</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppRightPanel;","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst headers = {\r\n    \"Accept-Language\": 'en_US'\r\n}\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                localStorage.removeItem('mgeInformList')\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    localStorage.removeItem('mgeInformList')\r\n                    toast.error('The session has expired. Please log in again.')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","// SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY EN ARCHIVO package.json\r\n// \"proxy\": \"http://20.65.110.204:44613\", // DESARROLLO\r\n\r\n// SOLO PARA DESARROLLO Y PRUEBAS\r\n// const apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n// SOLO PARA PRODUCCION\r\nconst apiURL = 'https://mygreenenterprise.org/uprime-mge-web/uprime/api'\r\n\r\n//SERVICIOS MGE\r\n\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/insertCatalog`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogServiceRest/getCatalogByFilter`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/updateCatalog`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/deleteCatalog`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogServiceRest/getCatalogById`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsListByFather`\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsList`\r\n\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OptionServiceRest/insertOption`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OptionServiceRest/deleteOption`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OptionServiceRest/updateOption`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OptionServiceRest/getOptionsListByFather`\r\nexport const getOpcionesUrl = () => `${apiURL}/OptionServiceRest/getOptionsList`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OptionServiceRest/getOptionById`\r\n\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/ProfileServiceRest/insertProfile`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/ProfileServiceRest/updateProfile`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/ProfileServiceRest/deleteProfile`\r\nexport const getPerfilesUrl = () => `${apiURL}/ProfileServiceRest/getProfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/ProfileServiceRest/getProfileById`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/ProfileOptionServiceRest/getOptionsByProfileList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/insertProfileOption`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOptionServiceRest/updateProfileOption`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/deleteProfileOption`\r\n\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UserServiceRest/getUsersListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UserServiceRest/getUserById`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UserServiceRest/getUsersLessPostulants`\r\nexport const getAutenticarUrl = () => `${apiURL}/UserServiceRest/authenticateUser`\r\nexport const getAutorizarUrl = () => `${apiURL}/UserServiceRest/authorizeUser`\r\nexport const updatePassword = () => `${apiURL}/UserServiceRest/updatePassword`\r\nexport const recoveryPassword = () => `${apiURL}/UserServiceRest/recoveryPassword`\r\nexport const validateUserUuid = () => `${apiURL}/UserServiceRest/validateUserUuid`\r\nexport const addProfileUser = () => `${apiURL}/UserServiceRest/addProfileUser`\r\nexport const insertUsuario = () => `${apiURL}/UserServiceRest/insertUser`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UserServiceRest/updateUser`\r\nexport const enrollUsuario = () => `${apiURL}/UserServiceRest/enrollPostulant`\r\nexport const deletePerfilUsuario = () => `${apiURL}/UserServiceRest/deletePerfilUsuario`\r\nexport const getUsuariosUrl = () => `${apiURL}/UserServiceRest/getUsersList`\r\nexport const uploadPhotoUser = () => `${apiURL}/UserServiceRest/uploadPhotoUser`\r\n\r\nexport const insertTraining = () => `${apiURL}/TrainingServiceRest/insertTraining`\r\nexport const updateTraining = () => `${apiURL}/TrainingServiceRest/updateTraining`\r\nexport const getTrainingById = () => `${apiURL}/TrainingServiceRest/getTrainingById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/TrainingServiceRest/getTrainingByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/TrainingServiceRest/getTrainingList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulantServiceRest/insertPostulant`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulantServiceRest/sendEmailRegistry`\r\nexport const sendEmailEnroll = () => `${apiURL}/PostulantServiceRest/sendEmailEnroll`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulantServiceRest/getPostulantByTraining`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulantServiceRest/getTrainingByPostulant`\r\nexport const deletePostulant = () => `${apiURL}/PostulantServiceRest/deletePostulant`\r\nexport const validatePostulant = () => `${apiURL}/PostulantServiceRest/validatePostulant`\r\n\r\nexport const insertCourse = () => `${apiURL}/CourseServiceRest/insertCourse`\r\nexport const getCourseByTraining = () => `${apiURL}/CourseServiceRest/getCoursesByTraining`\r\nexport const deleteCourse = () => `${apiURL}/CourseServiceRest/deleteCourse`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AssistanceServiceRest/insertAssistance`\r\nexport const getAttendanceById = () => `${apiURL}/AssistanceServiceRest/getAssistanceById`\r\nexport const updateAttendance = () => `${apiURL}/AssistanceServiceRest/updateAssistance`\r\n\r\nexport const insertInform = () => `${apiURL}/ReportServiceRest/insertReport`\r\nexport const updateInform = () => `${apiURL}/ReportServiceRest/updateReport`\r\nexport const getInformById = () => `${apiURL}/ReportServiceRest/getReportById`\r\nexport const downloadInformByName = () => `${apiURL}/ReportServiceRest/downloadReportByName`\r\nexport const downloadWorkplan = () => `${apiURL}/ReportServiceRest/downloadWorkPlan`\r\nexport const downloadFinalReport = () => `${apiURL}/ReportServiceRest/downloadFinalReport`\r\nexport const sendEmailLoadInform = () => `${apiURL}/ReportServiceRest/sendEmailLoadReport`\r\nexport const sendEmailRateInform = () => `${apiURL}/ReportServiceRest/sendEmailRateReport`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenceServiceRest/insertEvidence`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificateServiceRest/generateCertificate`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificateServiceRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificateServiceRest/downloadCertificateByName`\r\n\r\nexport const insertBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/insertBeneficiary`\r\nexport const updateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/updateBeneficiary`\r\nexport const getBeneficiaryById = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiaryById`\r\nexport const getBeneficiariesByPostulant = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiariesByPostulant`\r\nexport const deleteBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/deleteBeneficiary`\r\nexport const validateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/validateBeneficiary`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, uploadPhotoUser } from \"./../utils/urls\"\r\nconst config = { headers: { \"Accept-Language\": 'en_US' } }\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos, config)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'usuId',\r\n      render: (_) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'nombres',\r\n      render: (_, r) => `${r.nombres} ${r.apellidos}`\r\n    },\r\n    {\r\n      title: 'ID Number',\r\n      dataIndex: 'documento'\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      render: (_, record) => <Button type='primary' href={`/#/users/${record.usuId}`}>View</Button>\r\n    }\r\n  ]\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    setUsuarios([])\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Users Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"ID Number\">\r\n              <Input label='ID Number' type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Name\">\r\n              <Input label='Name' type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Email\">\r\n              <Input label='Email' type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"State\">\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n                {/* <Radio value={true}>Activo</Radio>\r\n                <Radio value={false}>Inactivo</Radio> */}\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>New User</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>Refresh</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('User updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('User updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            User\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >Cancel</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving}>Save</Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport OpcionService from './../../service/OpcionService'\r\n\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1).map(o => (\r\n              {\r\n                title: o.opcNombre,\r\n                key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`,\r\n                children: o.opcHijos ? o.opcHijos.map(o => (\r\n                  {\r\n                    title: o.opcNombre,\r\n                    key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`\r\n                  }\r\n                )) : []\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport PerfilService from '../../service/PerfilService'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Level',\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'State',\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? 'ACTIVE' : 'INACTIVE'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject.map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success('Profile saved successfully')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`An error ocurred: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Profile deleted successfully')\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Profiles Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                New Profile\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"Are you sure you want to delete the selected profiles?\" okText=\"Yes, deleter\" cancelText=\"No\" onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? 'Deleting' : 'Delete'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>Refresh</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Name\">\r\n                <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Level\">\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"State\">\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? 'Active' : 'Inactive'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? 'Saving' : 'Save'}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`Option ${perfilOpcionActualizado.pfoOpcId.opcNombre} updated successfully`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        console.log(_opcionesPerfil)\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1)\r\n              .map(o => (\r\n                {\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n                }\r\n              ))\r\n            // .map(o => (\r\n            //   {\r\n            //     key: `${o.opcId}`,\r\n            //     opcNombre: o.opcNombre,\r\n            //     ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n            //     children: o.opcHijos.map(o => ({\r\n            //       key: `${o.opcId}`,\r\n            //       opcNombre: o.opcNombre,\r\n            //       ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0]\r\n            //     }))\r\n            //   }\r\n            // ))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoadingOpciones(false)\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success('Profile saved successfully')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Profile deleted')\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Profile {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Name\">\r\n                  <Input id=\"perNombre\" name=\"perNombre\" label='Name' type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Level\">\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"State\">\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? 'ACTIVE' : 'INACTIVE'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>Options</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? 'Saving' : 'Save'}\r\n                    </Button>\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Form, Spin, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst columnas = [\r\n    {\r\n        title: '',\r\n        render: (e) => <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'nombres',\r\n        render: (_, r) => `${r.nombres}`\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'apellidos',\r\n        render: (_, r) => `${r.apellidos}`\r\n    },\r\n    {\r\n        title: 'Country',\r\n        dataIndex: 'pais',\r\n        render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n            <Tooltip title={pais.catDescripcion}>\r\n                <img\r\n                    src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={pais.catDescripcion}></img>\r\n            </Tooltip>\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: <div style={{ textAlign: 'center' }}>Role</div>,\r\n        dataIndex: 'role',\r\n        render: (_, { perfiles }) => <div style={{ textAlign: 'center' }}>\r\n            {perfiles[0].perNombre}\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>View</Button>\r\n    }\r\n]\r\n\r\nconst statistics = [\r\n    {\r\n        id: 1,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#54873C',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER OF TRAINERS</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 2,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#70B450',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 3,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#385A28',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>APPLICANTS</Typography.Text>,\r\n            value: 80,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 4,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#636466',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>BENEFICIARIES</Typography.Text>,\r\n            value: 150,\r\n            precision: 0,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: ''\r\n        },\r\n        description: <>&nbsp;</>\r\n    }\r\n]\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n\r\n    const renderStatistics = ({ id, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}\r\n        >\r\n            <Card\r\n                {...props}\r\n            >\r\n                <Statistic\r\n                    {...data}\r\n                    valueStyle={{\r\n                        color: '#ffffff',\r\n                    }}\r\n                />\r\n                {description}\r\n            </Card>\r\n        </Col>\r\n\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject\r\n                setUsers(usuarios)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[15, 15]}>\r\n                {\r\n                    statistics && statistics.map(s => renderStatistics(s))\r\n                }\r\n            </Row>\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Table\r\n                                {...tableProps}\r\n                                rowKey='usuId'\r\n                                columns={columnas}\r\n                                dataSource={users}>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Badge, Card, Alert } from 'antd'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entModalidad, entNombre, entPais, numPostulantes }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>Regresar al inicio</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            usuario.perfiles && usuario.perfiles[0].perNombre\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Trainings</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description=\"Trainings not found.\"\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n            {/* <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/dashboard'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        Gestión de Usuario\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider> */}\r\n            {/* {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Espere un momento...</Typography.Text>\r\n                    </div> :\r\n                    <Form\r\n                        layout={'vertical'}\r\n                        form={form}\r\n                        initialValues={{\r\n                            layout: 'vertical',\r\n                        }}\r\n                    >\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Identificación\">\r\n                                    <Input id=\"documento\" name=\"documento\" label='Identificación' type='text' value={usuario.documento} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Tipo de Identificación\">\r\n                                    <Select defaultValue={usuario.tipoDocumento} value={usuario.tipoDocumento} onChange={onChangeTipoIdentificacion}>\r\n                                        {\r\n                                            tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Nombres\">\r\n                                    <Input id=\"nombres\" name=\"nombres\" label='Nombres' type='text' value={usuario.nombres} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Apellidos\">\r\n                                    <Input id=\"apellidos\" name=\"apellidos\" label='Apellidos' type='text' value={usuario.apellidos} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                                <Form.Item label=\"Dirección\">\r\n                                    <Input id=\"direccion\" name=\"direccion\" label='Dirección' type='text' value={usuario.direccion} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Email\">\r\n                                    <Input id=\"email\" name=\"email\" label='Email' type='text' value={usuario.email} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Teléfono\">\r\n                                    <Input id=\"telefono\" name=\"telefono\" label='Teléfono' type='text' value={usuario.telefono} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Login\">\r\n                                    <Input id=\"login\" name=\"login\" label='Login' type='text' value={usuario.login} onChange={onChange} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Contraseña\">\r\n                                    <Input.Password id=\"password\" name=\"password\" label='Contraseña' value={usuario.password} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Estado\">\r\n                                    <Select\r\n                                        defaultValue={usuario.estado.catValor}\r\n                                        value={usuario.estado.catValor}\r\n                                        onChange={onChangeEstado}\r\n                                    >\r\n                                        {\r\n                                            estados && estados.map(e => renderEstado(e))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" onClick={(e) => guardar(e)} disabled={isSaving}\r\n                                loading={isSaving}\r\n                            >\r\n                                {isSaving ? 'Guardando...' : 'Guardar'}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsSaving(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0) {\r\n                handleUpload(usuarioActualizado)\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(\"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setError(\"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>Return to home</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        New User\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Please wait...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='Upload your profile picture'\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >Select Photo</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label=\"First Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete first Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label=\"Last Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete last Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label='Sex'\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select sex',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label=\"Date of birth\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select date of birth',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>ID Number</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                This is the unique identification number issued by the country of residence.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete ID Number',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label=\"Country\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label=\"City\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete city',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Country Code\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country code',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Phone Number\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete phone number',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>Are you currently working?</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                Please write the complete name of the institution.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label=\"Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label=\"Additional Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete additional email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Additional email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Create your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Create your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Confirm your password\"\r\n                                            name='passwordConfirm'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Confirm your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                    specialChar: \"Password has special characters.\",\r\n                                                    number: \"Password has a number.\",\r\n                                                    capital: \"Password has a capital letter.\",\r\n                                                    match: \"Passwords match.\",\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label='Profile'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select profile',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label='State'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select state',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >Cancel</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving}>Save</Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      toast.error(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        toast.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  My Account\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => { formUser.submit() }}>Save</Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `https://mygreenenterprise.org/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={currentlyWorking}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card, Checkbox } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [state, setState] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado, cursoList }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Space direction='horizontal'>\r\n                                <Typography.Text type='secondary'>\r\n                                    {cursoList.length} courses\r\n                                </Typography.Text>\r\n                                <Typography.Text type='secondary'>\r\n                                    {numPostulantes} applicants\r\n                                </Typography.Text>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                View\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        let trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        if (state) {\r\n            trainer = { ...trainer, estado: !state }\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"mgeCard\">\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-4\">\r\n                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                    Trainings\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                <Space>\r\n                                    <Button\r\n                                        type='default'\r\n                                        loading={isLoading}\r\n                                        disabled={isLoading}\r\n                                        style={{ width: '120px' }}\r\n                                        onClick={() => {\r\n                                            fetchData()\r\n                                        }}>Refresh</Button>\r\n                                    <Button\r\n                                        type='primary'\r\n                                        disabled={isLoading}\r\n                                        style={{ width: '120px' }}\r\n                                        onClick={() => {\r\n                                            navigate.push('/trainingnew')\r\n                                        }}>New Training</Button>\r\n                                </Space>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'end', paddingBottom: '15px' }}>\r\n                    <Checkbox checked={state} onChange={(e) => setState(e.target.checked)}>Inactive only</Checkbox>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\"\r\nconst config = { headers: { \"Accept-Language\": 'en_US' } }\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, Alert, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\n\r\nconst baseTraining = {\r\n  entCultura: 'en_US'\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `Then email ${postulant} already exists.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${postulant} successfully added.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${email} successfully removed.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      ...values,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar cursos\r\n        const requests = []\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`It was not possible to add the applicant: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(\"An error occurred.\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      New Training\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >Save Draft</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                      onClick={() => {\r\n                        toast.success('Training published')\r\n                      }}\r\n                    >Publish</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24} style={{ display: 'none' }}>\r\n                <Form.Item\r\n                  name='entCultura'\r\n                  label=\"Culture\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select Culture',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label=\"Country\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select country',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select name='idPais'>\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {/* <Col span={16}>\r\n                <Form.Item\r\n                  name='name'\r\n                  label=\"Training name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete training name',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col> */}\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label=\"Modality\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select modality',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label=\"Start Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select start date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label=\"End Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select end date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='entLimBen'\r\n                  label=\"Number of beneficiaries\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Number of beneficiaries',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber style={{ width: '100%' }} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row >\r\n            <Form layout='vertical' style={{ width: '100%' }}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label='Courses'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select courses',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Form>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label='Applicants emails'\r\n                  extra='Press enter to add email'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete applicants',\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: 'Email is not valid'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList.filter(a => a.posEstado.catValor === 'EST_ENR'))\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.filter(p => p.posEstado.catValor === 'EST_ENR')}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadInformByName, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    download = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Descriptions, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\nimport CertificateService from '../../service/CertificateService'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n  const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              Download\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 2,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n          }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              Comments:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'TYP_INF_WPL' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, approve\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending || isGenerating || isSendingCertificate\r\n                  }}\r\n                  disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                    disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                  >Approve</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, reject\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending || isGenerating || isSendingCertificate }}\r\n                  disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                    disabled={isSavingInform || isSending || isGenerating || isSendingCertificate}\r\n                  >Reject</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Certificate&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Expires: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n              >Download</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const downloadCertificate = async (cerNombre, cerRuta) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        cerNombre,\r\n        cerRuta\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      if (data) toast.success('Attendance successfully saved')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendCertificate = async ({ cerId }) => {\r\n    setIsSendingCertificate(true)\r\n    try {\r\n      const certificate = { cerId }\r\n      const { data } = await certificateService.send({ navigate, certificate })\r\n      if (data) toast.success('Certificate sent successfully')\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSendingCertificate(false)\r\n    }\r\n  }\r\n\r\n  const generate = async ({ idCurso }) => {\r\n    setIsGenerating(true)\r\n    try {\r\n      const course = {\r\n        idCurso: idCurso,\r\n        idPostulante: postulant.posId\r\n      }\r\n      const { data } = await certificateService.generate({ navigate, course })\r\n      const certificate = data.listObject[0]\r\n      toast.success('Certificate generated successfully')\r\n      sendCertificate(certificate)\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n    } finally {\r\n      setIsGenerating(false)\r\n    }\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId, infTipo, infEstado, idCurso }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      if (data) toast.success('Email sent successfully')\r\n      if (infTipo.catValor === 'TYP_INF_FIR' && infEstado.catValor === 'EST_INF_APR') {\r\n        generate({ idCurso })\r\n      } else {\r\n        setLoad(true)\r\n      }\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'TYP_INF_WPL' ? commentWorkplan : catValor === 'TYP_INF_FIR' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = {\r\n      idEntrenamiento: idTraining,\r\n      posId: id\r\n    }\r\n    try {\r\n      const { data } = await postulantService.getByTraining({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].entId.cursoList\r\n        const postulant = data.listObject[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error('An error occurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Role:\r\n                            </Typography.Text>\r\n                            <br />Applicant\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Invited by:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label=\"First Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label=\"Last Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label=\"Sex\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label=\"Date Birth\"\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label=\"Country\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label=\"City\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label=\"Country Code\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label=\"Phone number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label=\"ID Number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label=\"Currenty Working\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label=\"Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label=\"Additional Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Attendance\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >Save</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const fileName = 'WorkplanTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            loading={uploading}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_WPL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Workplan template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Collapse } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n        const fileName = 'FinalReportTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 2,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>\r\n                                            Copy evidence link\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label='URL'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            loading={uploading}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setUploading(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_FIR')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0].infId\r\n            sendLoadEmail(informe)\r\n            toast.success('Evidence sended successfully')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Final Report template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Result } from 'antd'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                w.infEstado.catValor === 'EST_INF_APR'\r\n                            ).length > 0\r\n                                &&\r\n                                postulant.certificadoList.length >= 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <Result\r\n                                        title=\"You will see your certificate once your final report is approved\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/finalreport')\r\n                                                }}\r\n                                            >\r\n                                                Send Final Report\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                                </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography } from 'antd'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Classes = () => {\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        try {\r\n            const { data } = await postulantService.getTraining({ navigate, postulant: { idUsuario: getDatosUsuario().usuarioId } })\r\n            const postulant = data.listObject[0]\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(postulant.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Trainings\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin, Typography } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading, message } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col style={{ textAlign: 'center' }}>\r\n                                <Spin size='large'></Spin>\r\n                                {\r\n                                    message && <Typography.Paragraph>\r\n                                        {message}\r\n                                    </Typography.Paragraph>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    message: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, List, Card, Checkbox, Image, Alert, Tooltip, InputNumber } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst courseService = new CourseService()\r\nconst { Option } = Select\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadCourse, setLoadCourse] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' ?\r\n                            <>\r\n                                <Tooltip title='Click to send invitation email'>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `Then email ${posEmail} already exists.`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${posEmail} successfully saved.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${postulant.posEmail} successfully deleted.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setTraining({\r\n                    ...training,\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setLoadCourse(false)\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        // const training = { idEntrenamiento: id }\r\n        const training = { entId: id }\r\n        try {\r\n            // const { data } = await postulantService.getByTraining({ navigate, training })\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject[0].postulanteList\r\n                setPostulants(postulants)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        const training = {\r\n            entId: values.entId,\r\n            entCultura: values.entCultura,\r\n            entFechaFin: values.entFechaFin\r\n        }\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await trainingService.set({ navigate, training })\r\n            if (data) {\r\n                toast.success(`Training ${data.listObject[0].entNombre} updated successfully`)\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error('Could not send email', { position: 'bottom-center' })\r\n            else\r\n                toast.success('Email sent successfully', { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\", { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (courses.length < 1 || postulants.length < 1) {\r\n            toast.error('Add at least one course and one applicant')\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            entCultura: training.entCultura,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error('Could not send email')\r\n                                    else\r\n                                        toast.success('Email sent successfully')\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\")\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadCourse) {\r\n            fetchCourses()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving || isPublishing || isSendingEmail}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        Edit Training\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >Save Draft</Button>\r\n                                                    <Popconfirm title=\"Are you sure to publish the training?\" okText=\"Yes, publish\" cancelText=\"No\" onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >Publish</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col span={24} style={{ display: 'none' }}>\r\n                                    <Form.Item\r\n                                        name='entId'\r\n                                        label=\"Id Training\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete ID',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name='entCultura'\r\n                                        label=\"Culture\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Select Culture',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                            <Form.Item\r\n                                                name={['entPais', 'catId']}\r\n                                                label=\"Country\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select country',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select>\r\n                                                    {\r\n                                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                    }\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label=\"Trainig name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete trainig name',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label=\"Modality\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select modality',\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'\r\n                                                >\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label=\"Start Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select start date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label=\"End Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select end date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entLimBen'\r\n                                                label=\"Number of beneficiaries\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Number of beneficiaries',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <InputNumber style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Typography.Paragraph>\r\n                                    <Typography.Text type='danger'>*</Typography.Text>&nbsp;Courses\r\n                                </Typography.Paragraph>\r\n                                {\r\n                                    training.entEstado.catValor === 'ACTIVE' ?\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={training.cursoList}\r\n                                            renderItem={({ curNombre }) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            checked\r\n                                                        >\r\n                                                            {curNombre.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                        :\r\n                                        getCatalogos().cursos &&\r\n                                        <List\r\n                                            itemLayout='horizontal'\r\n                                            grid={{ gutter: 15, column: 2 }}\r\n                                            dataSource={getCatalogos().cursos}\r\n                                            renderItem={(item) => (\r\n                                                <List.Item>\r\n                                                    <Card style={{ textAlign: 'center' }}>\r\n                                                        <Checkbox\r\n                                                            disabled={isSaving || isLoadingCourse}\r\n                                                            checked={\r\n                                                                courses.filter(c => c.curNombre.catId === item.catId).length > 0\r\n                                                            }\r\n                                                            onChange={(e) => {\r\n                                                                setCourse({\r\n                                                                    checked: e.target.checked,\r\n                                                                    idNombreCurso: item.catId,\r\n                                                                    curId: courses.filter(c => c.curNombre.catId === item.catId).length > 0 ? courses.filter(c => c.curNombre.catId === item.catId)[0].curId : 0\r\n                                                                })\r\n                                                            }}>\r\n                                                            {item.catNombre}\r\n                                                        </Checkbox>\r\n                                                    </Card>\r\n                                                </List.Item>\r\n                                            )}\r\n                                        />\r\n                                }\r\n                            </Col>\r\n                        </Row >\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={(isLoadingCourse || isSaving || isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label='Applicants emails'\r\n                                                extra='Press enter to add email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete applicants',\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row >\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `https://mygreenenterprise.org/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/trainingapplicant/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nconst trainingService = new TrainingService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 2,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n                            }\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = {\r\n            entId: idTraining\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject[0].cursoList\r\n                const postulant = data.listObject[0].postulanteList.filter(p => p.posId === parseInt(id))[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error('An error occurred')\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `https://mygreenenterprise.org/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />Applicant\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Invited by:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            Attendance\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { deleteBeneficiary, getBeneficiariesByPostulant, getBeneficiaryById, insertBeneficiary, updateBeneficiary, validateBeneficiary } from '../utils/urls'\r\nexport class BeneficiaryService {\r\n    put = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).put(insertBeneficiary(), beneficiary)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(updateBeneficiary(), beneficiary)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiaryById(), beneficiary)\r\n    }\r\n    getByPostulant = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiariesByPostulant(), beneficiary)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(deleteBeneficiary(), beneficiary)\r\n    }\r\n    val = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(validateBeneficiary(), beneficiary)\r\n    }\r\n}\r\n\r\nexport default BeneficiaryService","import React from 'react'\r\nimport { Col, Row, Space, Button, Form, Select, InputNumber, Input, Switch } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            alt={e.catNombre}\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.substr(0, 2).toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n        ></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst Beneficiary = ({ type, beneficiary, saveBeneficiary, isSaving, closeBeneficiary }) => {\r\n    const [formBeneficiary] = Form.useForm()\r\n\r\n    if (type === 1)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name='benTrabaja'\r\n                                label='Are you currently working?'\r\n                                valuePropName='checked'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idNivelInt']}\r\n                                label='Level of instruction'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().educationLevels}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                Save\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n    if (type === 2)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benIdEmpresa']}\r\n                                label='Company ID'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNomEmpresa']}\r\n                                label='Company Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCargo']}\r\n                                label='Job'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNumPer']}\r\n                                label='Number of people'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Row gutter={[10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benHombres']}\r\n                                        label='Men'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benMujeres']}\r\n                                        label='Women'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                Save\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default Beneficiary","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Col, Row, Space, Button, Table, Image, Drawer, Typography, Collapse, Popconfirm, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport { getCatalogos, getDatosUsuario, toCapitalize } from '../../utils/Utils'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport BeneficiaryService from './../../service/BeneficiaryService'\r\nimport Beneficiary from './Beneficiary'\r\n\r\nconst postulantService = new PostulantService()\r\nconst beneficiaryService = new BeneficiaryService()\r\n\r\nconst { Title } = Typography\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst Beneficiaries = () => {\r\n    const navigate = useHistory()\r\n    const { operation } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingBeneficiaries, setIsLoadingBeneficiaries] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n    const [isSending, setIsSending] = useState(false)\r\n    const [postulant, setPostulant] = useState({})\r\n    const [beneficiaryC1, setBeneficiaryC1] = useState(null)\r\n    const [beneficiaryC2, setBeneficiaryC2] = useState(null)\r\n    const [openC1, setOpenC1] = useState(false)\r\n    const [openC2, setOpenC2] = useState(false)\r\n\r\n    const closeBeneficiaryC1 = () => {\r\n        setOpenC1(false)\r\n    }\r\n\r\n    const getBeneficiaryC1 = async ({ benId }) => {\r\n        setBeneficiaryC1(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                idNivelInt: data.listObject[0].benNivelInt.catId,\r\n            }\r\n            setBeneficiaryC1(beneficiary)\r\n            setOpenC1(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC1 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC1()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const closeBeneficiaryC2 = () => {\r\n        setOpenC2(false)\r\n    }\r\n\r\n    const getBeneficiaryC2 = async ({ benId }) => {\r\n        setBeneficiaryC2(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n            }\r\n            setBeneficiaryC2(beneficiary)\r\n            setOpenC2(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC2 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC2()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delBeneficiary = async ({ benId }) => {\r\n        setIsDeleting(true)\r\n        try {\r\n            const { data } = await beneficiaryService.del({ navigate, beneficiary: { benId } })\r\n            if (data) {\r\n                toast.success('Beneficiary successfully removed')\r\n                fetchData(2)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsDeleting(false)\r\n        }\r\n    }\r\n\r\n    const validateBeneficiary = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = await beneficiaryService.val({ navigate, beneficiary })\r\n            if (data)\r\n                toast.success('Beneficiary successfully updated')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendBeneficiaries = async () => {\r\n        setIsSending(true)\r\n    }\r\n\r\n    const renderCourse = ({ curId, curNombre }, posId) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            <Row>\r\n                <Col span={24}\r\n                    style={{ textAlign: 'right' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type='default'\r\n                            loading={isLoading || isLoadingBeneficiaries}\r\n                            disabled={isLoading || isLoadingBeneficiaries || isSending}\r\n                            style={{ width: '130px' }}\r\n                            onClick={() => {\r\n                                fetchData(2)\r\n                            }}>Refresh</Button>\r\n                        {\r\n                            operation === 'registry' &&\r\n                            <Button\r\n                                type='primary'\r\n                                style={{ width: '130px' }}\r\n                                disabled={isLoading || isLoadingBeneficiaries}\r\n                                onClick={() => {\r\n                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                        closeBeneficiaryC1()\r\n                                        const ben = {\r\n                                            idCurso: curId,\r\n                                            idPostulante: posId,\r\n                                            benTrabaja: false,\r\n                                            idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_NAT'))[0].catId\r\n                                        }\r\n                                        setBeneficiaryC1(ben)\r\n                                        setOpenC1(true)\r\n                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                        closeBeneficiaryC2()\r\n                                        const ben = {\r\n                                            idCurso: curId,\r\n                                            idPostulante: posId,\r\n                                            idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_LEG'))[0].catId\r\n                                        }\r\n                                        setBeneficiaryC2(ben)\r\n                                        setOpenC2(true)\r\n                                    }\r\n                                }}>New Beneficiary</Button>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' &&\r\n                            <Popconfirm title=\"Are you sure you want to send the list of beneficiaries?\" okText=\"Yes, send\" cancelText=\"No\" onConfirm={() => sendBeneficiaries()}\r\n                                okButtonProps={{\r\n                                    loading: isSending,\r\n                                    disabled: isSending || isLoading || isLoadingBeneficiaries\r\n                                }}\r\n                            >\r\n                                <Button type='primary'\r\n                                    style={{ width: '130px' }}\r\n                                    loading={isSending}\r\n                                    disabled={isSending || isLoading || isLoadingBeneficiaries}\r\n                                >\r\n                                    {\r\n                                        isSending ? 'Sending' : 'Send'\r\n                                    }\r\n                                </Button>\r\n                            </Popconfirm>\r\n                        }\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                postulant && postulant.beneficiarioList &&\r\n                <Table\r\n                    loading={isLoading || isLoadingBeneficiaries}\r\n                    {...tableProps}\r\n                    rowKey='benId'\r\n                    columns={[\r\n                        {\r\n                            title: '',\r\n                            dataIndex: 'benId',\r\n                            render: (_, { benId }) => <Image key={benId} preview={false} alt='' src='./assets/user.png' width={32} height={32} />\r\n                        },\r\n                        {\r\n                            title: 'ID Number',\r\n                            dataIndex: 'benDocumento',\r\n                            render: (_, { benDocumento }) => `${benDocumento}`,\r\n                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        {\r\n                            title: 'Name',\r\n                            dataIndex: 'benNombres',\r\n                            render: (_, { benNombres }) => `${benNombres}`\r\n                        },\r\n                        {\r\n                            title: 'Country',\r\n                            dataIndex: 'benPais',\r\n                            render: (_, { benPais }) =>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png`}\r\n                                        srcSet={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${benPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                        width=\"32\"\r\n                                        height=\"24\"\r\n                                        alt={benPais.catNombre}></img>\r\n                                </div>\r\n                        },\r\n                        {\r\n                            title: 'City',\r\n                            dataIndex: 'ciudad',\r\n                            render: (_, { ciudad }) => `${ciudad}`,\r\n                            responsive: ['sm', 'md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Sex',\r\n                                    dataIndex: 'benSexo',\r\n                                    render: (_, { benSexo }) => `${benSexo.catNombre}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Job Title',\r\n                                    dataIndex: 'benCargo',\r\n                                    render: (_, { benCargo }) => `${benCargo}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Is Working',\r\n                                    dataIndex: 'benTrabaja',\r\n                                    render: (_, { benTrabaja }) => <>{benTrabaja ? 'Yes' : 'No'}</>,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Company',\r\n                                    dataIndex: 'benNomEmpresa',\r\n                                    render: (_, { benNomEmpresa }) => `${benNomEmpresa}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Ins. Level',\r\n                                    dataIndex: 'benNivelInt',\r\n                                    render: (_, { benNivelInt }) => `${benNivelInt.catNombre}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Total Persons',\r\n                                    dataIndex: 'benNumPer',\r\n                                    render: (_, { benNumPer }) => `${benNumPer}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        {\r\n                            title: 'Actions',\r\n                            dataIndex: '',\r\n                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                <Space>\r\n                                    {\r\n                                        operation === 'registry' &&\r\n                                        <>\r\n                                            <Button type='primary'\r\n                                                icon={<anticons.FolderOpenFilled />}\r\n                                                onClick={() => {\r\n                                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                                        getBeneficiaryC1(record)\r\n                                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                                        getBeneficiaryC2(record)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                            <Popconfirm title=\"Are you sure you want to delete the beneficiary?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={() => delBeneficiary(record)}\r\n                                                okButtonProps={{\r\n                                                    loading: isDeleting,\r\n                                                    disabled: isDeleting\r\n                                                }}\r\n                                            >\r\n                                                <Button type='default'\r\n                                                    danger\r\n                                                    icon={<anticons.DeleteFilled />}\r\n                                                    loading={isDeleting}\r\n                                                    disabled={isDeleting}\r\n                                                />\r\n                                            </Popconfirm>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        operation === 'qualification' &&\r\n                                        <Switch\r\n                                            defaultChecked={record.benValidado}\r\n                                            onChange={(e) => {\r\n                                                validateBeneficiary({ ...record, benValidado: e })\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                </Space>\r\n                            </div>\r\n                        }\r\n                    ]}\r\n                    dataSource={postulant.beneficiarioList.filter(b => b.idCurso === curId)}>\r\n                </Table>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const fetchData = async (typeLoad) => {\r\n        setLoad(false)\r\n        if (typeLoad) {\r\n            if (typeLoad === 1) {\r\n                setIsLoading(true)\r\n            } else if (typeLoad === 2) {\r\n                setIsLoadingBeneficiaries(true)\r\n            }\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            if (typeLoad) {\r\n                if (typeLoad === 1) {\r\n                    setIsLoading(false)\r\n                } else if (typeLoad === 2) {\r\n                    setIsLoadingBeneficiaries(false)\r\n                }\r\n            } else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px 20px 6px 20px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                        <Typography>\r\n                            <Title type='secondary' level={3}>\r\n                                Beneficiaries {` ${toCapitalize(operation)}`}\r\n                            </Title>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row justify='center'>\r\n                {\r\n                    isLoading ?\r\n                        <AlertWait message='Loading...' isLoading={isLoading} />\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId &&\r\n                                    postulant.entId.cursoList &&\r\n                                    postulant.entId.cursoList\r\n                                        .filter(c => c.curId === postulant.informeList.filter(w =>\r\n                                            w.infTipo.catValor === 'TYP_INF_WPL' &&\r\n                                            w.infEstado.catValor === 'EST_INF_APR' &&\r\n                                            w.idCurso === c.curId\r\n                                        )[0].idCurso)\r\n                                        .map(c => renderCourse(c, postulant.posId))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n            <Drawer title=\"Beneficiary\" placement=\"right\" onClose={closeBeneficiaryC1} open={openC1}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC1}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC1 && <Beneficiary type={1} beneficiary={beneficiaryC1} saveBeneficiary={saveBeneficiaryC1} closeBeneficiary={closeBeneficiaryC1} isSaving={isSaving} />\r\n                }\r\n            </Drawer >\r\n            <Drawer title=\"Beneficiary\" placement=\"right\" onClose={closeBeneficiaryC2} open={openC2}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC2}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC2 && <Beneficiary type={2} beneficiary={beneficiaryC2} saveBeneficiary={saveBeneficiaryC2} closeBeneficiary={closeBeneficiaryC2} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beneficiaries","import React, { useState, useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport { Route, useLocation } from \"react-router-dom\";\n\nimport AppTopbar from \"./AppTopbar\";\nimport AppFooter from \"./AppFooter\";\nimport AppRightPanel from \"./AppRightPanel\";\n\nimport { Tooltip } from \"primereact/tooltip\";\n\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./App.scss\";\n\nimport Usuarios from \"./components/usuario\";\nimport Usuario from \"./components/usuario/Usuario\";\nimport Opciones from \"./components/opcion\";\nimport Perfiles from \"./components/perfil\";\nimport Perfil from \"./components/perfil/Perfil\";\n\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport UserInfo from \"./components/dashboard/UserInfo\";\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\nimport Courses from \"./components/courses/Courses\";\nimport Course from \"./components/courses/Course\";\nimport Applicants from \"./components/Applicant/Applicants\";\nimport Applicant from \"./components/Applicant/Applicant\";\nimport WorkPlan from \"./components/workplan/WorkPlan\";\nimport FinalReport from \"./components/finalReport/FinalReport\";\nimport Certificate from \"./components/certificate/Certificate\";\nimport Classes from \"./components/classes/Classes\";\nimport Training from \"./components/training/Training\";\n\nimport { getDatosUsuario, getOpcionesMenu } from \"./utils/Utils\";\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\nimport Beneficiaries from \"./components/beneficiary/Beneficiaries\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst App = (props) => {\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\n  const [sidebarStatic, setSidebarStatic] = useState(true);\n  const [sidebarActive, setSidebarActive] = useState(true);\n  const [menuActive, setMenuActive] = useState(false);\n  const [configActive, setConfigActive] = useState(false);\n  const [rightPanelActive, setRightPanelActive] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\n  const copyTooltipRef = useRef();\n  const location = useLocation();\n\n  const menu = getOpcionesMenu();\n\n  let menuClick;\n  let rightPanelClick;\n  let configClick;\n  let searchClick;\n  let topbarUserMenuClick;\n\n  useEffect(() => {\n    copyTooltipRef &&\n      copyTooltipRef.current &&\n      copyTooltipRef.current.updateTargetEvents();\n  }, [location]);\n\n  useEffect(() => {\n    if (staticMenuMobileActive) {\n      blockBodyScroll();\n    } else {\n      unblockBodyScroll();\n    }\n  }, [staticMenuMobileActive]);\n\n  useEffect(() => {\n    setResetActiveIndex(true);\n    setMenuActive(false);\n  }, []);\n\n  const onMenuItemClick = (event) => {\n    if (!event.item.items) {\n      setResetActiveIndex(true);\n      hideOverlayMenu();\n    }\n    if (!event.item.items && (isSlim() || isHorizontal())) {\n      setMenuActive(false);\n    }\n  };\n\n  const onMenuClick = (event) => {\n    if (menuActive && event.target.className === \"layout-menu-container\") {\n      setResetActiveIndex(true);\n      setMenuActive(false);\n    }\n    menuClick = true;\n  };\n\n  const blockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.add(\"blocked-scroll\");\n    } else {\n      document.body.className += \" blocked-scroll\";\n    }\n  };\n\n  const unblockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.remove(\"blocked-scroll\");\n    } else {\n      document.body.className = document.body.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n    }\n  };\n\n  const onMenuButtonClick = (event) => {\n    menuClick = true;\n    setTopbarUserMenuActive(false);\n    setRightPanelActive(false);\n\n    if (isMobile()) {\n      setStaticMenuMobileActive(\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\n      );\n      if (staticMenuMobileActive) {\n        blockBodyScroll();\n      } else {\n        unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 991;\n  };\n\n  const isHorizontal = () => {\n    return \"sideBar\" === \"horizontal\";\n  };\n\n  const isSlim = () => {\n    return \"sideBar\" === \"slim\";\n  };\n\n  const hideOverlayMenu = () => {\n    setStaticMenuMobileActive(false);\n    unblockBodyScroll();\n  };\n\n  const onRightPanelClick = () => {\n    rightPanelClick = true;\n  };\n\n  const onRightPanelButtonClick = () => {\n    setRightPanelActive((prevState) => !prevState);\n    rightPanelClick = true;\n  };\n\n  const onTopbarSearchToggle = () => {\n    setSearchActive((prevState) => !prevState);\n    searchClick = true;\n  };\n\n  const onTopbarSearchClick = () => {\n    searchClick = true;\n  };\n\n  const onTopbarUserMenuClick = () => {\n    setTopbarUserMenuActive((prevState) => !prevState);\n    topbarUserMenuClick = true;\n  };\n\n  const onDocumentClick = () => {\n    if (!searchClick && searchActive) {\n      setSearchActive(false);\n      searchClick = false;\n    }\n\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\n      setTopbarUserMenuActive(false);\n      topbarUserMenuClick = false;\n    }\n\n    if (!rightPanelClick && rightPanelActive) {\n      setRightPanelActive(false);\n    }\n\n    if (!configClick && configActive) {\n      setConfigActive(false);\n    }\n\n    if (!menuClick) {\n      if (isSlim() || isHorizontal()) {\n        setResetActiveIndex(true);\n        setMenuActive(false);\n      }\n\n      if (staticMenuMobileActive) {\n        hideOverlayMenu();\n      }\n\n      unblockBodyScroll();\n    }\n\n    searchClick = false;\n    topbarUserMenuClick = false;\n    rightPanelClick = false;\n    configClick = false;\n    menuClick = false;\n  };\n\n  const onSidebarMouseOver = () => {\n    setSidebarActive(!isMobile());\n  };\n\n  const onSidebarMouseLeave = () => {\n    setSidebarActive(false);\n  };\n\n  const onToggleMenu = (event) => {\n    menuClick = true;\n    setSidebarStatic((prevState) => !prevState);\n\n    event.preventDefault();\n  };\n\n  const onRootMenuItemClick = () => {\n    setMenuActive((prevMenuActive) => !prevMenuActive);\n  };\n\n  const layoutClassName = classNames(\n    \"layout-wrapper\",\n    {\n      \"layout-sidebar\": \"sidebar\",\n      \"layout-static\": \"sidebar\" && sidebarStatic,\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\n      \"layout-rightpanel-active\": rightPanelActive,\n      \"layout-slim\": \"sidebar\" === \"slim\",\n      \"layout-mobile-active\": staticMenuMobileActive,\n      \"p-input-filled\": \"filled\",\n      \"p-ripple-disabled\": false,\n    },\n    \"layout-menu-light layout-topbar-light\"\n  );\n\n  return (\n    <div\n      className={layoutClassName}\n      onClick={onDocumentClick}\n      style={{ backgroundColor: \"#F0F0F0\" }}\n    >\n      <Tooltip\n        ref={copyTooltipRef}\n        target=\".block-action-copy\"\n        position=\"bottom\"\n        content=\"Copied to clipboard\"\n        event=\"focus\"\n      />\n\n      <AppTopbar\n        topbarScheme={\"light\"}\n        onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive}\n        onTopbarSearchToggle={onTopbarSearchToggle}\n        onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive}\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu}\n        menuActive={menuActive}\n        onRootMenuItemClick={onRootMenuItemClick}\n        mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick}\n        menuMode={\"sidebar\"}\n        sidebarStatic={sidebarStatic}\n        sidebarActive={sidebarActive}\n        onSidebarMouseOver={onSidebarMouseOver}\n        onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu}\n        onMenuButtonClick={onMenuButtonClick}\n        resetActiveIndex={resetActiveIndex}\n        onMenuClick={onMenuClick}\n      />\n\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n      <div className=\"layout-main\">\n        <div\n          className=\"mgeBG\"\n          style={{\n            opacity: \"0.3\",\n            height: \"100vh\",\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: \"0\",\n            right: \"0\",\n          }}\n        >\n          &nbsp;\n        </div>\n        <div className=\"layout-content\">\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return getDatosUsuario() &&\n                getDatosUsuario().opciones &&\n                getDatosUsuario().opciones.length > 0 ? (\n                <Redirect to={getDatosUsuario().opciones[0].actionOpcion} />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/user/:id\" exact component={UserInfo} />\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\n          <Route\n            path=\"/trainingapplicant/:id/:idTraining\"\n            exact\n            component={TrainingApplicant}\n          />\n\n          <Route path=\"/users\" exact component={Usuarios} />\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\n          <Route path=\"/users/:id\" exact component={Usuario} />\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\n\n          <Route path=\"/opciones\" exact component={Opciones} />\n          <Route path=\"/perfiles\" exact component={Perfiles} />\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\n\n          <Route path=\"/training\" exact component={Courses} />\n          <Route path=\"/training/:id\" exact component={Applicants} />\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\n          <Route path=\"/trainingnew\" exact component={Course} />\n\n          <Route path=\"/applicants\" exact component={Applicants} />\n          <Route\n            path=\"/applicants/:id/:idTraining\"\n            exact\n            component={Applicant}\n          />\n\n          <Route path=\"/classes\" exact component={Classes} />\n          <Route path=\"/workplan\" exact component={WorkPlan} />\n          <Route\n            path=\"/beneficiaries/:operation\"\n            exact\n            component={Beneficiaries}\n          />\n          <Route path=\"/finalreport\" exact component={FinalReport} />\n          <Route path=\"/certificate\" exact component={Certificate} />\n        </div>\n\n        <AppFooter />\n      </div>\n      <div className=\"layout-mask modal-in\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\"\r\nimport { getAutenticarUrl, getAutorizarUrl, updatePassword, recoveryPassword, validateUserUuid } from \"../utils/urls\"\r\n\r\nconst config = { headers: { \"Accept-Language\": 'en_US' } }\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales, config)\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales, config)\r\n    }\r\n    validateResetPassword = ({ datos }) => (axios.post(validateUserUuid(), datos, config))\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos, config)\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos, config)\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nconst headers = {\r\n    \"Accept-Language\": 'en_US'\r\n}\r\nexport default class CatalogoService {\r\n    getPaises = () => this.getPorPadre({ catalogo: { catValor: \"CAT_PAISES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catValor: \"CAT_MODALIDAD\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catValor: \"CAT_CURSOS\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catValor: \"CAT_SEXO\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_ENT\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TIP_INF\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_INF\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_REG\" } })\r\n    getEducationLevel = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EDU_LEV\" } })\r\n    getTypePerson = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TYP_PER\" } })\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const visible = true\r\n                const { opciones } = data.listObject[0]\r\n                const opcionesVisible = opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/') >= 0 ? { ...o, visible: false } : { ...o, visible }))\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones: opcionesVisible })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                requests.push(catalogoService.getEducationLevel())\r\n                requests.push(catalogoService.getTypePerson())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject,\r\n                                cursos: results[1].data.listObject,\r\n                                modalidades: results[2].data.listObject,\r\n                                generos: results[3].data.listObject,\r\n                                trainingStatus: results[4].data.listObject,\r\n                                reportType: results[5].data.listObject,\r\n                                reportStatus: results[6].data.listObject,\r\n                                states: results[7].data.listObject,\r\n                                educationLevels: results[8].data.listObject,\r\n                                typePersons: results[9].data.listObject\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        'The requested resource is not available or cannot be found.'\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].perId }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(\r\n                        'The requested resource is not available or cannot be found.'\r\n                    )\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    Welcome back\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    Log in to access your account\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label=\"Log in with your email\"\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter you email',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"Enter your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Enter your password'\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password id=\"password\" name=\"password\" label='Password' />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>Log in</Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>Forgot your password?</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, idInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: idInvitadoPor, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        requests.push(catalogoService.getEducationLevel())\r\n        requests.push(catalogoService.getTypePerson())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject,\r\n                        cursos: results[1].data.listObject,\r\n                        modalidades: results[2].data.listObject,\r\n                        generos: results[3].data.listObject,\r\n                        trainingStatus: results[4].data.listObject,\r\n                        reportType: results[5].data.listObject,\r\n                        reportStatus: results[6].data.listObject,\r\n                        states: results[7].data.listObject,\r\n                        educationLevels: results[8].data.listObject,\r\n                        typePersons: results[9].data.listObject\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('Your account has been created successfully. Please log in.')\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            cultura: 'en_US',\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label='Upload your profile picture'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select your profile picture'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >Select Photo</Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Country Code\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Phone Number\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>Are you currently working?</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                Please write the complete name of the institution.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Additional email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item label=\"Email\"\r\n                                        name='email'\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email is not valid'\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete your email',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >Recover Password</Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useEffect, useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport AlertWait from \"./AlertWait\"\r\nimport toast from \"react-hot-toast\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [validate, setValidate] = useState(true)\r\n    const [isValidating, setIsValidating] = useState(false)\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [isResetting, setIsResetting] = useState(false)\r\n    const [isReset, setIsReset] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const reset = async (values) => {\r\n        setOkMsg(null)\r\n        setIsResetting(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            if (data) {\r\n                setOkMsg(<>Password has been successfully changed. <br />Please log in again.</>)\r\n                setIsReset(true)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(\"The requested resource is not available or cannot be found.\")\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsResetting(false)\r\n        }\r\n    }\r\n\r\n    const validateRequest = async () => {\r\n        setValidate(false)\r\n        setIsValidating(true)\r\n        try {\r\n            const datos = { usuId: id, uuid }\r\n            const { data } = await cuentaService.validateResetPassword({ datos })\r\n            if (data) setIsValid(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(\"The requested resource is not available or cannot be found.\")\r\n            } else if (response.status === 409) {\r\n                setIsValid(false)\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        }\r\n        finally {\r\n            setIsValidating(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validate) validateRequest()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                <Row justify='center'>\r\n                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n\r\n                                {\r\n                                    isValidating ?\r\n                                        <>\r\n                                            <AlertWait isLoading={isValidating} message='Please wait...' />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {\r\n                                                isValid ?\r\n                                                    <>\r\n                                                        {\r\n                                                            isReset && okMsg ?\r\n                                                                <>\r\n                                                                    <Result\r\n                                                                        status='success'\r\n                                                                        title='Password Reset'\r\n                                                                        subTitle={okMsg}\r\n                                                                        extra={\r\n                                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                                onClick={() => {\r\n                                                                                    navigate.push('/login')\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Log in\r\n                                                                            </Button>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                                                    <Form\r\n                                                                        layout={'vertical'}\r\n                                                                        onFinish={reset}\r\n                                                                    >\r\n                                                                        <Form.Item label=\"New Password\"\r\n                                                                            name='password'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Complete new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item label=\"Confirm new password\"\r\n                                                                            name='passwordConfirm'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Confirme new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item>\r\n                                                                            <PasswordChecklist\r\n                                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                                minLength={8}\r\n                                                                                value={password}\r\n                                                                                valueAgain={passwordConfirm}\r\n                                                                                messages={{\r\n                                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                                    specialChar: \"Password has special characters.\",\r\n                                                                                    number: \"Password has a number.\",\r\n                                                                                    capital: \"Password has a capital letter.\",\r\n                                                                                    match: \"Passwords match.\",\r\n                                                                                }}\r\n                                                                                onChange={(isValid) => { }}\r\n                                                                            />\r\n                                                                        </Form.Item>\r\n                                                                        <div style={{\r\n                                                                            paddingTop: '10px'\r\n                                                                        }}>\r\n                                                                            <Form.Item>\r\n                                                                                <Button\r\n                                                                                    type='primary'\r\n                                                                                    htmlType='submit'\r\n                                                                                    loading={isResetting}\r\n                                                                                    disabled={isResetting}\r\n                                                                                    block>\r\n                                                                                    {\r\n                                                                                        isResetting ? 'Changing Password' : 'Reset Password'\r\n                                                                                    }\r\n                                                                                </Button>\r\n                                                                            </Form.Item>\r\n                                                                        </div>\r\n                                                                    </Form>\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <Result\r\n                                                        status='404'\r\n                                                        title='Page does not exist.'\r\n                                                        subTitle='Sorry, the page you visited does not exist.'\r\n                                                        extra={\r\n                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/login')\r\n                                                                }}\r\n                                                            >\r\n                                                                Log in\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                            }\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Layout >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from \"react\";\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport RecuperarPassword from \"./pages/RecuperarPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nexport const ctx = React.createContext();\n\nconst AppWrapper = (props) => {\n  let location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  const [colorScheme, setColorScheme] = useState(\"light\");\n\n  switch (props.location.pathname) {\n    case \"/login\":\n      return (\n        <Route\n          path=\"/login\"\n          render={() => <Login colorScheme={colorScheme} />}\n        />\n      );\n    case \"/signup\":\n      return (\n        <Route\n          path=\"/signup\"\n          render={() => <Signup colorScheme={colorScheme} />}\n        />\n      );\n    case \"/recover\":\n      return (\n        <Route\n          path=\"/recover\"\n          render={() => <RecuperarPassword colorScheme={colorScheme} />}\n        />\n      );\n    case \"/reset\":\n      return (\n        <Route\n          path=\"/reset\"\n          render={() => <ResetPassword colorScheme={colorScheme} />}\n        />\n      );\n    default:\n      return <App setColorScheme={setColorScheme} />;\n  }\n};\n\nexport default withRouter(AppWrapper);\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}