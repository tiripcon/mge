{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","utils/Internationalization.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/RestorePassword.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CountryTrainingService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","service/InformService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","pages/AlertWait.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","service/BeneficiaryService.jsx","service/CertificateService.jsx","components/beneficiary/Beneficiary.jsx","components/beneficiary/Beneficiaries.jsx","components/usuario/RestorePasswordUser.jsx","pages/ResetPasswordUser.jsx","App.js","service/CuentaService.jsx","service/CatalogoService.jsx","pages/Login.jsx","pages/Signup.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getOpcionesMenu","informs","w","infTipo","catValor","infEstado","opcionesSubOpciones","undefined","getTypeContent","fileName","getCulture","cultura","labels","contents","id","culture","getLabel","c","l","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perNombre","push","gutter","removeItem","AppFooter","display","AppRightPanel","headers","AxiosInstance","navigate","axiosInstance","axios","create","interceptors","request","use","config","token","toast","error","Promise","reject","response","status","apiURL","getCatalogosPorPadreUrl","updateTraining","downloadInformByName","downloadCertificateByName","downloadCertificateByUuid","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","new","put","set","patch","upLoadPhoto","datos","getLessPostulants","resetPassword","Paragraph","Typography","RestorePassword","user","isReseting","closeResetPassword","password","setPassword","validForm","setValidForm","sendNotification","setSendNotification","strong","email","layout","initialValues","onFinish","Item","name","rules","required","message","Password","onChange","minLength","messages","specialChar","number","capital","isValid","valuePropName","defaultChecked","checked","fieldNames","showSearch","options","email2","htmlType","loading","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setUser","setError","documento","setDocumento","setEmail","setNombres","estado","setEstado","openResetPassword","setOpenResetPassword","setIsReseting","columnas","title","render","_","imagen","width","dataIndex","direction","responsive","codigotel","celular","record","usuId","values","a","md5","data","success","messageText","fetchData","estadoId","listObject","subTitle","extra","span","justify","Title","level","xs","sm","md","lg","xl","Group","states","s","catId","catNombre","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","rowClassName","placement","onClose","open","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","fileList","setFileList","onRemove","file","newFileList","slice","splice","beforeUpload","URL","createObjectURL","handleUpload","FormData","append","update","trabaja","countryCode","sexoId","sexo","paisId","pais","usuarioActualizado","newUsuario","fechanac","moment","$d","align","xxl","multiple","generos","optionFilterProp","paises","p","catDescripcion","srcSet","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","requests","forEach","all","then","results","catch","msgError","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","form","opcIcono","PerfilService","perfil","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","guardar","perfilActualizado","eliminar","tableProps","statistics","hoverable","background","color","precision","prefix","suffix","description","Dashboard","users","setUsers","valueStyle","renderStatistics","tip","TrainingService","getByTraining","trainer","getById","training","pub","trainingService","UserInfo","trainings","setTrainings","fetchTrainings","idUsuario","centered","letterSpacing","readOnly","t","entEstado","entFechaFin","entFechaIni","entId","entNombre","entModalidad","entPais","numPostulantes","marginBottom","reverse","renderTraining","showIcon","borderRadius","border","UsuarioNew","passwordConfirm","setPasswordConfirm","insert","fetchProfiles","valueAgain","match","User","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","state","setState","courses","setCourses","paddingBottom","cursoList","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CountryTrainingService","countryTraining","CourseService","course","baseTraining","entCultura","postulantService","countryTrainingService","courseService","Course","formPostulante","postulants","setPostulants","setPaises","setMessage","selectedModality","setSelectedModality","startDate","setStartDate","endDate","setEndDate","removePostulant","newPostulantsList","save","idRegion","idModalidad","idEstado","trainingStatus","regions","mode","option","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","cursos","resetFields","posEmail","closeIcon","Applicants","setCourse","applicants","setApplicants","postulanteList","posEstado","entRegion","criteria","searchCriteria","ciudad","filteredCourse","asistenciaList","asiValor","informeList","curNombre","substr","idCurso","curId","certificadoList","tc","cerEstado","posId","AttendanceService","attendance","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","attendanceService","informService","panelStyle","backgroundColor","Applicant","idTraining","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","isDownloading","setIsDownloading","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","downloadInform","column","eviUrl","whiteSpace","TextArea","showCount","maxLength","setInform","reportStatus","danger","renderInform","downloadCertificate","cerUuid","cerNombre","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","stringify","xhr","blob","Blob","saveAs","setAttendance","sendRateEmail","informe","idEntrenamiento","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","cerFechaCad","cerId","cerFechaReg","cerRuta","renderCertificate","WorkPlan","setPostulant","uploading","setUploading","sending","setSending","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","reportType","setItem","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","idInforme","sendFinalReport","informInserted","newInform","downloadFinalReportTemplate","beneficiarioList","entLimBen","f","Certificate","Classes","AlertWait","Training","loadPostulant","setLoadPostulant","isLoadingCountry","setIsLoadingCountry","isLoadingCourse","setIsLoadingCourse","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","setCountry","country","fetchCountries","newCourse","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","countries","countryTrainingList","paePais","modTraining","envios","reduce","promise","fn","resolve","flag","idPais","onDeselect","paeId","idNombreCurso","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","BeneficiaryService","beneficiary","getByPostulant","val","CertificateService","generate","send","certificate","downloadByUuid","renderPaisValor","Beneficiary","saveBeneficiary","closeBeneficiary","formBeneficiary","editDisabled","educationLevels","beneficiaryService","certificateService","confirm","Modal","Beneficiaries","operation","isOpening","setIsOpening","isLoadingBeneficiaries","setIsLoadingBeneficiaries","beneficiaryC1","setBeneficiaryC1","beneficiaryC2","setBeneficiaryC2","openC1","setOpenC1","openC2","setOpenC2","benId","selectedBeneficiary","setSelectedBeneficiary","openDeleteBeneficiary","setOpenDeleteBeneficiary","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","closeBeneficiaryC1","getBeneficiaryC1","idTipo","benTipo","benPais","idSexo","benSexo","idNivelInt","benNivelInt","saveBeneficiaryC1","newBeneficiary","time","closeBeneficiaryC2","getBeneficiaryC2","saveBeneficiaryC2","confirmDeleteBeneficiary","delBeneficiary","validateBeneficiary","sendCertificate","idPostulante","sendBeneficiaries","onOk","b","benTrabaja","typePersons","catReferencia","benDocumento","benNombres","benCargo","benNomEmpresa","benNumPer","benValidado","typeLoad","Collapse","confirmLoading","onCancel","RestorePasswordUser","passwordNew","setPasswordNew","passwordNewConfirm","setPasswordNewConfirm","oldpassword","console","log","ResetPasswordUser","fetchUser","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","location","useLocation","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","onRightPanelClick","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","validateResetPassword","recoveryPassword","updatePassword","CatalogoService","getPaises","getPorPadre","catalogo","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","getEducationLevel","getTypePerson","getRegion","getCatalogo","cuentaService","catalogoService","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","opcionesVisible","mgeCatalogos","statusText","textTransform","actions","renderPerfil","backgroundImage","renderError","messageCode","Signup","search","decodeURIComponent","uuid","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","invitadopor","fetchCatalogos","registrar","RecuperarPassword","okMsg","setOkMsg","emailSent","setEmailSent","recuperar","banner","ResetPassword","setValidate","isValidating","setIsValidating","setIsValid","isResetting","setIsResetting","isReset","setIsReset","reset","validateRequest","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.46453549.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\n      </div>\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nexport const toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nconst getInforms = () => localStorage.getItem('mgeInformList') ? JSON.parse(localStorage.getItem('mgeInformList')) : []\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const informs = getInforms()\r\n    let opciones = getDatosUsuario().opciones || []\r\n    //  Si existe informes se muestran las opciones de beneficiarios para registro y calificación.\r\n    if (informs.length > 1) {\r\n        // Si existe un WP aprobado y no existe un reporte final aprobado se habilita el registro de beneficiarios.\r\n        if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/registry') >= 0 ? { ...o, visible: true } : { ...o }))\r\n        else if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/qualification') >= 0 ? { ...o, visible: true } : { ...o }))\r\n    }\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined && o.visible === true)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getCultures = () => [\r\n    {\r\n        id: 'es_EC',\r\n        value: 'Español'\r\n    },\r\n    {\r\n        id: 'en_US',\r\n        value: 'English'\r\n    }\r\n]\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import { getDatosUsuario } from \"./Utils\"\r\nexport const getCulture = () => getDatosUsuario().cultura || 'en_US'\r\nexport const labels = {\r\n    welcomeBack: 'welcomeBack',\r\n    loginAccess: 'loginAccess',\r\n    emailLogin: 'emailLogin',\r\n    passwordLogin: 'passwordLogin',\r\n    login: 'login',\r\n    enterEmail: 'enterEmail',\r\n    enterPassword: 'enterPassword',\r\n    emailNotValid: 'emailNotValid',\r\n    forgotPassword: 'forgotPassword',\r\n    recoverPassword: 'recoverPassword',\r\n    email: 'email',\r\n    completeEmail: 'completeEmail',\r\n    resourceNotAvailable: 'resourceNotAvailable',\r\n    resetPassword: 'resetPassword',\r\n    view: 'view',\r\n    edit: 'edit',\r\n\r\n    ok: 'ok',\r\n    save: 'save',\r\n    accept: 'accept',\r\n    yes: 'yes',\r\n    no: 'no',\r\n    cancel: 'cancel',\r\n    minimumBeneficiaries: 'minimumBeneficiaries',\r\n    beneficiaryTitle: 'beneficiaryTitle',\r\n    beneficiariesTitle: 'beneficiariesTitle',\r\n    deleteBeneficiaryTitle: 'deleteBeneficiaryTitle',\r\n    reConfirmDeleteBeneficiary: 'reConfirmDeleteBeneficiary',\r\n    sendBeneficiaryListTitle: 'sendBeneficiaryListTitle',\r\n    sendBeneficiaryListConfirm: 'sendBeneficiaryListConfirm'\r\n}\r\nconst contents = [\r\n    { id: 'welcomeBack', labels: [{ culture: 'en_US', label: 'Welcome back' }, { culture: 'es_EC', label: 'Bienvenido' }] },\r\n    { id: 'loginAccess', labels: [{ culture: 'en_US', label: 'Log in to access your account' }, { culture: 'es_EC', label: 'Ingresa para acceder a tu cuenta' }] },\r\n    { id: 'emailLogin', labels: [{ culture: 'en_US', label: 'Log in with your email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'passwordLogin', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'login', labels: [{ culture: 'en_US', label: 'Log in' }, { culture: 'es_EC', label: 'Ingresar' }] },\r\n    { id: 'enterEmail', labels: [{ culture: 'en_US', label: 'Enter you email' }, { culture: 'es_EC', label: 'Ingresa tu correo' }] },\r\n    { id: 'enterPassword', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Ingresa tu contraseña' }] },\r\n    { id: 'emailNotValid', labels: [{ culture: 'en_US', label: 'Email is not valid' }, { culture: 'es_EC', label: 'Correo no válido' }] },\r\n    { id: 'forgotPassword', labels: [{ culture: 'en_US', label: 'Forgot your password?' }, { culture: 'es_EC', label: '¿Olvidaste tu contraseña?' }] },\r\n    { id: 'recoverPassword', labels: [{ culture: 'en_US', label: 'Recover password' }, { culture: 'es_EC', label: 'Recuperar Contraseña' }] },\r\n    { id: 'email', labels: [{ culture: 'en_US', label: 'Email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'completeEmail', labels: [{ culture: 'en_US', label: 'Complete your email' }, { culture: 'es_EC', label: 'Ingresa tu correo' }] },\r\n    { id: 'resourceNotAvailable', labels: [{ culture: 'en_US', label: 'The requested resource is not available or cannot be found.' }, { culture: 'es_EC', label: 'El recurso solicitado no está disponible o no existe.' }] },\r\n    { id: 'resetPassword', labels: [{ culture: 'en_US', label: 'Reset password' }, { culture: 'es_EC', label: 'Restablecer contraseña' }] },\r\n    { id: 'view', labels: [{ culture: 'en_US', label: 'View' }, { culture: 'es_EC', label: 'Ver' }] },\r\n    { id: 'edit', labels: [{ culture: 'en_US', label: 'Edit' }, { culture: 'es_EC', label: 'Editar' }] },\r\n\r\n    {\r\n        id: 'ok',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'OK'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'OK'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'save',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Save'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Guardar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'accept',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Accept'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Aceptar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'yes',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Yes'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Si'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'no',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'No'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'No'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'cancel',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Cancel'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Cancelar'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'minimumBeneficiaries',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Minimum Beneficiaries'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Mínimo de Beneficiaries'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'beneficiaryTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Beneficiary'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Beneficiario'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'beneficiariesTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Beneficiaries'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Beneficiaries'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'deleteBeneficiaryTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Delete Beneficiary'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Eliminar Beneficiario'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'reConfirmDeleteBeneficiary',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'If you do not meet the minimum number of registered beneficiaries, your final report will be disabled. Continue anyway?'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Si no cumple con el mínimo de beneficiarios registrados se deshabilitara su reporte final. ¿Continuar de todos modos?'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sendBeneficiaryListTitle',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Send Beneciary List'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Enviar Lista de Beneciarios'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sendBeneficiaryListConfirm',\r\n        labels: [\r\n            {\r\n                culture: 'en_US',\r\n                label: 'Check beneficiary qualification/participation. Once sent, further editing will not be allowed and the certificate will be generated. Are you sure you want to send the list of beneficiaries?'\r\n            },\r\n            {\r\n                culture: 'es_EC',\r\n                label: 'Verifique la calificación/participación de los beneficiarios. Una vez enviado, no se permitirán más ediciones y se generará el certificado. ¿Estás seguro de que quieres enviar la lista de beneficiarios?'\r\n            }\r\n        ]\r\n    }\r\n]\r\nexport const getLabel = (id) => contents.filter(c => c.id === id)[0].labels.filter(l => l.culture === getCulture())[0].label || 'Label undefined'\r\n","import React, { useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport AppMenu from \"./AppMenu\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Typography } from \"antd\";\nimport { getDatosUsuario } from \"./utils/Utils\";\nimport { getLabel, labels } from \"./utils/Internationalization\";\n\nconst AppTopbar = (props) => {\n  const history = useHistory();\n  const searchPanelDesktop = useRef(null);\n  const searchPanelMobile = useRef(null);\n\n  useEffect(() => {\n    if (props.searchActive) {\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\n      else searchPanelMobile.current.focus();\n    }\n  }, [props.searchActive]);\n\n  const datosUsuario = (e) => {\n    history.push(\"/myaccount\");\n  };\n\n  const goResetPassword = () => history.push(\"/resetPassword\");\n\n  const cerrarSesion = (e) => {\n    localStorage.removeItem(\"mgeToken\");\n    localStorage.removeItem(\"mgeDatosUsuario\");\n    localStorage.removeItem(\"mgeInformList\");\n    history.push(\"/login\");\n  };\n\n  const logo = {\n    fontSize: \"1.5em\",\n    padding: 0,\n    margin: 0,\n  };\n\n  return (\n    <div className=\"layout-topbar\">\n      <div className=\"layout-topbar-wrapper\">\n        <div className=\"layout-topbar-left\">\n          <button\n            tabIndex=\"0\"\n            className=\"menu-button p-link\"\n            onClick={props.onMenuButtonClick}\n          >\n            <i className=\"pi pi-bars\"></i>\n          </button>\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\n              MG\n            </span>\n            <span className=\"mge mge-bold mge-green\" style={logo}>\n              E\n            </span>\n          </div>\n        </div>\n\n        <AppMenu\n          menuMode={props.menuMode}\n          sidebarActive={props.sidebarActive}\n          sidebarStatic={props.sidebarStatic}\n          model={props.menu}\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          onMobileMenuActive={props.onMobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          onSidebarMouseOver={props.onSidebarMouseOver}\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\n          onToggleMenu={props.onToggleMenu}\n          resetActiveIndex={props.resetActiveIndex}\n          onMenuClick={props.onMenuClick}\n        />\n\n        <div className=\"layout-topbar-right\">\n          <ul className=\"layout-topbar-actions\">\n            <li\n              className={classNames(\"topbar-item user-profile\", {\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\n              })}\n            >\n              <button\n                className=\"p-link\"\n                style={{ cursor: \"pointer\" }}\n                onClick={props.onTopbarUserMenuClick}\n              >\n                {getDatosUsuario() && (\n                  <Row>\n                    <Col\n                      style={{\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        textAlign: \"right\",\n                        lineHeight: \"1em\",\n                      }}\n                    >\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\n                        {`${getDatosUsuario().nombres || \"\"} ${\n                          getDatosUsuario().apellidos || \"\"\n                        }`}\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\n                          <>\n                            <br />\n                            <Typography.Text\n                              type=\"secondary\"\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\n                            >\n                              {`${getDatosUsuario().perfiles[0].perNombre}`}\n                            </Typography.Text>\n                          </>\n                        )}\n                      </Typography.Text>\n                    </Col>\n                    <Col>\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\n                    </Col>\n                  </Row>\n                )}\n              </button>\n              <ul className=\"fadeInDown\">\n                <li onClick={datosUsuario}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-user-gear\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Profile</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                <li onClick={goResetPassword}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-key\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>{getLabel(labels.resetPassword)}</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n                <li onClick={cerrarSesion}>\n                  <Row gutter={[10, 0]}>\n                    <Col>\n                      <i\n                        className=\"fa-solid fa-right-from-bracket\"\n                        style={{ fontSize: \"1.5em\" }}\n                      ></i>\n                    </Col>\n                    <Col>\n                      <button className=\"p-link\">\n                        <span>Sign out</span>\n                      </button>\n                    </Col>\n                  </Row>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppTopbar;\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from \"react\";\n\nconst AppRightPanel = (props) => {\n  return <></>;\n//   return (\n//     <div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n//       <div className=\"rightpanel-wrapper\">\n//         <div className=\"rightpanel-section weather-section\">\n//           <div className=\"section-header\">\n//             <h6>Today</h6>\n//           </div>\n//           <div className=\"weather\">\n//             <img\n//               src=\"assets/demo/images/rightpanel/icon-sun.svg\"\n//               alt=\"freya-layout\"\n//             />\n//             <div className=\"weather-info\">\n//               <h6>Ankara, 22 May</h6>\n//               <h1>24º</h1>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n};\n\nexport default AppRightPanel;\n","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport { getCulture } from './Internationalization'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst headers = {\r\n    \"Accept-Language\": getCulture()\r\n}\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                localStorage.removeItem('mgeInformList')\r\n                toast.error('The session has expired. Please log in again.')\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    localStorage.removeItem('mgeInformList')\r\n                    toast.error('The session has expired. Please log in again.')\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","// SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY EN ARCHIVO package.json\r\n// QA\r\n// \"proxy\": \"http://20.65.110.204:44613\",\r\n// PRODUCCION\r\n// \"proxy\": \"http://20.65.110.204:8080\",\r\n// \"proxy\": \"https://20.65.110.204:8081\",\r\n\r\nconst apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n//SERVICIOS MGE\r\n\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/insertCatalog`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogServiceRest/getCatalogByFilter`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/updateCatalog`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/deleteCatalog`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogServiceRest/getCatalogById`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsListByFather`\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsList`\r\n\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OptionServiceRest/insertOption`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OptionServiceRest/deleteOption`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OptionServiceRest/updateOption`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OptionServiceRest/getOptionsListByFather`\r\nexport const getOpcionesUrl = () => `${apiURL}/OptionServiceRest/getOptionsList`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OptionServiceRest/getOptionById`\r\n\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/ProfileServiceRest/insertProfile`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/ProfileServiceRest/updateProfile`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/ProfileServiceRest/deleteProfile`\r\nexport const getPerfilesUrl = () => `${apiURL}/ProfileServiceRest/getProfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/ProfileServiceRest/getProfileById`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/ProfileOptionServiceRest/getOptionsByProfileList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/insertProfileOption`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOptionServiceRest/updateProfileOption`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/deleteProfileOption`\r\n\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UserServiceRest/getUsersListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UserServiceRest/getUserById`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UserServiceRest/getUsersLessPostulants`\r\nexport const getAutenticarUrl = () => `${apiURL}/UserServiceRest/authenticateUser`\r\nexport const getAutorizarUrl = () => `${apiURL}/UserServiceRest/authorizeUser`\r\nexport const updatePassword = () => `${apiURL}/UserServiceRest/updatePassword`\r\nexport const resetPassword = () => `${apiURL}/UserServiceRest/resetPassword`\r\nexport const recoveryPassword = () => `${apiURL}/UserServiceRest/recoveryPassword`\r\nexport const validateUserUuid = () => `${apiURL}/UserServiceRest/validateUserUuid`\r\nexport const addProfileUser = () => `${apiURL}/UserServiceRest/addProfileUser`\r\nexport const insertUsuario = () => `${apiURL}/UserServiceRest/insertUser`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UserServiceRest/updateUser`\r\nexport const enrollUsuario = () => `${apiURL}/UserServiceRest/enrollPostulant`\r\nexport const deletePerfilUsuario = () => `${apiURL}/UserServiceRest/deletePerfilUsuario`\r\nexport const getUsuariosUrl = () => `${apiURL}/UserServiceRest/getUsersList`\r\nexport const uploadPhotoUser = () => `${apiURL}/UserServiceRest/uploadPhotoUser`\r\n\r\nexport const insertTraining = () => `${apiURL}/TrainingServiceRest/insertTraining`\r\nexport const updateTraining = () => `${apiURL}/TrainingServiceRest/updateTraining`\r\nexport const getTrainingById = () => `${apiURL}/TrainingServiceRest/getTrainingById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/TrainingServiceRest/getTrainingByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/TrainingServiceRest/getTrainingList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulantServiceRest/insertPostulant`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulantServiceRest/sendEmailRegistry`\r\nexport const sendEmailEnroll = () => `${apiURL}/PostulantServiceRest/sendEmailEnroll`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulantServiceRest/getPostulantByTraining`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulantServiceRest/getTrainingByPostulant`\r\nexport const deletePostulant = () => `${apiURL}/PostulantServiceRest/deletePostulant`\r\nexport const validatePostulant = () => `${apiURL}/PostulantServiceRest/validatePostulant`\r\n\r\nexport const insertCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/insertCountryTraining`\r\nexport const getCountryTrainingByTraining = () => `${apiURL}/CountryTrainingServiceRest/getCountryTrainingByTraining`\r\nexport const deleteCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/deleteCountryTraining`\r\n\r\nexport const insertCourse = () => `${apiURL}/CourseServiceRest/insertCourse`\r\nexport const getCourseByTraining = () => `${apiURL}/CourseServiceRest/getCoursesByTraining`\r\nexport const deleteCourse = () => `${apiURL}/CourseServiceRest/deleteCourse`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AssistanceServiceRest/insertAssistance`\r\nexport const getAttendanceById = () => `${apiURL}/AssistanceServiceRest/getAssistanceById`\r\nexport const updateAttendance = () => `${apiURL}/AssistanceServiceRest/updateAssistance`\r\n\r\nexport const insertInform = () => `${apiURL}/ReportServiceRest/insertReport`\r\nexport const updateInform = () => `${apiURL}/ReportServiceRest/updateReport`\r\nexport const getInformById = () => `${apiURL}/ReportServiceRest/getReportById`\r\nexport const downloadInformByName = () => `${apiURL}/ReportServiceRest/downloadReportByName`\r\nexport const downloadWorkplan = () => `${apiURL}/ReportServiceRest/downloadWorkPlan`\r\nexport const downloadFinalReport = () => `${apiURL}/ReportServiceRest/downloadFinalReport`\r\nexport const sendEmailLoadInform = () => `${apiURL}/ReportServiceRest/sendEmailLoadReport`\r\nexport const sendEmailRateInform = () => `${apiURL}/ReportServiceRest/sendEmailRateReport`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenceServiceRest/insertEvidence`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificateServiceRest/generateCertificate`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificateServiceRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificateServiceRest/downloadCertificateByName`\r\nexport const downloadCertificateByUuid = () => `${apiURL}/CertificateServiceRest/downloadCertificateByUuid`\r\n\r\nexport const insertBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/insertBeneficiary`\r\nexport const updateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/updateBeneficiary`\r\nexport const getBeneficiaryById = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiaryById`\r\nexport const getBeneficiariesByPostulant = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiariesByPostulant`\r\nexport const deleteBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/deleteBeneficiary`\r\nexport const validateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/validateBeneficiary`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, resetPassword, uploadPhotoUser } from \"./../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\nconst config = { headers: { \"Accept-Language\": getCulture() } }\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos, config)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n    resetPassword = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(resetPassword(), usuario)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Checkbox, Form, Input, Select, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePassword = ({ user, resetPassword, isReseting, closeResetPassword }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [sendNotification, setSendNotification] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user, sendNotification }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label='Usuario'\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label='Password'\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Complete password'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\"]}\r\n                    minLength={8}\r\n                    value={password}\r\n                    messages={{\r\n                        minLength: \"Password has more than 8 characters.\",\r\n                        specialChar: \"Password has special characters.\",\r\n                        number: \"Password has a number.\",\r\n                        capital: \"Password has a capital letter.\",\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Form.Item\r\n                    name='sendNotification'\r\n                    valuePropName='checked'\r\n                >\r\n                    <Checkbox defaultChecked={false} onChange={e => setSendNotification(e.target.checked)}>Send notification</Checkbox>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='email'\r\n                    label='Email'\r\n                    rules={[\r\n                        {\r\n                            required: sendNotification,\r\n                            message: 'Select email'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        fieldNames={{\r\n                            label: 'value',\r\n                            value: 'id'\r\n                        }}\r\n                        showSearch\r\n                        options={[\r\n                            {\r\n                                id: user.email,\r\n                                value: user.email\r\n                            },\r\n                            {\r\n                                id: user.email2,\r\n                                value: user.email2\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n                <Space>\r\n                    <Button onClick={closeResetPassword}\r\n                        disabled={isReseting}\r\n                    >Cancel</Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? 'Reseting' : 'Reset Password'\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePassword","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space, Tooltip, Drawer } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport RestorePassword from './RestorePassword'\r\nimport md5 from 'md5'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const [openResetPassword, setOpenResetPassword] = useState(false)\r\n  const [isReseting, setIsReseting] = useState(false)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  }\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'nombres',\r\n      render: (_, r) =>\r\n        <Space direction='horizontal'>\r\n          <span>{r.nombres} {r.apellidos}</span>\r\n          <span className=' mgeKey'>\r\n            {\r\n              (\r\n                isReseting && <anticons.LoadingOutlined />\r\n              ) ||\r\n              <Tooltip\r\n                title={getLabel(labels.resetPassword)}\r\n                onClick={\r\n                  () => {\r\n                    setIsReseting(true)\r\n                    setUser(null)\r\n                    setTimeout(() => {\r\n                      setIsReseting(false)\r\n                      setUser(r)\r\n                      setOpenResetPassword(true)\r\n                    }, 250)\r\n                  }\r\n                }\r\n              >\r\n                <i\r\n                  style={{ cursor: 'pointer' }}\r\n                  className=\"fa-solid fa-key\"></i>\r\n              </Tooltip>\r\n            }\r\n          </span>\r\n        </Space>\r\n    },\r\n    {\r\n      title: 'ID Number',\r\n      dataIndex: 'documento',\r\n      responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      render: (_, record) => <Button type='primary' href={`/#/users/${record.usuId}`}>View</Button>\r\n    }\r\n  ]\r\n\r\n  const resetPassword = async (values) => {\r\n    setIsReseting(true)\r\n    const usuario = {\r\n      usuId: values.usuId,\r\n      password: md5(values.password),\r\n      ...(values.sendNotification && { email: values.email })\r\n    }\r\n    try {\r\n      const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n      if (data)\r\n        toast.success('Password reset successfully')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsReseting(false)\r\n      closeResetPassword()\r\n    }\r\n  }\r\n\r\n  const closeResetPassword = () => {\r\n    setOpenResetPassword(false)\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    setUsuarios([])\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Users Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"ID Number\">\r\n              <Input label='ID Number' type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Name\">\r\n              <Input label='Name' type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"Email\">\r\n              <Input label='Email' type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label=\"State\">\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio key={s.catId} value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>New User</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>Refresh</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n        rowClassName='mgeChangePassword'\r\n      />\r\n      <Drawer title={getLabel(labels.resetPassword)} placement=\"right\" onClose={closeResetPassword} open={openResetPassword}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={closeResetPassword}\r\n              disabled={isLoading}\r\n            >Cancel</Button>\r\n          </Space>\r\n        }\r\n      >\r\n        {\r\n          user && <RestorePassword user={user} resetPassword={resetPassword} isReseting={isReseting} closeResetPassword={closeResetPassword} />\r\n        }\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('User updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('User updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            User\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >Cancel</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving}>Save</Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport OpcionService from './../../service/OpcionService'\r\n\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1).map(o => (\r\n              {\r\n                title: o.opcNombre,\r\n                key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`,\r\n                children: o.opcHijos ? o.opcHijos.map(o => (\r\n                  {\r\n                    title: o.opcNombre,\r\n                    key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`\r\n                  }\r\n                )) : []\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport PerfilService from '../../service/PerfilService'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: 'Level',\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: 'State',\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? 'ACTIVE' : 'INACTIVE'} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject.map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success('Profile saved successfully')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`An error ocurred: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success('Profile deleted successfully')\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Profiles Management\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                New Profile\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"Are you sure you want to delete the selected profiles?\" okText=\"Yes, deleter\" cancelText=\"No\" onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? 'Deleting' : 'Delete'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>Refresh</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Name\">\r\n                <Input id=\"perNombre\" name=\"perNombre\" label='Nombre' type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Level\">\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"State\">\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? 'Active' : 'Inactive'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? 'Saving' : 'Save'}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`Option ${perfilOpcionActualizado.pfoOpcId.opcNombre} updated successfully`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1)\r\n              .map(o => (\r\n                {\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n                }\r\n              ))\r\n            // .map(o => (\r\n            //   {\r\n            //     key: `${o.opcId}`,\r\n            //     opcNombre: o.opcNombre,\r\n            //     ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n            //     children: o.opcHijos.map(o => ({\r\n            //       key: `${o.opcId}`,\r\n            //       opcNombre: o.opcNombre,\r\n            //       ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0]\r\n            //     }))\r\n            //   }\r\n            // ))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(\"An error ocurred\")\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(\"An error ocurred\")\r\n        }\r\n\r\n      } else {\r\n        setError(\"An error ocurred\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    } finally {\r\n      setIsLoadingOpciones(false)\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success('Profile saved successfully')\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Profile deleted')\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>Return to home</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            Profile {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>Please wait...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Name\">\r\n                  <Input id=\"perNombre\" name=\"perNombre\" label='Name' type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"Level\">\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" label='Level' min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label=\"State\">\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? 'ACTIVE' : 'INACTIVE'\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>Options</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? 'Saving' : 'Save'}\r\n                    </Button>\r\n                    <Popconfirm title=\"Are you sure you want to delete the profile?\" okText=\"Yes, delete\" cancelText=\"No\" onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? 'Deleting' : 'Delete'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Form, Spin, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst columnas = [\r\n    {\r\n        title: '',\r\n        render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'nombres',\r\n        render: (_, r) => `${r.nombres}`\r\n    },\r\n    {\r\n        title: 'Last Name',\r\n        dataIndex: 'apellidos',\r\n        render: (_, r) => `${r.apellidos}`\r\n    },\r\n    {\r\n        title: 'Country',\r\n        dataIndex: 'pais',\r\n        render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n            <Tooltip title={pais.catDescripcion}>\r\n                <img\r\n                    src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={pais.catDescripcion}></img>\r\n            </Tooltip>\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: <div style={{ textAlign: 'center' }}>Role</div>,\r\n        dataIndex: 'role',\r\n        render: (_, { perfiles }) => <div style={{ textAlign: 'center' }}>\r\n            {perfiles[0].perNombre}\r\n        </div>,\r\n        responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>View</Button>\r\n    }\r\n]\r\n\r\nconst statistics = [\r\n    {\r\n        id: 1,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#54873C',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER OF TRAINERS</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 2,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#70B450',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>TRAINER</Typography.Text>,\r\n            value: 10,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 3,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#385A28',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>APPLICANTS</Typography.Text>,\r\n            value: 80,\r\n            precision: 2,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: '%'\r\n        },\r\n        description: <>120 Users</>\r\n    },\r\n    {\r\n        id: 4,\r\n        props: {\r\n            bordered: false,\r\n            hoverable: true,\r\n            style: {\r\n                background: '#636466',\r\n                color: '#f0f0f0'\r\n            }\r\n        },\r\n        data: {\r\n            title: <Typography.Text style={{ color: '#ffffff' }}>BENEFICIARIES</Typography.Text>,\r\n            value: 150,\r\n            precision: 0,\r\n            prefix: <anticons.UserOutlined />,\r\n            suffix: ''\r\n        },\r\n        description: <>&nbsp;</>\r\n    }\r\n]\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n\r\n    const renderStatistics = ({ id, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={6} md={6} lg={6} xl={6} xxl={6}\r\n        >\r\n            <Card\r\n                {...props}\r\n            >\r\n                <Statistic\r\n                    {...data}\r\n                    valueStyle={{\r\n                        color: '#ffffff',\r\n                    }}\r\n                />\r\n                {description}\r\n            </Card>\r\n        </Col>\r\n\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject\r\n                setUsers(usuarios)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[15, 15]}>\r\n                {\r\n                    statistics && statistics.map(s => renderStatistics(s))\r\n                }\r\n            </Row>\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Table\r\n                                {...tableProps}\r\n                                rowKey='usuId'\r\n                                columns={columnas}\r\n                                dataSource={users}>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Badge, Card, Alert } from 'antd'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entModalidad, entNombre, entPais, numPostulantes }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>Regresar al inicio</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            usuario.perfiles && usuario.perfiles[0].perNombre\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Trainings</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description=\"Trainings not found.\"\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n            {/* <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/dashboard'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        Gestión de Usuario\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider> */}\r\n            {/* {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Espere un momento...</Typography.Text>\r\n                    </div> :\r\n                    <Form\r\n                        layout={'vertical'}\r\n                        form={form}\r\n                        initialValues={{\r\n                            layout: 'vertical',\r\n                        }}\r\n                    >\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Identificación\">\r\n                                    <Input id=\"documento\" name=\"documento\" label='Identificación' type='text' value={usuario.documento} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Tipo de Identificación\">\r\n                                    <Select defaultValue={usuario.tipoDocumento} value={usuario.tipoDocumento} onChange={onChangeTipoIdentificacion}>\r\n                                        {\r\n                                            tiposIdentificacion && tiposIdentificacion.map(p => renderCatalogoValor(p))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Nombres\">\r\n                                    <Input id=\"nombres\" name=\"nombres\" label='Nombres' type='text' value={usuario.nombres} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Apellidos\">\r\n                                    <Input id=\"apellidos\" name=\"apellidos\" label='Apellidos' type='text' value={usuario.apellidos} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                                <Form.Item label=\"Dirección\">\r\n                                    <Input id=\"direccion\" name=\"direccion\" label='Dirección' type='text' value={usuario.direccion} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Email\">\r\n                                    <Input id=\"email\" name=\"email\" label='Email' type='text' value={usuario.email} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Teléfono\">\r\n                                    <Input id=\"telefono\" name=\"telefono\" label='Teléfono' type='text' value={usuario.telefono} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Login\">\r\n                                    <Input id=\"login\" name=\"login\" label='Login' type='text' value={usuario.login} onChange={onChange} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Contraseña\">\r\n                                    <Input.Password id=\"password\" name=\"password\" label='Contraseña' value={usuario.password} onChange={onChange} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n                                <Form.Item label=\"Estado\">\r\n                                    <Select\r\n                                        defaultValue={usuario.estado.catValor}\r\n                                        value={usuario.estado.catValor}\r\n                                        onChange={onChangeEstado}\r\n                                    >\r\n                                        {\r\n                                            estados && estados.map(e => renderEstado(e))\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" onClick={(e) => guardar(e)} disabled={isSaving}\r\n                                loading={isSaving}\r\n                            >\r\n                                {isSaving ? 'Guardando...' : 'Guardar'}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsSaving(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0) {\r\n                handleUpload(usuarioActualizado)\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success('User created successfully')\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(\"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            setError(\"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>Return to home</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        New User\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>Please wait...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='Upload your profile picture'\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >Select Photo</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label=\"First Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete first Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label=\"Last Name\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Complete last Name',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label='Sex'\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select sex',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label=\"Date of birth\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Select date of birth',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>ID Number</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                This is the unique identification number issued by the country of residence.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete ID Number',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label=\"Country\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label=\"City\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete city',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Country Code\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select country code',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    Phone Number\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete phone number',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>Are you currently working?</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>\r\n                                                                Please write the complete name of the institution.\r\n                                                            </>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label=\"Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label=\"Additional Email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Complete additional email',\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: 'Additional email is not valid'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Create your password\"\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Create your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item label=\"Confirm your password\"\r\n                                            name='passwordConfirm'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Confirm your password',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                    specialChar: \"Password has special characters.\",\r\n                                                    number: \"Password has a number.\",\r\n                                                    capital: \"Password has a capital letter.\",\r\n                                                    match: \"Passwords match.\",\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label='Profile'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select profile',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label='State'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Select state',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >Cancel</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving}>Save</Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success('Profile updated successfully')\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      toast.error(\"An error ocurred\")\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        toast.error('An error ocurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : 'An error ocurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  My Account\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => { formUser.submit() }}>Save</Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label='Upload your profile picture'\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >Select Photo</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label=\"ID\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete ID',\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label=\"First Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete first Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label=\"Last Name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Complete last Name',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label='Sex'\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select sex',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label=\"Date of birth\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Select date of birth',\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>ID Number</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                This is the unique identification number issued by the country of residence.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete ID Number',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label=\"Country\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Country Code\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select country code',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          Phone Number\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete phone number',\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>Are you currently working?</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                Please write the complete name of the institution.\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={currentlyWorking}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: 'If yes, please write the complete name of the institution.',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label=\"Additional Email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete additional email',\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: 'Additional email is not valid'\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label='State'\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Select state',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card, Checkbox } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [state, setState] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado, cursoList }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Space direction='horizontal'>\r\n                                <Typography.Text type='secondary'>\r\n                                    {cursoList.length} courses\r\n                                </Typography.Text>\r\n                                <Typography.Text type='secondary'>\r\n                                    {numPostulantes} applicants\r\n                                </Typography.Text>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {\r\n                                    getLabel(labels.view)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {getLabel(labels.edit)}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        let trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        if (state) {\r\n            trainer = { ...trainer, estado: !state }\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mgeCard\" style={{\r\n                paddingTop: '15px',\r\n                paddingBottom: '15px'\r\n            }}>\r\n                <Row>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    >\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                            Trainings\r\n                        </h3>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                        style={{\r\n                            textAlign: 'right'\r\n                        }}\r\n                    >\r\n                        <Space>\r\n                            <Button\r\n                                type='default'\r\n                                loading={isLoading}\r\n                                disabled={isLoading}\r\n                                style={{ width: '120px' }}\r\n                                onClick={() => {\r\n                                    fetchData()\r\n                                }}>Refresh</Button>\r\n                            <Button\r\n                                type='primary'\r\n                                disabled={isLoading}\r\n                                style={{ width: '120px' }}\r\n                                onClick={() => {\r\n                                    navigate.push('/trainingnew')\r\n                                }}>New Training</Button>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'end', paddingTop: '10px', paddingBottom: '10px' }}>\r\n                    <Checkbox checked={state} onChange={(e) => setState(e.target.checked)}>Inactive only</Checkbox>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\nconst config = { headers: { \"Accept-Language\": getCulture() } }\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const axiosInstance = axios.create(config)\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { insertCountryTraining, getCountryTrainingByTraining, deleteCountryTraining } from \"../utils/urls\";\r\nexport class CountryTrainingService {\r\n    put = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).put(insertCountryTraining(), countryTraining)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(getCountryTrainingByTraining(), countryTraining)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(deleteCountryTraining(), countryTraining)\r\n    }\r\n}\r\n\r\nexport default CountryTrainingService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, Alert } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getCultures, getDatosUsuario } from '../../utils/Utils'\r\nimport { getCulture } from '../../utils/Internationalization'\r\n\r\nconst baseTraining = {\r\n  entCultura: getCulture()\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [paises, setPaises] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  // const renderCourse = ({ catId, catNombre, catValor }) =>\r\n  //   <Col key={catId} span={24}>\r\n  //     <Form.Item\r\n  //       name={[catValor]}\r\n  //       label={`Number of beneficiaries for ${catNombre}`}\r\n  //       rules={[\r\n  //         {\r\n  //           required: true,\r\n  //           message: `Complete number of beneficiaries for ${catNombre}`\r\n  //         },\r\n  //       ]}\r\n  //     >\r\n  //       <InputNumber />\r\n  //     </Form.Item>\r\n  //   </Col>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `Then email ${postulant} already exists.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${postulant} successfully added.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `Email ${email} successfully removed.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      idRegion: values.idRegion,\r\n      entCultura: values.entCultura,\r\n      idModalidad: values.idModalidad,\r\n      entFechaIni: values.entFechaIni,\r\n      entFechaFin: values.entFechaFin,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar Paises\r\n        const requests = []\r\n        if (paises.length > 0) {\r\n          paises.forEach(p => {\r\n            requests.push(countryTrainingService.put({\r\n              navigate, countryTraining: {\r\n                \"idPais\": p.value,\r\n                \"idEntrenamiento\": data.listObject[0].entId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar cursos\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`It was not possible to add the applicant: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`Training ${data.listObject[0].entNombre} succesfully created`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(\"An error occurred.\")\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      New Training\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >Save Draft</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                      onClick={() => {\r\n                        toast.success('Training published')\r\n                      }}\r\n                    >Publish</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n\r\n                <Form.Item\r\n                  name='idRegion'\r\n                  label=\"Region\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select region',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().regions}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entCultura'\r\n                  label=\"Language\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select language',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'value',\r\n                      value: 'id'\r\n                    }}\r\n                    options={getCultures()}\r\n                    showSearch\r\n                    optionFilterProp=\"value\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label=\"Country\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select country',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name='idPais'\r\n                    mode='multiple'\r\n                    onChange={(_, option) => {\r\n                      setPaises(option)\r\n                    }}\r\n                  >\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label=\"Modality\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select modality',\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label=\"Start Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select start date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label=\"End Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select end date',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label='Courses'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Select courses',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label='Applicants emails'\r\n                  extra='Press enter to add email'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Complete applicants',\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: 'Email is not valid'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList.filter(a => a.posEstado.catValor === 'EST_ENR'))\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        {/* <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col> */}\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>View</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.filter(p => p.posEstado.catValor === 'EST_ENR')}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadInformByName, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Descriptions, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport { getCulture } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              Download\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item\r\n            style={{\r\n              whiteSpace: 'pre-wrap'\r\n            }}\r\n            label={\r\n              <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n            }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              Comments:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'TYP_INF_WPL' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to approve the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, approve\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending\r\n                  }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >Approve</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `Are you sure to reject the ${infTipo.catValor === 'TYP_INF_WPL' ? 'workplan' : infTipo.catValor === 'TYP_INF_FIR' ? 'final report' : ''}`\r\n                  }\r\n                  okText=\"Yes, reject\" cancelText=\"No\" onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >Reject</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Certificate&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                Expires: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n              >Download</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByUuid(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": getCulture(),\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({ cerUuid }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      if (data) toast.success('Attendance successfully saved')\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      if (data) toast.success('Email sent successfully')\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error('Email send failed')\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'TYP_INF_WPL' ? commentWorkplan : catValor === 'TYP_INF_FIR' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = { idEntrenamiento: idTraining, posId: id }\r\n    try {\r\n      const { data } = await postulantService.getByTraining({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].entId.cursoList\r\n        const postulant = data.listObject[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error('An error occurred')\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  Loading...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Role:\r\n                            </Typography.Text>\r\n                            <br />Applicant\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              Invited by:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label=\"First Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label=\"Last Name\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label=\"Sex\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label=\"Date Birth\"\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label=\"Country\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label=\"City\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label=\"Country Code\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label=\"Phone number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label=\"ID Number\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label=\"Currenty Working\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label=\"Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label=\"Additional Email\"\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              Attendance\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >Save</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const fileName = 'WorkplanTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your workplan\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            loading={uploading || sending}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : sending ? 'Sending' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_WPL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Workplan template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                        {/* <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >View</Button>\r\n                                        </Col> */}\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Collapse, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n        const fileName = 'FinalReportTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label='File'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >Select File</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>\r\n                                            Copy evidence link\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label='URL'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            loading={uploading || isLoading || sending}\r\n                                        >\r\n                                            {uploading ? 'Uploading' : isLoading ? 'Saving' : sending ? 'Sending' : 'Send'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ idInforme }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId: idInforme }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success('Email sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Email send failed')\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success('Evidence sended successfully')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_FIR')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success('Upload successfully')\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Final Report template\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                Download\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                postulant && postulant.beneficiarioList && postulant.beneficiarioList.length >= (postulant.entId.entLimBen || 1) ?\r\n                                    <Collapse\r\n                                        accordion\r\n                                        bordered={false}\r\n                                        expandIconPosition='end'\r\n                                        style={{\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                        }\r\n                                    </Collapse>\r\n                                    :\r\n                                    <Result\r\n                                        title={`There must be at least ${postulant.entId && (postulant.entId.entLimBen || 1)} registered beneficiaries to upload your final report.`}\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/beneficiaries/registry')\r\n                                                }}\r\n                                            >\r\n                                                Register Beneficiaries\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Result } from 'antd'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getCulture } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0\r\n                                &&\r\n                                postulant.certificadoList.length > 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <Result\r\n                                    title=\"You will see your certificate once your final report is approved and you submit your beneficiary list.\"\r\n                                    extra={\r\n                                        <Button type=\"primary\" key=\"console\"\r\n                                            onClick={\r\n                                                () => {\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                        navigate.push('/finalreport') : navigate.push('/beneficiaries/qualification')\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                    'Send Final Report' : 'Send list of beneficiaries'\r\n                                            }\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography } from 'antd'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Classes = () => {\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        try {\r\n            const { data } = await postulantService.getTraining({ navigate, postulant: { idUsuario: getDatosUsuario().usuarioId } })\r\n            const postulant = data.listObject[0]\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(postulant.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            Trainings\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin, Typography } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading, message } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col style={{ textAlign: 'center' }}>\r\n                                <Spin size='large'></Spin>\r\n                                {\r\n                                    message && <Typography.Paragraph>\r\n                                        {message}\r\n                                    </Typography.Paragraph>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    message: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, Image, Alert, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getCatalogos, getCultures, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\n\r\nconst trainingService = new TrainingService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\nconst postulantService = new PostulantService()\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCountry, setIsLoadingCountry] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' || training.entEstado.catValor === 'ACTIVE' ?\r\n                            <>\r\n                                <Tooltip title='Click to send invitation email'>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCountry = async (country) => {\r\n        setIsSaving(true)\r\n        const countryTraining = { ...country, idEntrenamiento: training.entId }\r\n        if (countryTraining.checked) {\r\n            try {\r\n                const { data } = await countryTrainingService.put({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await countryTrainingService.del({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(\"An error occurred.\")\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `Then email ${posEmail} already exists.`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${posEmail} successfully saved.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `Email ${postulant.posEmail} successfully deleted.`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants() // OJO\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setTraining({\r\n                    ...training,\r\n                    countries: training.countryTrainingList.map(c => c.paePais.catId),\r\n                    courses: training.cursoList.map(c => c.curNombre.catId),\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n                setPaises(training.countryTrainingList)\r\n                setCourses(training.cursoList)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCountries = async () => {\r\n        setIsLoadingCountry(true)\r\n        const countryTraining = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await countryTrainingService.getByTraining({ navigate, countryTraining })\r\n            if (data) {\r\n                const countries = data.listObject\r\n                setPaises(countries)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCountry(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject[0].postulanteList\r\n                setPostulants(postulants)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        const training = {\r\n            idRegion: values.entRegion.catId,\r\n            entId: values.entId,\r\n            entCultura: values.entCultura,\r\n            entFechaFin: values.entFechaFin\r\n        }\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await trainingService.set({ navigate, training })\r\n            if (data) {\r\n                toast.success(`Training ${data.listObject[0].entNombre} updated successfully`)\r\n            } else {\r\n                toast.error(\"An error occurred.\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error('Could not send email', { position: 'bottom-center' })\r\n            else\r\n                toast.success('Email sent successfully', { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\", { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (paises.length < 1 || courses.length < 1 || postulants.length < 1) {\r\n            toast.error('Add at least one country, one course and one applicant')\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            entCultura: training.entCultura,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error('Could not send email')\r\n                                    else\r\n                                        toast.success('Email sent successfully')\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred. Could not send email.\")\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`Training ${data.listObject[0].entNombre} publish succesfully`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving || isPublishing || isSendingEmail}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        Edit Training\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >Save Draft</Button>\r\n                                                    <Popconfirm title=\"Are you sure to publish the training?\" okText=\"Yes, publish\" cancelText=\"No\" onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >Publish</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col span={24} style={{ display: 'none' }}>\r\n                                    <Form.Item\r\n                                        name='entId'\r\n                                        label=\"Id Training\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete ID',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name={['entRegion', 'catId']}\r\n                                                label=\"Region\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select region',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    showSearch\r\n                                                    options={getCatalogos().regions}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name='entCultura'\r\n                                                label=\"Language\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select language',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'value',\r\n                                                        value: 'id'\r\n                                                    }}\r\n                                                    options={getCultures()}\r\n                                                    showSearch\r\n                                                    optionFilterProp=\"value\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='countries'\r\n                                                label=\"Country\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select country',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCountry}\r\n                                                    mode='multiple'\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={\r\n                                                        getCatalogos().paises.map(p => {\r\n                                                            const { catNombre, catDescripcion } = p\r\n                                                            const flag = catDescripcion.toLowerCase()\r\n                                                            return (\r\n                                                                {\r\n                                                                    ...p,\r\n                                                                    catNombre: <>\r\n                                                                        <img\r\n                                                                            src={`https://flagcdn.com/24x18/${flag}.png`}\r\n                                                                            srcSet={`https://flagcdn.com/48x36/${flag}.png 2x,https://flagcdn.com/72x54/${flag}.png 3x`}\r\n                                                                            width=\"24\"\r\n                                                                            height=\"18\"\r\n                                                                            alt={catNombre} />&nbsp;\r\n                                                                        {catNombre}\r\n                                                                    </>\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        )\r\n                                                    }\r\n                                                    onSelect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: true,\r\n                                                            idPais: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: false,\r\n                                                            paeId: paises.filter(c => c.paePais.catId === option.catId).length > 0 ? paises.filter(c => c.paePais.catId === option.catId)[0].paeId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label=\"Trainig name\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete trainig name',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label=\"Modality\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select modality',\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'\r\n                                                >\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label=\"Start Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select start date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label=\"End Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select end date',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='courses'\r\n                                                label='Courses'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Select courses',\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCourse}\r\n                                                    mode='multiple'\r\n                                                    showSearch\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={getCatalogos().cursos}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onSelect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: true,\r\n                                                            idNombreCurso: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: false,\r\n                                                            curId: courses.filter(c => c.curNombre.catId === option.catId).length > 0 ? courses.filter(c => c.curNombre.catId === option.catId)[0].curId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isPublishing || isSendingEmail}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label='Applicants emails'\r\n                                                extra='Press enter to add email'\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Complete applicants',\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: 'Email is not valid'\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image, Tag } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList)\r\n            } else {\r\n                toast.error(\"An error ocurred\")\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;Applicants\r\n                                        </Col>\r\n                                        {/* <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col> */}\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label='Search expression'\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>Search</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: 'Name',\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: 'Country',\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Attendance',\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Work Plan',\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Final Report',\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Certificate',\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: 'Actions',\r\n                                            dataIndex: '',\r\n                                            render: (_, { posId, usuId }) => <div style={{ textAlign: 'center' }}>\r\n                                                {\r\n                                                    usuId ?\r\n                                                        <Button type='primary' href={`/#/trainingapplicant/${posId}/${id}`}>View</Button>\r\n                                                        :\r\n                                                        <Tag color='#108ee9'>Not enrolled</Tag>\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nconst postulantService = new PostulantService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>Registration date</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>Evidences</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>Review date</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item\r\n                        style={{\r\n                            whiteSpace: 'pre-wrap'\r\n                        }}\r\n                        label={\r\n                            <Typography.Text type='secondary' strong>Observation</Typography.Text>\r\n                        }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n                            }\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async (cerNombre, cerRuta) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                cerNombre,\r\n                cerRuta\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Certificate&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                Expires: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate(cerNombre, cerRuta)}\r\n                            >Download</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { idEntrenamiento: idTraining, posId: id }\r\n        try {\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject[0].entId.cursoList\r\n                const postulant = data.listObject[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error('An error occurred')\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    Loading...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Information</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Role:\r\n                                                        </Typography.Text>\r\n                                                        <br />Applicant\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            Invited by:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label=\"First Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label=\"Last Name\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label=\"Sex\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label=\"Date Birth\"\r\n                                                        >\r\n                                                            {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label=\"Country\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label=\"City\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label=\"Country Code\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label=\"Phone number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label=\"ID Number\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label=\"Currenty Working\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>Progress</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            Attendance\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { deleteBeneficiary, getBeneficiariesByPostulant, getBeneficiaryById, insertBeneficiary, updateBeneficiary, validateBeneficiary } from '../utils/urls'\r\nexport class BeneficiaryService {\r\n    put = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).put(insertBeneficiary(), beneficiary)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(updateBeneficiary(), beneficiary)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiaryById(), beneficiary)\r\n    }\r\n    getByPostulant = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiariesByPostulant(), beneficiary)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(deleteBeneficiary(), beneficiary)\r\n    }\r\n    val = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(validateBeneficiary(), beneficiary)\r\n    }\r\n}\r\n\r\nexport default BeneficiaryService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, downloadCertificateByUuid, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n    downloadByUuid = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByUuid(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React from 'react'\r\nimport { Col, Row, Space, Button, Form, Select, InputNumber, Input, Switch } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            alt={e.catNombre}\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.substr(0, 2).toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n        ></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst Beneficiary = ({ type, beneficiary, saveBeneficiary, isSaving, closeBeneficiary }) => {\r\n    const [formBeneficiary] = Form.useForm()\r\n\r\n    if (type === 1)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete de ID Number'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Country'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete City'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Sex'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name='benTrabaja'\r\n                                label='Are you currently working?'\r\n                                valuePropName='checked'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idNivelInt']}\r\n                                label='Level Instruction'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Level Instruction'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().educationLevels}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? 'Saving' : 'Save'\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n    if (type === 2)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label='ID Number'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete ID Number'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label='Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label=\"Country\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Country'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label='City'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete City'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label='Sex'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Select Sex'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benIdEmpresa']}\r\n                                label='Company ID'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Company ID'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNomEmpresa']}\r\n                                label='Company Name'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Company Name'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCargo']}\r\n                                label='Job Title'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Job Title'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNumPer']}\r\n                                label='Total Collaborators'\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Complete Total Collaborators'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Row gutter={[10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benHombres']}\r\n                                        label='Men'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Number of men'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benMujeres']}\r\n                                        label='Women'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Number of women'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >Cancel</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? 'Saving' : 'Save'\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default Beneficiary","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Col, Row, Space, Button, Table, Image, Drawer, Typography, Collapse, Popconfirm, Switch, Result, Modal } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport { getCatalogos, getDatosUsuario, toCapitalize } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport BeneficiaryService from './../../service/BeneficiaryService'\r\nimport CertificateService from '../../service/CertificateService'\r\nimport Beneficiary from './Beneficiary'\r\n\r\nconst postulantService = new PostulantService()\r\nconst beneficiaryService = new BeneficiaryService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst { Title, Paragraph, Text } = Typography\r\nconst { confirm } = Modal\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst Beneficiaries = () => {\r\n    const navigate = useHistory()\r\n    const { operation } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isOpening, setIsOpening] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingBeneficiaries, setIsLoadingBeneficiaries] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n    const [postulant, setPostulant] = useState({})\r\n    const [beneficiaryC1, setBeneficiaryC1] = useState(null)\r\n    const [beneficiaryC2, setBeneficiaryC2] = useState(null)\r\n    const [openC1, setOpenC1] = useState(false)\r\n    const [openC2, setOpenC2] = useState(false)\r\n    const [selectedBeneficiary, setSelectedBeneficiary] = useState({ benId: 0 })\r\n    const [openDeleteBeneficiary, setOpenDeleteBeneficiary] = useState(false);\r\n\r\n    const [isGenerating, setIsGenerating] = useState(false)\r\n    const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n\r\n    const closeBeneficiaryC1 = () => {\r\n        setOpenC1(false)\r\n    }\r\n\r\n    const getBeneficiaryC1 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC1(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                idNivelInt: data.listObject[0].benNivelInt.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC1(beneficiary)\r\n            setOpenC1(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC1 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC1()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const newBeneficiary = time => new Promise(resolve => setTimeout(resolve, time * 1000))\r\n\r\n    const closeBeneficiaryC2 = () => {\r\n        setOpenC2(false)\r\n    }\r\n\r\n    const getBeneficiaryC2 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC2(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC2(beneficiary)\r\n            setOpenC2(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC2 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC2()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const showReconfirmDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(true)\r\n    }\r\n\r\n    const confirmDeleteBeneficiary = async () => {\r\n        setIsDeleting(true)\r\n        try {\r\n            const { data } = await beneficiaryService.del({ navigate, beneficiary: selectedBeneficiary })\r\n            if (data) {\r\n                toast.success('Beneficiary successfully removed')\r\n                fetchData(2)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setSelectedBeneficiary({ benId: 0 })\r\n            setIsDeleting(false)\r\n            setOpenDeleteBeneficiary(false)\r\n        }\r\n    }\r\n\r\n    const cancelDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(false)\r\n    }\r\n\r\n    const delBeneficiary = async ({ benId }) => {\r\n        setSelectedBeneficiary({ benId })\r\n        if ((postulant.beneficiarioList.length - 1) < (postulant.entId.entLimBen || 1)) {\r\n            showReconfirmDeleteBeneficiary()\r\n        } else {\r\n            setIsDeleting(true)\r\n            try {\r\n                const { data } = await beneficiaryService.del({ navigate, beneficiary: { benId } })\r\n                if (data) {\r\n                    toast.success('Beneficiary successfully removed')\r\n                    fetchData(2)\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n            } finally {\r\n                setSelectedBeneficiary({ benId: 0 })\r\n                setIsDeleting(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateBeneficiary = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = await beneficiaryService.val({ navigate, beneficiary })\r\n            if (data)\r\n                toast.success('Beneficiary successfully updated')\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred\")\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendCertificate = async ({ cerId }) => {\r\n        setIsSendingCertificate(true)\r\n        try {\r\n            const certificate = { cerId }\r\n            const { data } = await certificateService.send({ navigate, certificate })\r\n            if (data) toast.success('Certificate sent successfully')\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error('Certificate send failed')\r\n        } finally {\r\n            setIsSendingCertificate(false)\r\n        }\r\n    }\r\n\r\n    const generate = async ({ idCurso, idPostulante }) => {\r\n        setIsGenerating(true)\r\n        try {\r\n            const course = { idCurso, idPostulante }\r\n            const { data } = await certificateService.generate({ navigate, course })\r\n            const certificate = data.listObject[0]\r\n            toast.success('Certificate generated successfully')\r\n            sendCertificate(certificate)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    const sendBeneficiaries = async ({ idCurso, idPostulante }) => {\r\n        confirm({\r\n            title: getLabel(labels.sendBeneficiaryListTitle),\r\n            icon: <anticons.ExclamationCircleFilled />,\r\n            content: getLabel(labels.sendBeneficiaryListConfirm),\r\n            okText: getLabel(labels.ok),\r\n            cancelText: getLabel(labels.cancel),\r\n            onOk() {\r\n                generate({ idCurso, idPostulante })\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCourse = ({ curId, curNombre }, posId) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            operation === 'registry' &&\r\n                            <>\r\n                                {\r\n                                    postulant.beneficiarioList && postulant.beneficiarioList.filter(b => b.idCurso === curId && b.idPostulante === posId).length >= (postulant.entId.entLimBen || 1) ?\r\n                                        <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                        :\r\n                                        <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                }\r\n                            </>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' &&\r\n                            <>\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.filter(c => c.idCurso === curId && c.idPostulante === posId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                            <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                            :\r\n                                            <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                    }\r\n                                </>\r\n                            </>\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography>\r\n                            <Text strong style={{ fontSize: '1.1em' }}>\r\n                                {curNombre.catNombre}\r\n                            </Text>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            <Row>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Typography>\r\n                        <Paragraph>\r\n                            <Text type='secondary' strong>\r\n                                {`${getLabel(labels.minimumBeneficiaries)} (${postulant.entId.entLimBen || 1})`}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    style={{ textAlign: 'right' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type='default'\r\n                            loading={isLoading || isLoadingBeneficiaries}\r\n                            disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                            onClick={() => {\r\n                                fetchData(2)\r\n                            }}>Refresh</Button>\r\n                        {\r\n                            postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 && <Button\r\n                                type='primary'\r\n                                loading={isOpening}\r\n                                disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                                onClick={() => {\r\n                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC1(null)\r\n                                            setBeneficiaryC1({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_NAT'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC1(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC2(null)\r\n                                            setBeneficiaryC2({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_LEG'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC2(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    }\r\n                                }}>New Beneficiary</Button>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                            <Button type='primary'\r\n                                loading={isGenerating || isSendingCertificate}\r\n                                disabled={isGenerating || isSendingCertificate || isLoading || isLoadingBeneficiaries}\r\n                                onClick={() => sendBeneficiaries(\r\n                                    {\r\n                                        idCurso: curId,\r\n                                        idPostulante: posId\r\n                                    })}\r\n                            >\r\n                                {\r\n                                    isGenerating || isSendingCertificate ? 'Sending' : 'Send'\r\n                                }\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                postulant && postulant.beneficiarioList &&\r\n                <Table\r\n                    loading={isLoading || isLoadingBeneficiaries}\r\n                    {...tableProps}\r\n                    rowKey='benId'\r\n                    columns={[\r\n                        {\r\n                            title: 'ID Number',\r\n                            dataIndex: 'benDocumento',\r\n                            render: (_, { benDocumento }) => `${benDocumento}`,\r\n                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        {\r\n                            title: 'Name',\r\n                            dataIndex: 'benNombres',\r\n                            render: (_, { benNombres }) => `${benNombres}`\r\n                        },\r\n                        {\r\n                            title: 'Country',\r\n                            dataIndex: 'benPais',\r\n                            render: (_, { benPais }) =>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png`}\r\n                                        srcSet={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${benPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                        width=\"32\"\r\n                                        height=\"24\"\r\n                                        alt={benPais.catNombre}></img>\r\n                                </div>\r\n                        },\r\n                        {\r\n                            title: 'City',\r\n                            dataIndex: 'ciudad',\r\n                            render: (_, { ciudad }) => `${ciudad}`,\r\n                            responsive: ['sm', 'md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Sex',\r\n                                    dataIndex: 'benSexo',\r\n                                    render: (_, { benSexo }) => `${benSexo.catNombre}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Job Title',\r\n                                    dataIndex: 'benCargo',\r\n                                    render: (_, { benCargo }) => `${benCargo}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Is Working',\r\n                                    dataIndex: 'benTrabaja',\r\n                                    render: (_, { benTrabaja }) => <>{benTrabaja ? 'Yes' : 'No'}</>,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Company',\r\n                                    dataIndex: 'benNomEmpresa',\r\n                                    render: (_, { benNomEmpresa }) => `${benNomEmpresa}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: 'Ins. Level',\r\n                                    dataIndex: 'benNivelInt',\r\n                                    render: (_, { benNivelInt }) => `${benNivelInt.catNombre}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: 'Total Persons',\r\n                                    dataIndex: 'benNumPer',\r\n                                    render: (_, { benNumPer }) => `${benNumPer}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        {\r\n                            title: 'Actions',\r\n                            dataIndex: '',\r\n                            render: (_, record) =>\r\n                                <Space>\r\n                                    <Button type='primary'\r\n                                        icon={<anticons.FolderOpenFilled />}\r\n                                        onClick={() => {\r\n                                            if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                                getBeneficiaryC1(record)\r\n                                            } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                                getBeneficiaryC2(record)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    {\r\n                                        operation === 'registry' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                                        <>\r\n                                            <Popconfirm title=\"Are you sure you want to delete the beneficiary?\" okText={getLabel(labels.yes)} cancelText={getLabel(labels.cancel)} onConfirm={() => delBeneficiary(record)}\r\n                                                okButtonProps={{\r\n                                                    loading: isDeleting,\r\n                                                    disabled: isDeleting\r\n                                                }}\r\n                                            >\r\n                                                <Button type='default'\r\n                                                    danger\r\n                                                    icon={<anticons.DeleteFilled />}\r\n                                                    loading={isDeleting}\r\n                                                    disabled={isDeleting}\r\n                                                />\r\n                                            </Popconfirm>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        operation === 'qualification' &&\r\n                                        <Switch\r\n                                            defaultChecked={record.benValidado}\r\n                                            onChange={(e) => {\r\n                                                validateBeneficiary({ ...record, benValidado: e })\r\n                                            }}\r\n                                            loading={isSaving}\r\n                                            disabled={postulant.certificadoList.filter(c => c.idCurso === curId).length > 0}\r\n                                        />\r\n                                    }\r\n                                </Space>\r\n                        }\r\n                    ]}\r\n                    dataSource={postulant.beneficiarioList.filter(b => b.idCurso === curId)}>\r\n                </Table>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const fetchData = async (typeLoad) => {\r\n        setLoad(false)\r\n        if (typeLoad) {\r\n            if (typeLoad === 1) {\r\n                setIsLoading(true)\r\n            } else if (typeLoad === 2) {\r\n                setIsLoadingBeneficiaries(true)\r\n            }\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : 'An error occurred')\r\n        } finally {\r\n            if (typeLoad) {\r\n                if (typeLoad === 1) {\r\n                    setIsLoading(false)\r\n                } else if (typeLoad === 2) {\r\n                    setIsLoadingBeneficiaries(false)\r\n                }\r\n            } else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px 20px 6px 20px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                        <Typography>\r\n                            <Title type='secondary' level={3}>\r\n                                {getLabel(labels.beneficiariesTitle)} {` ${toCapitalize(operation)}`}\r\n                            </Title>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row justify='center'>\r\n                {\r\n                    isLoading ?\r\n                        <AlertWait message='Loading...' isLoading={isLoading} />\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                operation === 'registry' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={`\r\n                                        There must be at least one approved workplan to register beneficiaries.\r\n                                        `}\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/workplan')\r\n                                                        }}\r\n                                                    >\r\n                                                        Send Workplan\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n                            {\r\n                                operation === 'qualification' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title=\"There must be at least one approved final report to qualify beneficiaries.\"\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/finalreport')\r\n                                                        }}\r\n                                                    >\r\n                                                        Send Final Report\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </Col>\r\n                }\r\n            </Row>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC1} open={openC1}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC1}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC1 && <Beneficiary type={1} beneficiary={beneficiaryC1} saveBeneficiary={saveBeneficiaryC1} closeBeneficiary={closeBeneficiaryC1} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC2} open={openC2}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC2}\r\n                            disabled={isSaving}\r\n                        >Cancel</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC2 && <Beneficiary type={2} beneficiary={beneficiaryC2} saveBeneficiary={saveBeneficiaryC2} closeBeneficiary={closeBeneficiaryC2} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Modal\r\n                title={getLabel(labels.deleteBeneficiaryTitle)}\r\n                open={openDeleteBeneficiary}\r\n                onOk={confirmDeleteBeneficiary}\r\n                confirmLoading={isDeleting}\r\n                onCancel={cancelDeleteBeneficiary}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.cancel)}\r\n            >\r\n                <p>\r\n                    {\r\n                        getLabel(labels.reConfirmDeleteBeneficiary)\r\n                    }\r\n                </p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beneficiaries","import React, { useState } from 'react'\r\nimport { Button, Form, Input, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePasswordUser = ({ user, navigate }) => {\r\n\r\n    const [passwordNew, setPasswordNew] = useState('')\r\n    const [passwordNewConfirm, setPasswordNewConfirm] = useState('')\r\n    const [isReseting, setIsReseting] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const resetPassword = async (values) => {\r\n        const usuario = {\r\n            usuId: values.usuId,\r\n            oldpassword: md5(values.password),\r\n            password: md5(values.passwordNew)\r\n        }\r\n        console.log(usuario)\r\n        setIsReseting(true)\r\n        try {\r\n            const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n            if (data)\r\n                toast.success('Password reset successfully')\r\n            setTimeout(() => {\r\n                localStorage.removeItem(\"mgeToken\")\r\n                localStorage.removeItem(\"mgeDatosUsuario\")\r\n                localStorage.removeItem(\"mgeInformList\")\r\n                navigate.push(\"/login\")\r\n                setIsReseting(false)\r\n            }, 3000)\r\n        } catch (error) {\r\n            setIsReseting(false)\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error ocurred\")\r\n        }\r\n    }\r\n\r\n    const cancelResetPassword = () => {\r\n        window.history.go(-1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label='Usuario'\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label='Password'\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Complete password'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNew'\r\n                    label='New Password'\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Complete new password'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNew(e.target.value)} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNewConfirm'\r\n                    label='Confirm New Password'\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Confirm new password'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNewConfirm(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                    minLength={8}\r\n                    value={passwordNew}\r\n                    valueAgain={passwordNewConfirm}\r\n                    messages={{\r\n                        minLength: \"Password has more than 8 characters.\",\r\n                        specialChar: \"Password has special characters.\",\r\n                        number: \"Password has a number.\",\r\n                        capital: \"Password has a capital letter.\",\r\n                        match: \"Passwords match.\"\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Space>\r\n                    <Button onClick={cancelResetPassword}\r\n                        disabled={isReseting}\r\n                    >Cancel</Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? 'Reseting' : 'Reset Password'\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePasswordUser","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nimport RestorePasswordUser from '../components/usuario/RestorePasswordUser'\r\nimport AlertWait from './AlertWait'\r\nimport UsuarioService from '../service/UsuarioService'\r\n\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getLabel, labels } from '../utils/Internationalization'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Title } = Typography\r\n\r\nconst ResetPasswordUser = () => {\r\n    const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n    const navigate = useHistory()\r\n    const [user, setUser] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchUser = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            const usuario = data.listObject[0]\r\n            setUser(usuario)\r\n        }\r\n        catch (error) {\r\n\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchUser()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Row justify='center' gutter={[15, 20]}>\r\n            <Col span={24}>\r\n                <div className='mgeCard' style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Typography>\r\n                        <Title level={3}>\r\n                            <span className='mge-darkGreen'>\r\n                                {\r\n                                    getLabel(labels.resetPassword).split(' ').map(l => `${l.substring(0, 1).toUpperCase()}${l.substring(1)}`).join(' ')\r\n                                }\r\n                            </span>\r\n                        </Title>\r\n                    </Typography>\r\n                </div>\r\n            </Col>\r\n            <Col xs={22} sm={18} md={16} lg={14} xl={10} xxl={8}>\r\n                {\r\n                    isLoading && <AlertWait isLoading={isLoading} message='Please Wait' />\r\n                }\r\n                {\r\n                    user && <RestorePasswordUser user={user} navigate={navigate}></RestorePasswordUser>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ResetPasswordUser","import React, { useState, useEffect, useRef } from \"react\";\nimport { classNames } from \"primereact/utils\";\nimport { Route, useLocation } from \"react-router-dom\";\n\nimport AppTopbar from \"./AppTopbar\";\nimport AppFooter from \"./AppFooter\";\nimport AppRightPanel from \"./AppRightPanel\";\n\nimport { Tooltip } from \"primereact/tooltip\";\n\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./App.scss\";\n\nimport Usuarios from \"./components/usuario\";\nimport Usuario from \"./components/usuario/Usuario\";\nimport Opciones from \"./components/opcion\";\nimport Perfiles from \"./components/perfil\";\nimport Perfil from \"./components/perfil/Perfil\";\n\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport UserInfo from \"./components/dashboard/UserInfo\";\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\nimport Courses from \"./components/courses/Courses\";\nimport Course from \"./components/courses/Course\";\nimport Applicants from \"./components/Applicant/Applicants\";\nimport Applicant from \"./components/Applicant/Applicant\";\nimport WorkPlan from \"./components/workplan/WorkPlan\";\nimport FinalReport from \"./components/finalReport/FinalReport\";\nimport Certificate from \"./components/certificate/Certificate\";\nimport Classes from \"./components/classes/Classes\";\nimport Training from \"./components/training/Training\";\n\nimport { getDatosUsuario, getOpcionesMenu } from \"./utils/Utils\";\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\nimport Beneficiaries from \"./components/beneficiary/Beneficiaries\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport ResetPasswordUser from \"./pages/ResetPasswordUser\";\n\nconst App = (props) => {\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\n  const [sidebarStatic, setSidebarStatic] = useState(true);\n  const [sidebarActive, setSidebarActive] = useState(true);\n  const [menuActive, setMenuActive] = useState(false);\n  const [configActive, setConfigActive] = useState(false);\n  const [rightPanelActive, setRightPanelActive] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\n  const copyTooltipRef = useRef();\n  const location = useLocation();\n\n  const menu = getOpcionesMenu();\n\n  let menuClick;\n  let rightPanelClick;\n  let configClick;\n  let searchClick;\n  let topbarUserMenuClick;\n\n  useEffect(() => {\n    copyTooltipRef &&\n      copyTooltipRef.current &&\n      copyTooltipRef.current.updateTargetEvents();\n  }, [location]);\n\n  useEffect(() => {\n    if (staticMenuMobileActive) {\n      blockBodyScroll();\n    } else {\n      unblockBodyScroll();\n    }\n  }, [staticMenuMobileActive]);\n\n  useEffect(() => {\n    setResetActiveIndex(true);\n    setMenuActive(false);\n  }, []);\n\n  const onMenuItemClick = (event) => {\n    if (!event.item.items) {\n      setResetActiveIndex(true);\n      hideOverlayMenu();\n    }\n    if (!event.item.items && (isSlim() || isHorizontal())) {\n      setMenuActive(false);\n    }\n  };\n\n  const onMenuClick = (event) => {\n    if (menuActive && event.target.className === \"layout-menu-container\") {\n      setResetActiveIndex(true);\n      setMenuActive(false);\n    }\n    menuClick = true;\n  };\n\n  const blockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.add(\"blocked-scroll\");\n    } else {\n      document.body.className += \" blocked-scroll\";\n    }\n  };\n\n  const unblockBodyScroll = () => {\n    if (document.body.classList) {\n      document.body.classList.remove(\"blocked-scroll\");\n    } else {\n      document.body.className = document.body.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n    }\n  };\n\n  const onMenuButtonClick = (event) => {\n    menuClick = true;\n    setTopbarUserMenuActive(false);\n    setRightPanelActive(false);\n\n    if (isMobile()) {\n      setStaticMenuMobileActive(\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\n      );\n      if (staticMenuMobileActive) {\n        blockBodyScroll();\n      } else {\n        unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 991;\n  };\n\n  const isHorizontal = () => {\n    return \"sideBar\" === \"horizontal\";\n  };\n\n  const isSlim = () => {\n    return \"sideBar\" === \"slim\";\n  };\n\n  const hideOverlayMenu = () => {\n    setStaticMenuMobileActive(false);\n    unblockBodyScroll();\n  };\n\n  const onRightPanelClick = () => {\n    rightPanelClick = true;\n  };\n\n  const onRightPanelButtonClick = () => {\n    setRightPanelActive((prevState) => !prevState);\n    rightPanelClick = true;\n  };\n\n  const onTopbarSearchToggle = () => {\n    setSearchActive((prevState) => !prevState);\n    searchClick = true;\n  };\n\n  const onTopbarSearchClick = () => {\n    searchClick = true;\n  };\n\n  const onTopbarUserMenuClick = () => {\n    setTopbarUserMenuActive((prevState) => !prevState);\n    topbarUserMenuClick = true;\n  };\n\n  const onDocumentClick = () => {\n    if (!searchClick && searchActive) {\n      setSearchActive(false);\n      searchClick = false;\n    }\n\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\n      setTopbarUserMenuActive(false);\n      topbarUserMenuClick = false;\n    }\n\n    if (!rightPanelClick && rightPanelActive) {\n      setRightPanelActive(false);\n    }\n\n    if (!configClick && configActive) {\n      setConfigActive(false);\n    }\n\n    if (!menuClick) {\n      if (isSlim() || isHorizontal()) {\n        setResetActiveIndex(true);\n        setMenuActive(false);\n      }\n\n      if (staticMenuMobileActive) {\n        hideOverlayMenu();\n      }\n\n      unblockBodyScroll();\n    }\n\n    searchClick = false;\n    topbarUserMenuClick = false;\n    rightPanelClick = false;\n    configClick = false;\n    menuClick = false;\n  };\n\n  const onSidebarMouseOver = () => {\n    setSidebarActive(!isMobile());\n  };\n\n  const onSidebarMouseLeave = () => {\n    setSidebarActive(false);\n  };\n\n  const onToggleMenu = (event) => {\n    menuClick = true;\n    setSidebarStatic((prevState) => !prevState);\n\n    event.preventDefault();\n  };\n\n  const onRootMenuItemClick = () => {\n    setMenuActive((prevMenuActive) => !prevMenuActive);\n  };\n\n  const layoutClassName = classNames(\n    \"layout-wrapper\",\n    {\n      \"layout-sidebar\": \"sidebar\",\n      \"layout-static\": \"sidebar\" && sidebarStatic,\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\n      \"layout-rightpanel-active\": rightPanelActive,\n      \"layout-slim\": \"sidebar\" === \"slim\",\n      \"layout-mobile-active\": staticMenuMobileActive,\n      \"p-input-filled\": \"filled\",\n      \"p-ripple-disabled\": false,\n    },\n    \"layout-menu-light layout-topbar-light\"\n  );\n\n  return (\n    <div\n      className={layoutClassName}\n      onClick={onDocumentClick}\n      style={{ backgroundColor: \"#F0F0F0\" }}\n    >\n      <Tooltip\n        ref={copyTooltipRef}\n        target=\".block-action-copy\"\n        position=\"bottom\"\n        content=\"Copied to clipboard\"\n        event=\"focus\"\n      />\n\n      <AppTopbar\n        topbarScheme={\"light\"}\n        onRightPanelButtonClick={onRightPanelButtonClick}\n        searchActive={searchActive}\n        onTopbarSearchToggle={onTopbarSearchToggle}\n        onTopbarSearchClick={onTopbarSearchClick}\n        topbarUserMenuActive={topbarUserMenuActive}\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\n        menu={menu}\n        menuActive={menuActive}\n        onRootMenuItemClick={onRootMenuItemClick}\n        mobileMenuActive={staticMenuMobileActive}\n        onMenuItemClick={onMenuItemClick}\n        menuMode={\"sidebar\"}\n        sidebarStatic={sidebarStatic}\n        sidebarActive={sidebarActive}\n        onSidebarMouseOver={onSidebarMouseOver}\n        onSidebarMouseLeave={onSidebarMouseLeave}\n        onToggleMenu={onToggleMenu}\n        onMenuButtonClick={onMenuButtonClick}\n        resetActiveIndex={resetActiveIndex}\n        onMenuClick={onMenuClick}\n      />\n\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\n\n      <div className=\"layout-main\">\n        <div\n          className=\"mgeBG\"\n          style={{\n            opacity: \"0.3\",\n            height: \"100vh\",\n            position: \"fixed\",\n            width: \"100%\",\n            bottom: \"0\",\n            right: \"0\",\n          }}\n        >\n          &nbsp;\n        </div>\n        <div className=\"layout-content\">\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return getDatosUsuario() &&\n                getDatosUsuario().opciones &&\n                getDatosUsuario().opciones.length > 0 ? (\n                <Redirect to={getDatosUsuario().opciones[0].actionOpcion} />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/user/:id\" exact component={UserInfo} />\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\n          <Route\n            path=\"/trainingapplicant/:id/:idTraining\"\n            exact\n            component={TrainingApplicant}\n          />\n\n          <Route path=\"/users\" exact component={Usuarios} />\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\n          <Route path=\"/users/:id\" exact component={Usuario} />\n          <Route path=\"/resetPassword\" exact component={ResetPasswordUser} />\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\n\n          <Route path=\"/opciones\" exact component={Opciones} />\n          <Route path=\"/perfiles\" exact component={Perfiles} />\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\n\n          <Route path=\"/training\" exact component={Courses} />\n          <Route path=\"/training/:id\" exact component={Applicants} />\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\n          <Route path=\"/trainingnew\" exact component={Course} />\n\n          <Route path=\"/applicants\" exact component={Applicants} />\n          <Route\n            path=\"/applicants/:id/:idTraining\"\n            exact\n            component={Applicant}\n          />\n\n          <Route path=\"/classes\" exact component={Classes} />\n          <Route path=\"/workplan\" exact component={WorkPlan} />\n          <Route\n            path=\"/beneficiaries/:operation\"\n            exact\n            component={Beneficiaries}\n          />\n          <Route path=\"/finalreport\" exact component={FinalReport} />\n          <Route path=\"/certificate\" exact component={Certificate} />\n        </div>\n\n        <AppFooter />\n      </div>\n      <div className=\"layout-mask modal-in\"></div>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\"\r\nimport { getAutenticarUrl, getAutorizarUrl, updatePassword, recoveryPassword, validateUserUuid } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nconst config = { headers: { \"Accept-Language\": getCulture() } }\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales, config)\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales, config)\r\n    }\r\n    validateResetPassword = ({ datos }) => (axios.post(validateUserUuid(), datos, config))\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos, config)\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos, config)\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nimport { getCulture } from \"../utils/Internationalization\"\r\nconst headers = {\r\n    \"Accept-Language\": getCulture()\r\n}\r\nexport default class CatalogoService {\r\n    getPaises = () => this.getPorPadre({ catalogo: { catValor: \"CAT_PAISES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catValor: \"CAT_MODALIDAD\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catValor: \"CAT_CURSOS\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catValor: \"CAT_SEXO\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_ENT\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TIP_INF\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_INF\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_REG\" } })\r\n    getEducationLevel = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EDU_LEV\" } })\r\n    getTypePerson = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TYP_PER\" } })\r\n    getRegion = () => this.getPorPadre({ catalogo: { catValor: \"CAT_REGIONS\" } })\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getLabel, labels } from '../utils/Internationalization'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const visible = true\r\n                const { opciones } = data.listObject[0]\r\n                const opcionesVisible = opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/') >= 0 ? { ...o, visible: false } : { ...o, visible }))\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones: opcionesVisible })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                requests.push(catalogoService.getEducationLevel())\r\n                requests.push(catalogoService.getTypePerson())\r\n                requests.push(catalogoService.getRegion())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject,\r\n                                cursos: results[1].data.listObject,\r\n                                modalidades: results[2].data.listObject,\r\n                                generos: results[3].data.listObject,\r\n                                trainingStatus: results[4].data.listObject,\r\n                                reportType: results[5].data.listObject,\r\n                                reportStatus: results[6].data.listObject,\r\n                                states: results[7].data.listObject,\r\n                                educationLevels: results[8].data.listObject,\r\n                                typePersons: results[9].data.listObject,\r\n                                regions: results[10].data.listObject\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].perId }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    {getLabel(labels.welcomeBack)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    {getLabel(labels.loginAccess)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label={getLabel(labels.emailLogin)}\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterEmail),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item label={getLabel(labels.passwordLogin)}\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterPassword)\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>\r\n                                                {getLabel(labels.login)}\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>\r\n                                {\r\n                                    getLabel(labels.forgotPassword)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\nimport { getCulture } from '../utils/Internationalization'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, idInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: idInvitadoPor, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : \"An error occurred.\")\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        requests.push(catalogoService.getEducationLevel())\r\n        requests.push(catalogoService.getTypePerson())\r\n        requests.push(catalogoService.getRegion())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject,\r\n                        cursos: results[1].data.listObject,\r\n                        modalidades: results[2].data.listObject,\r\n                        generos: results[3].data.listObject,\r\n                        trainingStatus: results[4].data.listObject,\r\n                        reportType: results[5].data.listObject,\r\n                        reportStatus: results[6].data.listObject,\r\n                        states: results[7].data.listObject,\r\n                        educationLevels: results[8].data.listObject,\r\n                        typePersons: results[9].data.listObject,\r\n                        regions: results[9].data.listObject\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('Your account has been created successfully. Please log in.')\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            cultura: getCulture(),\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label='Upload your profile picture'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select your profile picture'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >Select Photo</Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Country Code\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Phone Number\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>Are you currently working?</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                Please write the complete name of the institution.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Additional email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => {\r\n                                                                    console.log(isValid)\r\n                                                                    setValidForm(isValid)\r\n                                                                }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport { getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item label=\"Email\"\r\n                                        name='email'\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email is not valid'\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete your email',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >Recover Password</Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useEffect, useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport AlertWait from \"./AlertWait\"\r\nimport toast from \"react-hot-toast\"\r\nimport { getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [validate, setValidate] = useState(true)\r\n    const [isValidating, setIsValidating] = useState(false)\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [isResetting, setIsResetting] = useState(false)\r\n    const [isReset, setIsReset] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const reset = async (values) => {\r\n        setOkMsg(null)\r\n        setIsResetting(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            if (data) {\r\n                setOkMsg(<>Password has been successfully changed. <br />Please log in again.</>)\r\n                setIsReset(true)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsResetting(false)\r\n        }\r\n    }\r\n\r\n    const validateRequest = async () => {\r\n        setValidate(false)\r\n        setIsValidating(true)\r\n        try {\r\n            const datos = { usuId: id, uuid }\r\n            const { data } = await cuentaService.validateResetPassword({ datos })\r\n            if (data) setIsValid(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else if (response.status === 409) {\r\n                setIsValid(false)\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        }\r\n        finally {\r\n            setIsValidating(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validate) validateRequest()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                <Row justify='center'>\r\n                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n\r\n                                {\r\n                                    isValidating ?\r\n                                        <>\r\n                                            <AlertWait isLoading={isValidating} message='Please wait...' />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {\r\n                                                isValid ?\r\n                                                    <>\r\n                                                        {\r\n                                                            isReset && okMsg ?\r\n                                                                <>\r\n                                                                    <Result\r\n                                                                        status='success'\r\n                                                                        title='Password Reset'\r\n                                                                        subTitle={okMsg}\r\n                                                                        extra={\r\n                                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                                onClick={() => {\r\n                                                                                    navigate.push('/login')\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Log in\r\n                                                                            </Button>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                                                    <Form\r\n                                                                        layout={'vertical'}\r\n                                                                        onFinish={reset}\r\n                                                                    >\r\n                                                                        <Form.Item label=\"New Password\"\r\n                                                                            name='password'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Complete new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item label=\"Confirm new password\"\r\n                                                                            name='passwordConfirm'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Confirme new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item>\r\n                                                                            <PasswordChecklist\r\n                                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                                minLength={8}\r\n                                                                                value={password}\r\n                                                                                valueAgain={passwordConfirm}\r\n                                                                                messages={{\r\n                                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                                    specialChar: \"Password has special characters.\",\r\n                                                                                    number: \"Password has a number.\",\r\n                                                                                    capital: \"Password has a capital letter.\",\r\n                                                                                    match: \"Passwords match.\",\r\n                                                                                }}\r\n                                                                                onChange={(isValid) => { }}\r\n                                                                            />\r\n                                                                        </Form.Item>\r\n                                                                        <div style={{\r\n                                                                            paddingTop: '10px'\r\n                                                                        }}>\r\n                                                                            <Form.Item>\r\n                                                                                <Button\r\n                                                                                    type='primary'\r\n                                                                                    htmlType='submit'\r\n                                                                                    loading={isResetting}\r\n                                                                                    disabled={isResetting}\r\n                                                                                    block>\r\n                                                                                    {\r\n                                                                                        isResetting ? 'Changing Password' : 'Reset Password'\r\n                                                                                    }\r\n                                                                                </Button>\r\n                                                                            </Form.Item>\r\n                                                                        </div>\r\n                                                                    </Form>\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <Result\r\n                                                        status='404'\r\n                                                        title='Page does not exist.'\r\n                                                        subTitle='Sorry, the page you visited does not exist.'\r\n                                                        extra={\r\n                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/login')\r\n                                                                }}\r\n                                                            >\r\n                                                                Log in\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                            }\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Layout >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from \"react\";\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport RecuperarPassword from \"./pages/RecuperarPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nexport const ctx = React.createContext();\n\nconst AppWrapper = (props) => {\n  let location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  const [colorScheme, setColorScheme] = useState(\"light\");\n\n  switch (props.location.pathname) {\n    case \"/login\":\n      return (\n        <Route\n          path=\"/login\"\n          render={() => <Login colorScheme={colorScheme} />}\n        />\n      );\n    case \"/signup\":\n      return (\n        <Route\n          path=\"/signup\"\n          render={() => <Signup colorScheme={colorScheme} />}\n        />\n      );\n    case \"/recover\":\n      return (\n        <Route\n          path=\"/recover\"\n          render={() => <RecuperarPassword colorScheme={colorScheme} />}\n        />\n      );\n    case \"/reset\":\n      return (\n        <Route\n          path=\"/reset\"\n          render={() => <ResetPassword colorScheme={colorScheme} />}\n        />\n      );\n    default:\n      return <App setColorScheme={setColorScheme} />;\n  }\n};\n\nexport default withRouter(AppWrapper);\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}