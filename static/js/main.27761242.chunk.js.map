{"version":3,"sources":["utils/Internationalization.jsx","AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/RestorePassword.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","pages/AlertWait.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CountryTrainingService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","service/InformService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","service/BeneficiaryService.jsx","service/CertificateService.jsx","components/beneficiary/Beneficiary.jsx","components/beneficiary/Beneficiaries.jsx","components/usuario/RestorePasswordUser.jsx","pages/ResetPasswordUser.jsx","components/cuenta/LanguagePreferences.jsx","pages/Language.jsx","App.js","service/CuentaService.jsx","service/CatalogoService.jsx","pages/Login.jsx","pages/Signup.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","AppWrapper.js","index.js"],"names":["getCulture","domainCulture","window","location","hostname","indexOf","localStorage","getItem","JSON","parse","culture","setCulture","c","setItem","stringify","labels","welcomeBack","loginAccess","emailLogin","passwordLogin","login","enterEmail","enterPassword","emailNotValid","forgotPassword","recoverPassword","email","completeEmail","resourceNotAvailable","resetPassword","view","edit","errorOcurred","trainings","training","refresh","newTraining","onlyInactive","loading","courses","applicants","searchExpression","search","name","country","attendance","workPlan","finalReport","certificate","actions","registrationDate","evidences","download","reviewDate","observation","comments","sureApproveThe","sureRejectThe","yesApprove","yesReject","approve","reject","expires","attendanceSaved","emailSent","emailSendFailed","information","rol","applicant","invitedBy","firstName","lastName","sex","dateBirth","city","countryCode","phoneNumber","idNumber","currentyWorking","additionalEmail","progress","sendInvitationEmail","thenEmail","alreadyExists","successfullyCreated","successfullyAdded","successfullyRemoved","successfullySaved","successfullyDeleted","successfullyUpdated","couldNotSendEmail","emailSentSuccessfully","addCountryCourseApplicant","publishSuccesfully","saveDraft","surePublishTraining","yesPublish","publish","idTraining","completeID","region","selectRegion","language","selectLanguage","selectCountry","trainingName","completeTrainingName","modality","selectModality","startDate","selectStartDate","endDate","selectEndDate","selectCourses","applicantsEmails","pressEnterAddEmail","addApplicants","notPossibleAddApplicant","myAccount","signOut","accountUpdatedSuccessfully","uploadFailed","uploadProfilePicture","selectPhoto","completeFirstName","completeLastName","selectSex","selectDateBirth","uniqueIdentificationCountry","completeCity","selectCountryCode","completePhoneNumber","completeNameInstitution","ifYesCompleteNameInstitution","completeAdditionalEmail","additionalEmailNotValid","state","selectState","pleaseWait","passwordResetSuccessfully","completePassword","password","newPassword","confirmNewPassword","completeNewPassword","resetting","passwordHasMore8Characters","passwordHasSpecialCharacters","passwordHasNumber","passwordHasCapitalLetter","passwordsMatch","uploadYourWorkplan","file","selectFile","uploading","sending","send","uploadSuccessfully","workplanTemplate","languagePreferences","seePreferredLanguage","back","languagePreferencesSaved","ok","reset","save","accept","yes","no","cancel","minimumBeneficiaries","beneficiaryTitle","beneficiariesTitle","deleteBeneficiaryTitle","reConfirmDeleteBeneficiary","sendBeneficiaryListTitle","sendBeneficiaryListConfirm","beneficiarySuccessfullyRemoved","beneficiarySuccessfullyUpdated","certificateSentSuccessfully","certificateSendFailed","certificateGeneratedSuccessfully","newBeneficiary","jobTitle","isWorking","company","instructionLevel","totalPersons","sureDeleteBeneficiary","registryOperation","qualificationOperation","oneApprovedWorkplanRegisterBeneficiaries","sendWorkplan","oneApprovedFinalReportQualifyBeneficiaries","sendFinalReport","completeInstructionLevel","saving","companyID","completeCompanyID","completeCompany","completeJobTitle","totalCollaborators","completeTotalCollaborators","men","women","numberMen","numberWomen","uploadFinalReport","copyEvidenceLink","url","evidenceSendedSuccessfully","finalReportTemplate","thereMustLeast","registeredBeneficiariesUploadFinalReport","registerBeneficiaries","seeYourCertificateFinalReportBeneficiary","sendListBeneficiaries","users","trainerOfTrainers","trainer","sessionExpired","trainingsNotFound","backHome","notEnrolled","usersManagement","new","userUpdatedSuccessfully","user","userCreatedSuccessfully","createYourPassword","confirmYourPassword","profile","selectProfile","profilesManagement","level","active","inactive","profileSavedSuccessfully","profileDeletedSuccessfully","sureDeleteProfiles","delete","deleting","sureDeleteProfile","option","options","of","resultsFound","filtered","sureDownloadUsersReport","sureDownloadBeneficiariesReport","passwordSentIndicatedEmail","passwordSuccessfullyChanged","resettingPassword","pageNotExist","pageVisitedNotExist","sendNotification","accountCreatedSuccessfully","welcomeMyGreenEnterprise","selectProfilePicture","completeInformationActiveAccount","register","accountPreviouslyCreated","uploadSignature","signature","signatureUploaded","signatureAlreadyUploaded","loginAs","theSum","mustEqual","signatureMustBePNG","contents","id","label","getLabel","filter","l","AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","element","classList","remove","replace","RegExp","split","join","isMobile","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","getDatosUsuario","opciones","getCatalogos","setTrainingInforms","setInforms","informs","getOpciones","opcion","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getOpcionesMenu","w","infTipo","catValor","infEstado","opcionesSubOpciones","undefined","getSortInforms","sort","a","b","infFechaAprRec","getInformStatus","sortInforms","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perNombre","push","gutter","removeItem","AppFooter","display","AppRightPanel","AxiosInstance","navigate","axiosInstance","axios","create","headers","interceptors","request","use","config","token","toast","error","Promise","response","status","apiURL","getCatalogosPorPadreUrl","downloadUsersReport","updateTraining","downloadInformByName","downloadCertificateByUuid","downloadBeneficiariesReport","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","put","set","patch","upLoadPhoto","datos","getLessPostulants","getUsersListByProfile","getTotalUsersByProfile","Paragraph","Typography","RestorePassword","isReseting","closeResetPassword","setPassword","validForm","setValidForm","setSendNotification","strong","layout","initialValues","onFinish","Item","rules","required","message","Password","onChange","minLength","messages","specialChar","number","capital","isValid","valuePropName","defaultChecked","checked","fieldNames","showSearch","email2","htmlType","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setUser","setError","documento","setDocumento","setEmail","setNombres","estado","setEstado","openResetPassword","setOpenResetPassword","setIsReseting","columnas","title","render","_","imagen","width","dataIndex","direction","responsive","firma","color","codigotel","celular","record","usuId","values","md5","data","success","messageText","fetchData","estadoId","listObject","subTitle","extra","span","justify","Title","xs","sm","md","lg","xl","Group","states","s","catId","catNombre","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","rowClassName","placement","onClose","open","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","signatureFile","setSignatureFile","fileList","setFileList","fileSignatureList","setSignatureFileList","photoFormatValid","setPhotoFormatValid","onRemove","newFileList","slice","splice","beforeUpload","URL","createObjectURL","propsSignature","isPNG","update","trabaja","sexoId","sexo","paisId","pais","lugartrabajo","usuarioActualizado","requests","FormData","append","all","then","results","catch","msgError","newUsuario","fechanac","moment","$d","perfil","align","xxl","multiple","generos","optionFilterProp","paises","p","catDescripcion","srcSet","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","forEach","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","form","opcIcono","PerfilService","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","sureDeletProfile","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","guardar","perfilActualizado","eliminar","AlertWait","showIcon","tableProps","estilos","background","Dashboard","loadTotals","setLoadTotals","setUsers","isLoadingTotals","setIsLoadingTotals","totals","setTotals","setApellidos","setPaises","estados","setEstados","selectedProfiles","setSelectedProfiles","currentDataSource","setCurrentDataSource","isDownloading","setIsDownloading","filters","n","filterMode","onFilter","setProfile","profiles","u","finally","renderTotalExportar","description","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","xhr","blob","Blob","saveAs","downloadReport","valueStyle","fetchDataTotals","totalesCompleto","totales","t","total","reduce","accumulator","currentValue","activos","hoverable","Math","round","precision","prefix","suffix","renderTotal","tip","closeIcon","borderRadius","sorter","TrainingService","getByTraining","getById","pub","trainingService","UserInfo","setTrainings","fetchTrainings","idUsuario","centered","letterSpacing","readOnly","entEstado","entFechaFin","entFechaIni","entId","entNombre","marginBottom","reverse","renderTraining","border","UsuarioNew","passwordConfirm","setPasswordConfirm","insert","cultura","fetchProfiles","valueAgain","match","User","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","setState","setCourses","paddingBottom","entModalidad","numPostulantes","cursoList","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CountryTrainingService","countryTraining","CourseService","course","baseTraining","entCultura","postulantService","countryTrainingService","courseService","Course","formPostulante","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","setStartDate","setEndDate","formCourse","removePostulant","newPostulantsList","idRegion","idModalidad","idEstado","trainingStatus","regions","setFieldValue","mode","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","cursos","resetFields","posEmail","Applicants","setCourse","setApplicants","postulanteList","posEstado","entRegion","criteria","searchCriteria","ciudad","filteredCourse","defaultSortOrder","nombresApellidos","asistenciaList","asiValor","informeList","curNombre","substr","idCurso","curId","certificadoList","tc","cerEstado","posId","AttendanceService","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","attendanceService","informService","panelStyle","backgroundColor","Applicant","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","downloadInform","column","eviUrl","whiteSpace","TextArea","showCount","maxLength","setInform","reportStatus","danger","renderInform","downloadCertificate","cerUuid","cerNombre","setAttendance","sendRateEmail","informe","idEntrenamiento","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","cerFechaCad","cerId","cerFechaReg","cerRuta","renderCertificate","WorkPlan","setPostulant","setUploading","setSending","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","handleUpload","reportType","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","idInforme","informInserted","newInform","downloadFinalReportTemplate","beneficiarioList","entLimBen","f","Certificate","Classes","Training","loadPostulant","setLoadPostulant","isLoadingCountry","setIsLoadingCountry","isLoadingCourse","setIsLoadingCourse","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","setCountry","fetchCountries","newCourse","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","countries","countryTrainingList","paePais","modTraining","envios","promise","fn","resolve","flag","idPais","onDeselect","paeId","idNombreCurso","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","BeneficiaryService","beneficiary","getByPostulant","val","CertificateService","generate","downloadByUuid","renderPaisValor","Beneficiary","saveBeneficiary","closeBeneficiary","benNumPer","totalEmpleados","setTotalEmpleados","benHombres","totalEmpleadosH","setTotalEmpleadosH","benMujeres","totalEmpleadosM","setTotalEmpleadosM","totalValido","formBeneficiary","editDisabled","educationLevels","beneficiaryService","certificateService","confirm","Modal","Beneficiaries","operation","isOpening","setIsOpening","isLoadingBeneficiaries","setIsLoadingBeneficiaries","beneficiaryC1","setBeneficiaryC1","beneficiaryC2","setBeneficiaryC2","openC1","setOpenC1","openC2","setOpenC2","benId","selectedBeneficiary","setSelectedBeneficiary","openDeleteBeneficiary","setOpenDeleteBeneficiary","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","closeBeneficiaryC1","getBeneficiaryC1","idTipo","benTipo","benPais","idSexo","benSexo","idNivelInt","benNivelInt","saveBeneficiaryC1","time","closeBeneficiaryC2","getBeneficiaryC2","saveBeneficiaryC2","confirmDeleteBeneficiary","delBeneficiary","validateBeneficiary","sendCertificate","idPostulante","sendBeneficiaries","onOk","benTrabaja","typePersons","catReferencia","benDocumento","benNombres","benCiudad","benCargo","benNomEmpresa","benValidado","typeLoad","confirmLoading","onCancel","RestorePasswordUser","passwordNew","setPasswordNew","passwordNewConfirm","setPasswordNewConfirm","oldpassword","ResetPasswordUser","fetchUser","LanguagePreferences","setValue","renderCulture","Language","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","useLocation","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","onRightPanelClick","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","validateResetPassword","recoveryPassword","updatePassword","CatalogoService","getPaises","getPorPadre","catalogo","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","getEducationLevel","getTypePerson","getRegion","getCatalogo","cuentaService","catalogoService","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","opcionesVisible","mgeCatalogos","statusText","textTransform","renderPerfil","backgroundImage","renderError","messageCode","Signup","decodeURIComponent","uuid","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","invitadopor","fetchCatalogos","registrar","RecuperarPassword","okMsg","setOkMsg","setEmailSent","recuperar","banner","ResetPassword","setValidate","isValidating","setIsValidating","setIsValid","isResetting","setIsResetting","isReset","setIsReset","validateRequest","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.27761242.chunk.js","sourcesContent":["export const getCulture = () => {\r\n    const domainCulture = window.location.hostname.indexOf('mygreenenterprise') > 0 ? 'en_US' : 'es_EC'\r\n    return (localStorage.getItem('mgeCulture') && JSON.parse(localStorage.getItem('mgeCulture')).culture) || domainCulture\r\n}\r\nexport const setCulture = (c) => localStorage.setItem('mgeCulture', JSON.stringify(c))\r\nexport const labels = {\r\n    welcomeBack: 'welcomeBack',\r\n    loginAccess: 'loginAccess',\r\n    emailLogin: 'emailLogin',\r\n    passwordLogin: 'passwordLogin',\r\n    login: 'login',\r\n    enterEmail: 'enterEmail',\r\n    enterPassword: 'enterPassword',\r\n    emailNotValid: 'emailNotValid',\r\n    forgotPassword: 'forgotPassword',\r\n    recoverPassword: 'recoverPassword',\r\n    email: 'email',\r\n    completeEmail: 'completeEmail',\r\n    resourceNotAvailable: 'resourceNotAvailable',\r\n    resetPassword: 'resetPassword',\r\n    view: 'view',\r\n    edit: 'edit',\r\n    errorOcurred: 'errorOcurred',\r\n    trainings: 'trainings',\r\n    training: 'training',\r\n    refresh: 'refresh',\r\n    newTraining: 'newTraining',\r\n    onlyInactive: 'onlyInactive',\r\n    loading: 'loading',\r\n    courses: 'courses',\r\n    applicants: 'applicants',\r\n    searchExpression: 'searchExpression',\r\n    search: 'search',\r\n    name: 'name',\r\n    country: 'country',\r\n    attendance: 'attendance',\r\n    workPlan: 'workPlan',\r\n    finalReport: 'finalReport',\r\n    certificate: 'certificate',\r\n    actions: 'actions',\r\n    registrationDate: 'registrationDate',\r\n    evidences: 'evidences',\r\n    download: 'download',\r\n    reviewDate: 'reviewDate',\r\n    observation: 'observation',\r\n    comments: 'comments',\r\n    sureApproveThe: 'sureApproveThe',\r\n    sureRejectThe: 'sureRejectThe',\r\n    yesApprove: 'yesApprove',\r\n    yesReject: 'yesReject',\r\n    approve: 'approve',\r\n    reject: 'reject',\r\n    expires: 'expires',\r\n    attendanceSaved: 'attendanceSaved',\r\n    emailSent: 'emailSent',\r\n    emailSendFailed: 'emailSendFailed',\r\n    information: 'information',\r\n    rol: 'rol',\r\n    applicant: 'applicant',\r\n    invitedBy: 'invitedBy',\r\n    firstName: 'firstName',\r\n    lastName: 'lastName',\r\n    sex: 'sex',\r\n    dateBirth: 'dateBirth',\r\n    city: 'city',\r\n    countryCode: 'countryCode',\r\n    phoneNumber: 'phoneNumber',\r\n    idNumber: 'idNumber',\r\n    currentyWorking: 'currentyWorking',\r\n    additionalEmail: 'additionalEmail',\r\n    progress: 'progress',\r\n    sendInvitationEmail: 'sendInvitationEmail',\r\n    thenEmail: 'thenEmail',\r\n    alreadyExists: 'alreadyExists',\r\n    successfullyCreated: 'successfullyCreated',\r\n    successfullyAdded: 'successfullyAdded',\r\n    successfullyRemoved: 'successfullyRemoved',\r\n    successfullySaved: 'successfullySaved',\r\n    successfullyDeleted: 'successfullyDeleted',\r\n    successfullyUpdated: 'successfullyUpdated',\r\n    couldNotSendEmail: 'couldNotSendEmail',\r\n    emailSentSuccessfully: 'emailSentSuccessfully',\r\n    addCountryCourseApplicant: 'addCountryCourseApplicant',\r\n    publishSuccesfully: 'publishSuccesfully',\r\n    saveDraft: 'saveDraft',\r\n    surePublishTraining: 'surePublishTraining',\r\n    yesPublish: 'yesPublish',\r\n    publish: 'publish',\r\n    idTraining: 'idTraining',\r\n    completeID: 'completeID',\r\n    region: 'region',\r\n    selectRegion: 'selectRegion',\r\n    language: 'language',\r\n    selectLanguage: 'selectLanguage',\r\n    selectCountry: 'selectCountry',\r\n    trainingName: 'trainingName',\r\n    completeTrainingName: 'completeTrainingName',\r\n    modality: 'modality',\r\n    selectModality: 'selectModality',\r\n    startDate: 'startDate',\r\n    selectStartDate: 'selectStartDate',\r\n    endDate: 'endDate',\r\n    selectEndDate: 'selectEndDate',\r\n    selectCourses: 'selectCourses',\r\n    applicantsEmails: 'applicantsEmails',\r\n    pressEnterAddEmail: 'pressEnterAddEmail',\r\n    addApplicants: 'addApplicants',\r\n    notPossibleAddApplicant: 'notPossibleAddApplicant',\r\n    myAccount: 'myAccount',\r\n    signOut: 'signOut',\r\n    accountUpdatedSuccessfully: 'accountUpdatedSuccessfully',\r\n    uploadFailed: 'uploadFailed',\r\n    uploadProfilePicture: 'uploadProfilePicture',\r\n    selectPhoto: 'selectPhoto',\r\n    completeFirstName: 'completeFirstName',\r\n    completeLastName: 'completeLastName',\r\n    selectSex: 'selectSex',\r\n    selectDateBirth: 'selectDateBirth',\r\n    uniqueIdentificationCountry: 'uniqueIdentificationCountry',\r\n    completeCity: 'completeCity',\r\n    selectCountryCode: 'selectCountryCode',\r\n    completePhoneNumber: 'completePhoneNumber',\r\n    completeNameInstitution: 'completeNameInstitution',\r\n    ifYesCompleteNameInstitution: 'ifYesCompleteNameInstitution',\r\n    completeAdditionalEmail: 'completeAdditionalEmail',\r\n    additionalEmailNotValid: 'additionalEmailNotValid',\r\n    state: 'state',\r\n    selectState: 'selectState',\r\n    pleaseWait: 'pleaseWait',\r\n    passwordResetSuccessfully: 'passwordResetSuccessfully',\r\n    completePassword: 'completePassword',\r\n    password: 'password',\r\n    newPassword: 'newPassword',\r\n    confirmNewPassword: 'confirmNewPassword',\r\n    completeNewPassword: 'completeNewPassword',\r\n    resetting: 'resetting',\r\n    passwordHasMore8Characters: 'passwordHasMore8Characters',\r\n    passwordHasSpecialCharacters: 'passwordHasSpecialCharacters',\r\n    passwordHasNumber: 'passwordHasNumber',\r\n    passwordHasCapitalLetter: 'passwordHasCapitalLetter',\r\n    passwordsMatch: 'passwordsMatch',\r\n    uploadYourWorkplan: 'uploadYourWorkplan',\r\n    file: 'file',\r\n    selectFile: 'selectFile',\r\n    uploading: 'uploading',\r\n    sending: 'sending',\r\n    send: 'send',\r\n    uploadSuccessfully: 'uploadSuccessfully',\r\n    workplanTemplate: 'workplanTemplate',\r\n    languagePreferences: 'languagePreferences',\r\n    seePreferredLanguage: 'seePreferredLanguage',\r\n    back: 'back',\r\n    languagePreferencesSaved: 'languagePreferencesSaved',\r\n    ok: 'ok',\r\n    reset: 'reset',\r\n    save: 'save',\r\n    accept: 'accept',\r\n    yes: 'yes',\r\n    no: 'no',\r\n    cancel: 'cancel',\r\n    minimumBeneficiaries: 'minimumBeneficiaries',\r\n    beneficiaryTitle: 'beneficiaryTitle',\r\n    beneficiariesTitle: 'beneficiariesTitle',\r\n    deleteBeneficiaryTitle: 'deleteBeneficiaryTitle',\r\n    reConfirmDeleteBeneficiary: 'reConfirmDeleteBeneficiary',\r\n    sendBeneficiaryListTitle: 'sendBeneficiaryListTitle',\r\n    sendBeneficiaryListConfirm: 'sendBeneficiaryListConfirm',\r\n    beneficiarySuccessfullyRemoved: 'beneficiarySuccessfullyRemoved',\r\n    beneficiarySuccessfullyUpdated: 'beneficiarySuccessfullyUpdated',\r\n    certificateSentSuccessfully: 'certificateSentSuccessfully',\r\n    certificateSendFailed: 'certificateSendFailed',\r\n    certificateGeneratedSuccessfully: 'certificateGeneratedSuccessfully',\r\n    newBeneficiary: 'newBeneficiary',\r\n    jobTitle: 'jobTitle',\r\n    isWorking: 'isWorking',\r\n    company: 'company',\r\n    instructionLevel: 'instructionLevel',\r\n    totalPersons: 'totalPersons',\r\n    sureDeleteBeneficiary: 'sureDeleteBeneficiary',\r\n    registryOperation: 'registryOperation',\r\n    qualificationOperation: 'qualificationOperation',\r\n    oneApprovedWorkplanRegisterBeneficiaries: 'oneApprovedWorkplanRegisterBeneficiaries',\r\n    sendWorkplan: 'sendWorkplan',\r\n    oneApprovedFinalReportQualifyBeneficiaries: 'oneApprovedFinalReportQualifyBeneficiaries',\r\n    sendFinalReport: 'sendFinalReport',\r\n    completeInstructionLevel: 'completeInstructionLevel',\r\n    saving: 'saving',\r\n    companyID: 'companyID',\r\n    completeCompanyID: 'completeCompanyID',\r\n    completeCompany: 'completeCompany',\r\n    completeJobTitle: 'completeJobTitle',\r\n    totalCollaborators: 'totalCollaborators',\r\n    completeTotalCollaborators: 'completeTotalCollaborators',\r\n    men: 'men',\r\n    women: 'women',\r\n    numberMen: 'numberMen',\r\n    numberWomen: 'numberWomen',\r\n    uploadFinalReport: 'uploadFinalReport',\r\n    copyEvidenceLink: 'copyEvidenceLink',\r\n    url: 'url',\r\n    evidenceSendedSuccessfully: 'evidenceSendedSuccessfully',\r\n    finalReportTemplate: 'finalReportTemplate',\r\n    thereMustLeast: 'thereMustLeast',\r\n    registeredBeneficiariesUploadFinalReport: 'registeredBeneficiariesUploadFinalReport',\r\n    registerBeneficiaries: 'registerBeneficiaries',\r\n    seeYourCertificateFinalReportBeneficiary: 'seeYourCertificateFinalReportBeneficiary',\r\n    sendListBeneficiaries: 'sendListBeneficiaries',\r\n    users: 'users',\r\n    trainerOfTrainers: 'trainerOfTrainers',\r\n    trainer: 'trainer',\r\n    sessionExpired: 'sessionExpired',\r\n    trainingsNotFound: 'trainingsNotFound',\r\n    backHome: 'backHome',\r\n    notEnrolled: 'notEnrolled',\r\n    usersManagement: 'usersManagement',\r\n    new: 'new',\r\n    userUpdatedSuccessfully: 'userUpdatedSuccessfully',\r\n    user: 'user',\r\n    userCreatedSuccessfully: 'userCreatedSuccessfully',\r\n    createYourPassword: 'createYourPassword',\r\n    confirmYourPassword: 'confirmYourPassword',\r\n    profile: 'profile',\r\n    selectProfile: 'selectProfile',\r\n    profilesManagement: 'profilesManagement',\r\n    level: 'level',\r\n    active: 'active',\r\n    inactive: 'inactive',\r\n    profileSavedSuccessfully: 'profileSavedSuccessfully',\r\n    profileDeletedSuccessfully: 'profileDeletedSuccessfully',\r\n    sureDeleteProfiles: 'sureDeleteProfiles',\r\n    delete: 'delete',\r\n    deleting: 'deleting',\r\n    sureDeleteProfile: 'sureDeleteProfile',\r\n    option: 'option',\r\n    options: 'options',\r\n    of: 'of',\r\n    resultsFound: 'resultsFound',\r\n    filtered: 'filtered',\r\n    sureDownloadUsersReport: 'sureDownloadUsersReport',\r\n    sureDownloadBeneficiariesReport: 'sureDownloadBeneficiariesReport',\r\n    passwordSentIndicatedEmail: 'passwordSentIndicatedEmail',\r\n    passwordSuccessfullyChanged: 'passwordSuccessfullyChanged',\r\n    resettingPassword: 'resettingPassword',\r\n    pageNotExist: 'pageNotExist',\r\n    pageVisitedNotExist: 'pageVisitedNotExist',\r\n    sendNotification: 'sendNotification',\r\n    accountCreatedSuccessfully: 'accountCreatedSuccessfully',\r\n    welcomeMyGreenEnterprise: 'welcomeMyGreenEnterprise',\r\n    selectProfilePicture: 'selectProfilePicture',\r\n    completeInformationActiveAccount: 'completeInformationActiveAccount',\r\n    register: 'register',\r\n    accountPreviouslyCreated: 'accountPreviouslyCreated',\r\n    uploadSignature: 'uploadSignature',\r\n    signature: 'signature',\r\n    signatureUploaded: 'signatureUploaded',\r\n    signatureAlreadyUploaded: 'signatureAlreadyUploaded',\r\n    loginAs: 'loginAs',\r\n    theSum: 'theSum',\r\n    mustEqual: 'mustEqual',\r\n    signatureMustBePNG: 'signatureMustBePNG',\r\n}\r\nconst contents = [\r\n    { id: 'welcomeBack', labels: [{ culture: 'en_US', label: 'Welcome back' }, { culture: 'es_EC', label: 'Bienvenido' }] },\r\n    { id: 'loginAccess', labels: [{ culture: 'en_US', label: 'Log in to access your account' }, { culture: 'es_EC', label: 'Ingresa para acceder a tu cuenta' }] },\r\n    { id: 'emailLogin', labels: [{ culture: 'en_US', label: 'Log in with your email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'passwordLogin', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'login', labels: [{ culture: 'en_US', label: 'Log in' }, { culture: 'es_EC', label: 'Ingresar' }] },\r\n    { id: 'enterEmail', labels: [{ culture: 'en_US', label: 'Enter you email' }, { culture: 'es_EC', label: 'Ingresa el correo' }] },\r\n    { id: 'enterPassword', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Ingresa la contraseña' }] },\r\n    { id: 'emailNotValid', labels: [{ culture: 'en_US', label: 'Email is not valid' }, { culture: 'es_EC', label: 'Correo no válido' }] },\r\n    { id: 'forgotPassword', labels: [{ culture: 'en_US', label: 'Forgot your password?' }, { culture: 'es_EC', label: '¿Olvidaste tu contraseña?' }] },\r\n    { id: 'recoverPassword', labels: [{ culture: 'en_US', label: 'Recover password' }, { culture: 'es_EC', label: 'Recuperar Contraseña' }] },\r\n    { id: 'email', labels: [{ culture: 'en_US', label: 'Email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'completeEmail', labels: [{ culture: 'en_US', label: 'Complete your email' }, { culture: 'es_EC', label: 'Completa el correo' }] },\r\n    { id: 'resourceNotAvailable', labels: [{ culture: 'en_US', label: 'The requested resource is not available or cannot be found.' }, { culture: 'es_EC', label: 'El recurso solicitado no está disponible o no existe.' }] },\r\n    { id: 'resetPassword', labels: [{ culture: 'en_US', label: 'Reset password' }, { culture: 'es_EC', label: 'Restablecer contraseña' }] },\r\n    { id: 'view', labels: [{ culture: 'en_US', label: 'View' }, { culture: 'es_EC', label: 'Ver' }] },\r\n    { id: 'edit', labels: [{ culture: 'en_US', label: 'Edit' }, { culture: 'es_EC', label: 'Editar' }] },\r\n    { id: 'errorOcurred', labels: [{ culture: 'en_US', label: 'An error ocurred' }, { culture: 'es_EC', label: 'Ocurrió un error' }] },\r\n    { id: 'trainings', labels: [{ culture: 'en_US', label: 'Trainings' }, { culture: 'es_EC', label: 'Formaciones' }] },\r\n    { id: 'training', labels: [{ culture: 'en_US', label: 'Training' }, { culture: 'es_EC', label: 'Formación' }] },\r\n    { id: 'refresh', labels: [{ culture: 'en_US', label: 'Refresh' }, { culture: 'es_EC', label: 'Actualizar' }] },\r\n    { id: 'newTraining', labels: [{ culture: 'en_US', label: 'New Training' }, { culture: 'es_EC', label: 'Nueva Formación' }] },\r\n    { id: 'onlyInactive', labels: [{ culture: 'en_US', label: 'Inactive only' }, { culture: 'es_EC', label: 'Solo inactivos' }] },\r\n    { id: 'loading', labels: [{ culture: 'en_US', label: 'Loading' }, { culture: 'es_EC', label: 'Cargando' }] },\r\n    { id: 'courses', labels: [{ culture: 'en_US', label: 'Courses' }, { culture: 'es_EC', label: 'Cursos' }] },\r\n    { id: 'applicants', labels: [{ culture: 'en_US', label: 'Applicants' }, { culture: 'es_EC', label: 'Postulantes' }] },\r\n    { id: 'searchExpression', labels: [{ culture: 'en_US', label: 'Search expression' }, { culture: 'es_EC', label: 'Criterio de Búsqueda' }] },\r\n    { id: 'search', labels: [{ culture: 'en_US', label: 'Search' }, { culture: 'es_EC', label: 'Buscar' }] },\r\n    { id: 'name', labels: [{ culture: 'en_US', label: 'Name' }, { culture: 'es_EC', label: 'Nombre' }] },\r\n    { id: 'country', labels: [{ culture: 'en_US', label: 'Country' }, { culture: 'es_EC', label: 'País' }] },\r\n    { id: 'attendance', labels: [{ culture: 'en_US', label: 'Attendance' }, { culture: 'es_EC', label: 'Asistencia' }] },\r\n    { id: 'workPlan', labels: [{ culture: 'en_US', label: 'Work Plan' }, { culture: 'es_EC', label: 'Plan de Trabajo' }] },\r\n    { id: 'finalReport', labels: [{ culture: 'en_US', label: 'Final Report' }, { culture: 'es_EC', label: 'Informe Final' }] },\r\n    { id: 'certificate', labels: [{ culture: 'en_US', label: 'Certificate' }, { culture: 'es_EC', label: 'Certificado' }] },\r\n    { id: 'actions', labels: [{ culture: 'en_US', label: 'Actions' }, { culture: 'es_EC', label: 'Acciones' }] },\r\n    { id: 'registrationDate', labels: [{ culture: 'en_US', label: 'Registration Date' }, { culture: 'es_EC', label: 'Fecha de Registro' }] },\r\n    { id: 'evidences', labels: [{ culture: 'en_US', label: 'Evidences' }, { culture: 'es_EC', label: 'Evidencias' }] },\r\n    { id: 'download', labels: [{ culture: 'en_US', label: 'Download' }, { culture: 'es_EC', label: 'Descargar' }] },\r\n    { id: 'reviewDate', labels: [{ culture: 'en_US', label: 'Review Date' }, { culture: 'es_EC', label: 'Fecha de Revisión' }] },\r\n    { id: 'observation', labels: [{ culture: 'en_US', label: 'Observation' }, { culture: 'es_EC', label: 'Observación' }] },\r\n    { id: 'comments', labels: [{ culture: 'en_US', label: 'Comments' }, { culture: 'es_EC', label: 'Comentarios' }] },\r\n    { id: 'sureApproveThe', labels: [{ culture: 'en_US', label: 'Are you sure to approve the' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas aprobar el' }] },\r\n    { id: 'sureRejectThe', labels: [{ culture: 'en_US', label: 'Are you sure to reject the' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas rechazar el' }] },\r\n    { id: 'yesApprove', labels: [{ culture: 'en_US', label: 'Yes, approve' }, { culture: 'es_EC', label: 'Sí, aprobar' }] },\r\n    { id: 'yesReject', labels: [{ culture: 'en_US', label: 'Yes, reject' }, { culture: 'es_EC', label: 'Sí, rechazar' }] },\r\n    { id: 'approve', labels: [{ culture: 'en_US', label: 'Approve' }, { culture: 'es_EC', label: 'Aprobar' }] },\r\n    { id: 'reject', labels: [{ culture: 'en_US', label: 'Reject' }, { culture: 'es_EC', label: 'Rechazar' }] },\r\n    { id: 'expires', labels: [{ culture: 'en_US', label: 'Expires' }, { culture: 'es_EC', label: 'Vence' }] },\r\n    { id: 'attendanceSaved', labels: [{ culture: 'en_US', label: 'Attendance Successfully Saved' }, { culture: 'es_EC', label: 'Asistencia guardada exitosamente' }] },\r\n    { id: 'emailSent', labels: [{ culture: 'en_US', label: 'Email Sent Successfully' }, { culture: 'es_EC', label: 'Email enviado existosamente' }] },\r\n    { id: 'information', labels: [{ culture: 'en_US', label: 'Information' }, { culture: 'es_EC', label: 'Información' }] },\r\n    { id: 'rol', labels: [{ culture: 'en_US', label: 'Rol' }, { culture: 'es_EC', label: 'Rol' }] },\r\n    { id: 'applicant', labels: [{ culture: 'en_US', label: 'Applicant' }, { culture: 'es_EC', label: 'Postulante' }] },\r\n    { id: 'invitedBy', labels: [{ culture: 'en_US', label: 'Invited by' }, { culture: 'es_EC', label: 'Invitado por' }] },\r\n    { id: 'firstName', labels: [{ culture: 'en_US', label: 'First Name' }, { culture: 'es_EC', label: 'Nombres' }] },\r\n    { id: 'lastName', labels: [{ culture: 'en_US', label: 'Last Name' }, { culture: 'es_EC', label: 'Apellidos' }] },\r\n    { id: 'sex', labels: [{ culture: 'en_US', label: 'Sex' }, { culture: 'es_EC', label: 'Sexo' }] },\r\n    { id: 'dateBirth', labels: [{ culture: 'en_US', label: 'Date Birth' }, { culture: 'es_EC', label: 'Fecha de Nacimiento' }] },\r\n    { id: 'city', labels: [{ culture: 'en_US', label: 'City' }, { culture: 'es_EC', label: 'Ciudad' }] },\r\n    { id: 'countryCode', labels: [{ culture: 'en_US', label: 'Country Code' }, { culture: 'es_EC', label: 'Código de País' }] },\r\n    { id: 'phoneNumber', labels: [{ culture: 'en_US', label: 'Phone Number' }, { culture: 'es_EC', label: 'Número de Teléfono' }] },\r\n    { id: 'idNumber', labels: [{ culture: 'en_US', label: 'ID Number' }, { culture: 'es_EC', label: 'Número de Identificación' }] },\r\n    { id: 'currentyWorking', labels: [{ culture: 'en_US', label: 'Currenty Working' }, { culture: 'es_EC', label: 'Esta trabajando actualmente' }] },\r\n    { id: 'additionalEmail', labels: [{ culture: 'en_US', label: 'Additional Email' }, { culture: 'es_EC', label: 'Correo Adicional' }] },\r\n    { id: 'progress', labels: [{ culture: 'en_US', label: 'Progress' }, { culture: 'es_EC', label: 'Progreso' }] },\r\n    { id: 'sendInvitationEmail', labels: [{ culture: 'en_US', label: 'Send invitation email' }, { culture: 'es_EC', label: 'Enviar el correo electrónico de invitación' }] },\r\n    { id: 'thenEmail', labels: [{ culture: 'en_US', label: 'Then email' }, { culture: 'es_EC', label: 'El correo' }] },\r\n    { id: 'alreadyExists', labels: [{ culture: 'en_US', label: 'already exists' }, { culture: 'es_EC', label: 'ya se encuentra registrado' }] },\r\n    { id: 'successfullyCreated', labels: [{ culture: 'en_US', label: 'succesfully created' }, { culture: 'es_EC', label: 'creado exitosamente' }] },\r\n    { id: 'successfullyAdded', labels: [{ culture: 'en_US', label: 'successfully added' }, { culture: 'es_EC', label: 'agregado exitosamente' }] },\r\n    { id: 'successfullyRemoved', labels: [{ culture: 'en_US', label: 'successfully removed' }, { culture: 'es_EC', label: 'eliminado exitosamente' }] },\r\n    { id: 'successfullySaved', labels: [{ culture: 'en_US', label: 'successfully saved' }, { culture: 'es_EC', label: 'guardado exitosamente' }] },\r\n    { id: 'successfullyDeleted', labels: [{ culture: 'en_US', label: 'successfully deleted' }, { culture: 'es_EC', label: 'eliminado exitosamente' }] },\r\n    { id: 'successfullyUpdated', labels: [{ culture: 'en_US', label: 'successfully updated' }, { culture: 'es_EC', label: 'actualizado exitosamente' }] },\r\n    { id: 'couldNotSendEmail', labels: [{ culture: 'en_US', label: 'Could not send email' }, { culture: 'es_EC', label: 'No se puedo enviar el correo electrónico' }] },\r\n    { id: 'emailSentSuccessfully', labels: [{ culture: 'en_US', label: 'Email sent successfully' }, { culture: 'es_EC', label: 'Correo electrónico enviado existosamente' }] },\r\n    { id: 'addCountryCourseApplicant', labels: [{ culture: 'en_US', label: 'Add at least one country, one course and one applicant' }, { culture: 'es_EC', label: 'Agregue al menos un país, un curso y un postulante' }] },\r\n    { id: 'publishSuccesfully', labels: [{ culture: 'en_US', label: 'publish succesfully' }, { culture: 'es_EC', label: 'publicado exitosamente' }] },\r\n    { id: 'saveDraft', labels: [{ culture: 'en_US', label: 'Save Draft' }, { culture: 'es_EC', label: 'Guardar borrador' }] },\r\n    { id: 'surePublishTraining', labels: [{ culture: 'en_US', label: 'Are you sure to publish the training?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas publicar la formación?' }] },\r\n    { id: 'yesPublish', labels: [{ culture: 'en_US', label: 'Yes, publish' }, { culture: 'es_EC', label: 'Sí, publicar' }] },\r\n    { id: 'publish', labels: [{ culture: 'en_US', label: 'Publish' }, { culture: 'es_EC', label: 'Publicar' }] },\r\n    { id: 'idTraining', labels: [{ culture: 'en_US', label: 'Id Training' }, { culture: 'es_EC', label: 'ID de Formación' }] },\r\n    { id: 'completeID', labels: [{ culture: 'en_US', label: 'Complete ID' }, { culture: 'es_EC', label: 'Complete el ID' }] },\r\n    { id: 'region', labels: [{ culture: 'en_US', label: 'Region' }, { culture: 'es_EC', label: 'Región' }] },\r\n    { id: 'selectRegion', labels: [{ culture: 'en_US', label: 'Select region' }, { culture: 'es_EC', label: 'Seleccione la región' }] },\r\n    { id: 'language', labels: [{ culture: 'en_US', label: 'Language' }, { culture: 'es_EC', label: 'Idioma' }] },\r\n    { id: 'selectLanguage', labels: [{ culture: 'en_US', label: 'Select language' }, { culture: 'es_EC', label: 'Seleccione el idioma' }] },\r\n    { id: 'selectCountry', labels: [{ culture: 'en_US', label: 'Select country' }, { culture: 'es_EC', label: 'Seleccione el país' }] },\r\n    { id: 'trainingName', labels: [{ culture: 'en_US', label: 'Training name' }, { culture: 'es_EC', label: 'Nombre de la formación' }] },\r\n    { id: 'completeTrainingName', labels: [{ culture: 'en_US', label: 'Complete training name' }, { culture: 'es_EC', label: 'Complete el nombre la formación' }] },\r\n    { id: 'modality', labels: [{ culture: 'en_US', label: 'Modality' }, { culture: 'es_EC', label: 'Modalidad' }] },\r\n    { id: 'selectModality', labels: [{ culture: 'en_US', label: 'Select modality' }, { culture: 'es_EC', label: 'Seleccione la modalidad' }] },\r\n    { id: 'startDate', labels: [{ culture: 'en_US', label: 'Start Date' }, { culture: 'es_EC', label: 'Fecha de Inicio' }] },\r\n    { id: 'selectStartDate', labels: [{ culture: 'en_US', label: 'Select start date' }, { culture: 'es_EC', label: 'Seleccione la fecha de inicio' }] },\r\n    { id: 'endDate', labels: [{ culture: 'en_US', label: 'End Date' }, { culture: 'es_EC', label: 'Fecha Final' }] },\r\n    { id: 'selectEndDate', labels: [{ culture: 'en_US', label: 'Select end date' }, { culture: 'es_EC', label: 'Seleccione la fecha final' }] },\r\n    { id: 'selectCourses', labels: [{ culture: 'en_US', label: 'Select courses' }, { culture: 'es_EC', label: 'Seleccione los cursos' }] },\r\n    { id: 'applicantsEmails', labels: [{ culture: 'en_US', label: 'Applicants emails' }, { culture: 'es_EC', label: 'Correos electrónicos de los postulantes' }] },\r\n    { id: 'pressEnterAddEmail', labels: [{ culture: 'en_US', label: 'Press enter to add email' }, { culture: 'es_EC', label: 'Presione enter para agregar el correo electrónico' }] },\r\n    { id: 'addApplicants', labels: [{ culture: 'en_US', label: 'Add applicants' }, { culture: 'es_EC', label: 'Agregue al menos un postulante' }] },\r\n    { id: 'notPossibleAddApplicant', labels: [{ culture: 'en_US', label: 'It was not possible to add the applicant' }, { culture: 'es_EC', label: 'No fue posible agregar el postulante' }] },\r\n    { id: 'myAccount', labels: [{ culture: 'en_US', label: 'My Account' }, { culture: 'es_EC', label: 'Mi Cuenta' }] },\r\n    { id: 'signOut', labels: [{ culture: 'en_US', label: 'Sign out' }, { culture: 'es_EC', label: 'Cerrar sesión' }] },\r\n    { id: 'accountUpdatedSuccessfully', labels: [{ culture: 'en_US', label: 'Account updated successfully' }, { culture: 'es_EC', label: 'Cuenta actualizada exitosamente' }] },\r\n    { id: 'uploadFailed', labels: [{ culture: 'en_US', label: 'Upload failed' }, { culture: 'es_EC', label: 'Carga fallida' }] },\r\n    { id: 'uploadProfilePicture', labels: [{ culture: 'en_US', label: 'Upload your profile picture' }, { culture: 'es_EC', label: 'Sube tu foto de perfil' }] },\r\n    { id: 'selectPhoto', labels: [{ culture: 'en_US', label: 'Select a Photo' }, { culture: 'es_EC', label: 'Seleccione una foto' }] },\r\n    { id: 'completeFirstName', labels: [{ culture: 'en_US', label: 'Complete First Name' }, { culture: 'es_EC', label: 'Complete los nombres' }] },\r\n    { id: 'completeLastName', labels: [{ culture: 'en_US', label: 'Complete Last Name' }, { culture: 'es_EC', label: 'Complete los apellidos' }] },\r\n    { id: 'selectSex', labels: [{ culture: 'en_US', label: 'Select sex' }, { culture: 'es_EC', label: 'Selecciona el sexo' }] },\r\n    { id: 'selectDateBirth', labels: [{ culture: 'en_US', label: 'Select date of birth' }, { culture: 'es_EC', label: 'Selecciona la fecha de nacimiento' }] },\r\n    { id: 'uniqueIdentificationCountry', labels: [{ culture: 'en_US', label: 'This is the unique identification number issued by the country of residence' }, { culture: 'es_EC', label: 'Este es el número de identificación único emitido por el país de residencia' }] },\r\n    { id: 'completeCity', labels: [{ culture: 'en_US', label: 'Complete city' }, { culture: 'es_EC', label: 'Complete la ciudad' }] },\r\n    { id: 'selectCountryCode', labels: [{ culture: 'en_US', label: 'Select country code' }, { culture: 'es_EC', label: 'Seleccione el código de país' }] },\r\n    { id: 'completePhoneNumber', labels: [{ culture: 'en_US', label: 'Complete the phone number' }, { culture: 'es_EC', label: 'Complete el número de teléfono' }] },\r\n    { id: 'completeNameInstitution', labels: [{ culture: 'en_US', label: 'Please write the complete name of the institution' }, { culture: 'es_EC', label: 'Por favor escriba el nombre completo de la institución' }] },\r\n    { id: 'ifYesCompleteNameInstitution', labels: [{ culture: 'en_US', label: 'If yes, please write the complete name of the institution' }, { culture: 'es_EC', label: 'En caso afirmativo, escriba el nombre completo de la institución' }] },\r\n    { id: 'completeAdditionalEmail', labels: [{ culture: 'en_US', label: 'Complete the additional email' }, { culture: 'es_EC', label: 'Complete el correo electrónico adicional' }] },\r\n    { id: 'additionalEmailNotValid', labels: [{ culture: 'en_US', label: 'Additional email is not valid' }, { culture: 'es_EC', label: 'El correo electrónico adicional no es válido' }] },\r\n    { id: 'state', labels: [{ culture: 'en_US', label: 'State' }, { culture: 'es_EC', label: 'Estado' }] },\r\n    { id: 'selectState', labels: [{ culture: 'en_US', label: 'Select state' }, { culture: 'es_EC', label: 'Seleccione el estado' }] },\r\n    { id: 'pleaseWait', labels: [{ culture: 'en_US', label: 'Please Wait' }, { culture: 'es_EC', label: 'Espere por favor' }] },\r\n    { id: 'passwordResetSuccessfully', labels: [{ culture: 'en_US', label: 'Password reset successfully' }, { culture: 'es_EC', label: 'Restablecimiento de contraseña exitoso' }] },\r\n    { id: 'completePassword', labels: [{ culture: 'en_US', label: 'Complete the password' }, { culture: 'es_EC', label: 'Complete la contraseña' }] },\r\n    { id: 'password', labels: [{ culture: 'en_US', label: 'Password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'newPassword', labels: [{ culture: 'en_US', label: 'New password' }, { culture: 'es_EC', label: 'Nueva contraseña' }] },\r\n    { id: 'confirmNewPassword', labels: [{ culture: 'en_US', label: 'Confirm new password' }, { culture: 'es_EC', label: 'Confirme la nueva contraseña' }] },\r\n    { id: 'completeNewPassword', labels: [{ culture: 'en_US', label: 'Complete then new password' }, { culture: 'es_EC', label: 'Complete la nueva contraseña' }] },\r\n    { id: 'resetting', labels: [{ culture: 'en_US', label: 'Resetting' }, { culture: 'es_EC', label: 'Reestableciendo' }] },\r\n    { id: 'passwordHasMore8Characters', labels: [{ culture: 'en_US', label: 'Password has more than 8 characters' }, { culture: 'es_EC', label: 'La contraseña tiene más de 8 caracteres' }] },\r\n    { id: 'passwordHasSpecialCharacters', labels: [{ culture: 'en_US', label: 'Password has special characters' }, { culture: 'es_EC', label: 'La contraseña tiene caracteres especiales' }] },\r\n    { id: 'passwordHasNumber', labels: [{ culture: 'en_US', label: 'Password has a number' }, { culture: 'es_EC', label: 'La contraseña tiene un número' }] },\r\n    { id: 'passwordHasCapitalLetter', labels: [{ culture: 'en_US', label: 'Password has a capital letter' }, { culture: 'es_EC', label: 'La contraseña tiene una letra mayúscula' }] },\r\n    { id: 'passwordsMatch', labels: [{ culture: 'en_US', label: 'Passwords match' }, { culture: 'es_EC', label: 'Las contraseñas coinciden' }] },\r\n    { id: 'uploadYourWorkplan', labels: [{ culture: 'en_US', label: 'Upload your workplan' }, { culture: 'es_EC', label: 'Sube tu plan de trabajo' }] },\r\n    { id: 'file', labels: [{ culture: 'en_US', label: 'File' }, { culture: 'es_EC', label: 'Archivo' }] },\r\n    { id: 'selectFile', labels: [{ culture: 'en_US', label: 'Select File' }, { culture: 'es_EC', label: 'Seleccionar archivo' }] },\r\n    { id: 'uploading', labels: [{ culture: 'en_US', label: 'Uploading' }, { culture: 'es_EC', label: 'Subiendo' }] },\r\n    { id: 'sending', labels: [{ culture: 'en_US', label: 'Sending' }, { culture: 'es_EC', label: 'Enviando' }] },\r\n    { id: 'send', labels: [{ culture: 'en_US', label: 'Send' }, { culture: 'es_EC', label: 'Enviar' }] },\r\n    { id: 'uploadSuccessfully', labels: [{ culture: 'en_US', label: 'Upload successfully' }, { culture: 'es_EC', label: 'Carga realizada exitosamente' }] },\r\n    { id: 'workplanTemplate', labels: [{ culture: 'en_US', label: 'Workplan Template' }, { culture: 'es_EC', label: 'Plantilla de plan de trabajo' }] },\r\n    { id: 'languagePreferences', labels: [{ culture: 'en_US', label: 'Language preferences' }, { culture: 'es_EC', label: 'Preferencias de idioma' }] },\r\n    { id: 'seePreferredLanguage', labels: [{ culture: 'en_US', label: 'See buttons, titles, and other texts on webapp in your preferred language' }, { culture: 'es_EC', label: 'Vea botones, títulos y otros textos en la aplicación web en su idioma preferido' }] },\r\n    { id: 'back', labels: [{ culture: 'en_US', label: 'Back' }, { culture: 'es_EC', label: 'Regresar' }] },\r\n    { id: 'languagePreferencesSaved', labels: [{ culture: 'en_US', label: 'Language preferences saved successfully' }, { culture: 'es_EC', label: 'Las preferencias de idioma se guardaron correctamente' }] },\r\n    { id: 'ok', labels: [{ culture: 'en_US', label: 'OK' }, { culture: 'es_EC', label: 'OK' }] },\r\n    { id: 'reset', labels: [{ culture: 'en_US', label: 'Reset' }, { culture: 'es_EC', label: 'Limpiar' }] },\r\n    { id: 'save', labels: [{ culture: 'en_US', label: 'Save' }, { culture: 'es_EC', label: 'Guardar' }] },\r\n    { id: 'accept', labels: [{ culture: 'en_US', label: 'Accept' }, { culture: 'es_EC', label: 'Aceptar' }] },\r\n    { id: 'yes', labels: [{ culture: 'en_US', label: 'Yes' }, { culture: 'es_EC', label: 'Si' }] },\r\n    { id: 'no', labels: [{ culture: 'en_US', label: 'No' }, { culture: 'es_EC', label: 'No' }] },\r\n    { id: 'cancel', labels: [{ culture: 'en_US', label: 'Cancel' }, { culture: 'es_EC', label: 'Cancelar' }] },\r\n    { id: 'minimumBeneficiaries', labels: [{ culture: 'en_US', label: 'Minimum Beneficiaries' }, { culture: 'es_EC', label: 'Mínimo de Beneficiarios' }] },\r\n    { id: 'beneficiaryTitle', labels: [{ culture: 'en_US', label: 'Beneficiary' }, { culture: 'es_EC', label: 'Beneficiario' }] },\r\n    { id: 'beneficiariesTitle', labels: [{ culture: 'en_US', label: 'Beneficiaries' }, { culture: 'es_EC', label: 'Beneficiarios' }] },\r\n    { id: 'deleteBeneficiaryTitle', labels: [{ culture: 'en_US', label: 'Delete Beneficiary' }, { culture: 'es_EC', label: 'Eliminar Beneficiario' }] },\r\n    { id: 'reConfirmDeleteBeneficiary', labels: [{ culture: 'en_US', label: 'If you do not meet the minimum number of registered beneficiaries, your final report will be disabled. Continue anyway?' }, { culture: 'es_EC', label: 'Si no cumple con el mínimo de beneficiarios registrados se deshabilitara su informe final. ¿Continuar de todos modos?' }] },\r\n    { id: 'sendBeneficiaryListTitle', labels: [{ culture: 'en_US', label: 'Send Beneficiary List' }, { culture: 'es_EC', label: 'Enviar Lista de Beneficiarios' }] },\r\n    { id: 'sendBeneficiaryListConfirm', labels: [{ culture: 'en_US', label: 'Check beneficiary qualification/participation. Once sent, further editing will not be allowed and the certificate will be generated. Are you sure you want to send the list of beneficiaries?' }, { culture: 'es_EC', label: 'Verifique la calificación/participación de los beneficiarios. Una vez enviado, no se permitirán más ediciones y se generará el certificado. ¿Estás seguro de que quieres enviar la lista de beneficiarios?' }] },\r\n    { id: 'beneficiarySuccessfullyRemoved', labels: [{ culture: 'en_US', label: 'Beneficiary successfully removed' }, { culture: 'es_EC', label: 'Beneficiario eliminado con éxito' }] },\r\n    { id: 'beneficiarySuccessfullyUpdated', labels: [{ culture: 'en_US', label: 'Beneficiary successfully updated' }, { culture: 'es_EC', label: 'Beneficiario actualizado exitosamente' }] },\r\n    { id: 'certificateSentSuccessfully', labels: [{ culture: 'en_US', label: 'Certificate sent successfully' }, { culture: 'es_EC', label: 'Certificado enviado exitosamente' }] },\r\n    { id: 'certificateSendFailed', labels: [{ culture: 'en_US', label: 'Certificate send failed' }, { culture: 'es_EC', label: 'Error al enviar el certificado' }] },\r\n    { id: 'certificateGeneratedSuccessfully', labels: [{ culture: 'en_US', label: 'Certificate generated successfully' }, { culture: 'es_EC', label: 'Certificado generado exitosamente' }] },\r\n    { id: 'newBeneficiary', labels: [{ culture: 'en_US', label: 'New Beneficiary' }, { culture: 'es_EC', label: 'Nuevo beneficiario' }] },\r\n    { id: 'jobTitle', labels: [{ culture: 'en_US', label: 'Position' }, { culture: 'es_EC', label: 'Cargo' }] },\r\n    { id: 'isWorking', labels: [{ culture: 'en_US', label: 'Is Working' }, { culture: 'es_EC', label: 'Está trabajando' }] },\r\n    { id: 'company', labels: [{ culture: 'en_US', label: 'Enterprise Name' }, { culture: 'es_EC', label: 'Empresa' }] },\r\n    { id: 'instructionLevel', labels: [{ culture: 'en_US', label: 'Instruction Level' }, { culture: 'es_EC', label: 'Nivel de instrucción' }] },\r\n    { id: 'totalPersons', labels: [{ culture: 'en_US', label: 'Nro. of Employees' }, { culture: 'es_EC', label: 'Nro. de Empleados' }] },\r\n    { id: 'actions', labels: [{ culture: 'en_US', label: 'Actions' }, { culture: 'es_EC', label: 'Acciones' }] },\r\n    { id: 'sureDeleteBeneficiary', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the beneficiary?' }, { culture: 'es_EC', label: '¿Estás seguro de que deseas eliminar al beneficiario?' }] },\r\n    { id: 'registryOperation', labels: [{ culture: 'en_US', label: 'Beneficiary Registry' }, { culture: 'es_EC', label: 'Registro de Beneficiarios' }] },\r\n    { id: 'qualificationOperation', labels: [{ culture: 'en_US', label: 'Beneficiary Qualification' }, { culture: 'es_EC', label: 'Calificación de Beneficiarios' }] },\r\n    { id: 'oneApprovedWorkplanRegisterBeneficiaries', labels: [{ culture: 'en_US', label: 'There must be at least one approved workplan to register beneficiaries' }, { culture: 'es_EC', label: 'Debe haber al menos un plan de trabajo aprobado para registrar beneficiarios' }] },\r\n    { id: 'sendWorkplan', labels: [{ culture: 'en_US', label: 'Send Workplan' }, { culture: 'es_EC', label: 'Enviar plan de trabajo' }] },\r\n    { id: 'oneApprovedFinalReportQualifyBeneficiaries', labels: [{ culture: 'en_US', label: 'There must be at least one approved final report to qualify beneficiaries' }, { culture: 'es_EC', label: 'Debe haber al menos un informe final aprobado para calificar a los beneficiarios' }] },\r\n    { id: 'sendFinalReport', labels: [{ culture: 'en_US', label: 'Send Final Report' }, { culture: 'es_EC', label: 'Enviar informe final' }] },\r\n    { id: 'completeInstructionLevel', labels: [{ culture: 'en_US', label: 'Complete the Instruction Level' }, { culture: 'es_EC', label: 'Completa el nivel de instrucción' }] },\r\n    { id: 'saving', labels: [{ culture: 'en_US', label: 'Saving' }, { culture: 'es_EC', label: 'Guardando' }] },\r\n    { id: 'companyID', labels: [{ culture: 'en_US', label: 'Enterprise ID' }, { culture: 'es_EC', label: 'ID de Empresa' }] },\r\n    { id: 'completeCompanyID', labels: [{ culture: 'en_US', label: 'Complete the Enterprise ID' }, { culture: 'es_EC', label: 'Complete el ID de Empresa' }] },\r\n    { id: 'completeCompany', labels: [{ culture: 'en_US', label: 'Complete the Enterprise Name' }, { culture: 'es_EC', label: 'Complete la Empresa' }] },\r\n    { id: 'completeJobTitle', labels: [{ culture: 'en_US', label: 'Complete the position' }, { culture: 'es_EC', label: 'Complete el cargo' }] },\r\n    { id: 'totalCollaborators', labels: [{ culture: 'en_US', label: 'Nro. of Employees' }, { culture: 'es_EC', label: 'Nro. de Empleados' }] },\r\n    { id: 'completeTotalCollaborators', labels: [{ culture: 'en_US', label: 'Complete Nro. of Employees' }, { culture: 'es_EC', label: 'Completa el Nro. de Empleados' }] },\r\n    { id: 'men', labels: [{ culture: 'en_US', label: 'Men' }, { culture: 'es_EC', label: 'Hombres' }] },\r\n    { id: 'women', labels: [{ culture: 'en_US', label: 'Women' }, { culture: 'es_EC', label: 'Mujeres' }] },\r\n    { id: 'numberMen', labels: [{ culture: 'en_US', label: 'Number of men' }, { culture: 'es_EC', label: 'Número de hombres' }] },\r\n    { id: 'numberWomen', labels: [{ culture: 'en_US', label: 'Number of women' }, { culture: 'es_EC', label: 'Número de mujeres' }] },\r\n    { id: 'uploadFinalReport', labels: [{ culture: 'en_US', label: 'Upload your final report' }, { culture: 'es_EC', label: 'Sube tu informe final' }] },\r\n    { id: 'copyEvidenceLink', labels: [{ culture: 'en_US', label: 'Copy evidence link' }, { culture: 'es_EC', label: 'Copiar enlace de evidencia' }] },\r\n    { id: 'url', labels: [{ culture: 'en_US', label: 'URL' }, { culture: 'es_EC', label: 'URL' }] },\r\n    { id: 'evidenceSendedSuccessfully', labels: [{ culture: 'en_US', label: 'Evidence sended successfully' }, { culture: 'es_EC', label: 'Evidencia enviada exitosamente' }] },\r\n    { id: 'finalReportTemplate', labels: [{ culture: 'en_US', label: 'Final Report Template' }, { culture: 'es_EC', label: 'Plantilla de informe final' }] },\r\n    { id: 'thereMustLeast', labels: [{ culture: 'en_US', label: 'There must be at least' }, { culture: 'es_EC', label: 'Debe haber al menos' }] },\r\n    { id: 'registeredBeneficiariesUploadFinalReport', labels: [{ culture: 'en_US', label: 'registered beneficiaries to upload your final report' }, { culture: 'es_EC', label: 'beneficiarios registrados para cargar su informe final' }] },\r\n    { id: 'registerBeneficiaries', labels: [{ culture: 'en_US', label: 'Register Beneficiaries' }, { culture: 'es_EC', label: 'Registrar beneficiarios' }] },\r\n    { id: 'seeYourCertificateFinalReportBeneficiary', labels: [{ culture: 'en_US', label: 'You will see your certificate once your final report is approved and you submit your beneficiary list' }, { culture: 'es_EC', label: 'Verá su certificado una vez que se apruebe su informe final y envíe su lista de beneficiarios.' }] },\r\n    { id: 'sendListBeneficiaries', labels: [{ culture: 'en_US', label: 'Send list of beneficiaries' }, { culture: 'es_EC', label: 'Enviar lista de beneficiarios' }] },\r\n    { id: 'users', labels: [{ culture: 'en_US', label: 'Users' }, { culture: 'es_EC', label: 'Usuarios' }] },\r\n    { id: 'trainerOfTrainers', labels: [{ culture: 'en_US', label: 'Trainer of trainers' }, { culture: 'es_EC', label: 'Formador de formadores' }] },\r\n    { id: 'trainer', labels: [{ culture: 'en_US', label: 'Trainer' }, { culture: 'es_EC', label: 'Formador' }] },\r\n    { id: 'sessionExpired', labels: [{ culture: 'en_US', label: 'The session has expired. Please log in again.' }, { culture: 'es_EC', label: 'La sesión ha expirado. Por favor inicia sesión nuevamente.' }] },\r\n    { id: 'trainingsNotFound', labels: [{ culture: 'en_US', label: 'Trainings not found' }, { culture: 'es_EC', label: 'Formaciones no encontradas' }] },\r\n    { id: 'backHome', labels: [{ culture: 'en_US', label: 'Back to home' }, { culture: 'es_EC', label: 'Volver al inicio' }] },\r\n    { id: 'notEnrolled', labels: [{ culture: 'en_US', label: 'Not enrolled' }, { culture: 'es_EC', label: 'No enrolado' }] },\r\n    { id: 'usersManagement', labels: [{ culture: 'en_US', label: 'Users Management' }, { culture: 'es_EC', label: 'Gestión de Usuarios' }] },\r\n    { id: 'new', labels: [{ culture: 'en_US', label: 'New' }, { culture: 'es_EC', label: 'Nuevo' }] },\r\n    { id: 'userUpdatedSuccessfully', labels: [{ culture: 'en_US', label: 'User updated successfully' }, { culture: 'es_EC', label: 'Usuario actualizado exitosamente' }] },\r\n    { id: 'user', labels: [{ culture: 'en_US', label: 'User' }, { culture: 'es_EC', label: 'Usuario' }] },\r\n    { id: 'userCreatedSuccessfully', labels: [{ culture: 'en_US', label: 'User created successfully' }, { culture: 'es_EC', label: 'Usuario creado exitosamente' }] },\r\n    { id: 'createYourPassword', labels: [{ culture: 'en_US', label: 'Create password' }, { culture: 'es_EC', label: 'Cree la contraseña' }] },\r\n    { id: 'confirmYourPassword', labels: [{ culture: 'en_US', label: 'Confirm password' }, { culture: 'es_EC', label: 'Confirme la contraseña' }] },\r\n    { id: 'profile', labels: [{ culture: 'en_US', label: 'Profile' }, { culture: 'es_EC', label: 'Perfil' }] },\r\n    { id: 'selectProfile', labels: [{ culture: 'en_US', label: 'Select profile' }, { culture: 'es_EC', label: 'Seleccionar el perfil' }] },\r\n    { id: 'profilesManagement', labels: [{ culture: 'en_US', label: 'Profiles Management' }, { culture: 'es_EC', label: 'Gestión de Perfiles' }] },\r\n    { id: 'level', labels: [{ culture: 'en_US', label: 'Level' }, { culture: 'es_EC', label: 'Nivel' }] },\r\n    { id: 'active', labels: [{ culture: 'en_US', label: 'Active' }, { culture: 'es_EC', label: 'Activo' }] },\r\n    { id: 'inactive', labels: [{ culture: 'en_US', label: 'Inactivo' }, { culture: 'es_EC', label: 'Inactivo' }] },\r\n    { id: 'profileSavedSuccessfully', labels: [{ culture: 'en_US', label: 'Profile saved successfully' }, { culture: 'es_EC', label: 'Perfil guardado exitosamente' }] },\r\n    { id: 'profileDeletedSuccessfully', labels: [{ culture: 'en_US', label: 'Profile deleted successfully' }, { culture: 'es_EC', label: 'Perfil eliminado exitosamente' }] },\r\n    { id: 'sureDeleteProfiles', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the selected profiles?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas eliminar los perfiles seleccionados?' }] },\r\n    { id: 'delete', labels: [{ culture: 'en_US', label: 'Delete' }, { culture: 'es_EC', label: 'Eliminar' }] },\r\n    { id: 'deleting', labels: [{ culture: 'en_US', label: 'Deleting' }, { culture: 'es_EC', label: 'Eliminando' }] },\r\n    { id: 'sureDeleteProfile', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the profile?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas eliminar el perfil?' }] },\r\n    { id: 'option', labels: [{ culture: 'en_US', label: 'Option' }, { culture: 'es_EC', label: 'Opción' }] },\r\n    { id: 'options', labels: [{ culture: 'en_US', label: 'Options' }, { culture: 'es_EC', label: 'Opciones' }] },\r\n    { id: 'of', labels: [{ culture: 'en_US', label: 'of' }, { culture: 'es_EC', label: 'de' }] },\r\n    { id: 'resultsFound', labels: [{ culture: 'en_US', label: 'results found' }, { culture: 'es_EC', label: 'resultados encontrados' }] },\r\n    { id: 'filtered', labels: [{ culture: 'en_US', label: 'Filtered' }, { culture: 'es_EC', label: 'Filtrados' }] },\r\n    { id: 'sureDownloadUsersReport', labels: [{ culture: 'en_US', label: 'Do you want to download the report of all Users?' }, { culture: 'es_EC', label: '¿Desea descargar el reporte de todos los Usuarios?' }] },\r\n    { id: 'sureDownloadBeneficiariesReport', labels: [{ culture: 'en_US', label: 'Do you want to download the report of all Beneficiaries?' }, { culture: 'es_EC', label: '¿Desea descargar el reporte de todos los Beneficiaros?' }] },\r\n    { id: 'passwordSentIndicatedEmail', labels: [{ culture: 'en_US', label: 'Your password was sent to the indicated email. Check your inbox.' }, { culture: 'es_EC', label: 'Su contraseña fue enviada al correo electrónico indicado. Revise tu correo.' }] },\r\n    { id: 'passwordSuccessfullyChanged', labels: [{ culture: 'en_US', label: 'Password has been successfully changed. Please log in again.' }, { culture: 'es_EC', label: 'La contraseña se ha cambiado correctamente. Por favor inicia sesión nuevamente.' }] },\r\n    { id: 'resettingPassword', labels: [{ culture: 'en_US', label: 'Resetting password' }, { culture: 'es_EC', label: 'Reestableciendo contraseña' }] },\r\n    { id: 'pageNotExist', labels: [{ culture: 'en_US', label: 'Page does not exist' }, { culture: 'es_EC', label: 'La página no existe' }] },\r\n    { id: 'pageVisitedNotExist', labels: [{ culture: 'en_US', label: 'Sorry, the page you visited does not exist' }, { culture: 'es_EC', label: 'Lo sentimos, la página que visitaste no existe.' }] },\r\n    { id: 'sendNotification', labels: [{ culture: 'en_US', label: 'Send notification' }, { culture: 'es_EC', label: 'Enviar notificación' }] },\r\n    { id: 'accountCreatedSuccessfully', labels: [{ culture: 'en_US', label: 'Your account has been created successfully. Please log in.' }, { culture: 'es_EC', label: 'Su cuenta ha sido creada con éxito. Por favor Iniciar sesión.' }] },\r\n    { id: 'welcomeMyGreenEnterprise', labels: [{ culture: 'en_US', label: 'Welcome to My Green Enterprise' }, { culture: 'es_EC', label: 'Bienvenido a Mi Negocio Verde' }] },\r\n    { id: 'selectProfilePicture', labels: [{ culture: 'en_US', label: 'Select your profile picture' }, { culture: 'es_EC', label: 'Selecciona tu foto de perfil' }] },\r\n    { id: 'completeInformationActiveAccount', labels: [{ culture: 'en_US', label: 'Complete the following information to active your account' }, { culture: 'es_EC', label: 'Complete la siguiente información para activar su cuenta' }] },\r\n    { id: 'register', labels: [{ culture: 'en_US', label: 'Register' }, { culture: 'es_EC', label: 'Registro' }] },\r\n    { id: 'accountPreviouslyCreated', labels: [{ culture: 'en_US', label: 'Your account has been previously created' }, { culture: 'es_EC', label: 'Tu cuenta ha sido creada previamente' }] },\r\n    { id: 'uploadSignature', labels: [{ culture: 'en_US', label: 'Upload signature' }, { culture: 'es_EC', label: 'Subir firma' }] },\r\n    { id: 'signature', labels: [{ culture: 'en_US', label: 'Firma' }, { culture: 'es_EC', label: 'Signature' }] },\r\n    { id: 'signatureUploaded', labels: [{ culture: 'en_US', label: 'Signature Uploaded' }, { culture: 'es_EC', label: 'Firma Cargada' }] },\r\n    { id: 'signatureAlreadyUploaded', labels: [{ culture: 'en_US', label: 'An uploaded signature already exists' }, { culture: 'es_EC', label: 'Ya existe una firma cargada' }] },\r\n    { id: 'loginAs', labels: [{ culture: 'en_US', label: 'Login as' }, { culture: 'es_EC', label: 'Ingresar como' }] },\r\n    { id: 'theSum', labels: [{ culture: 'en_US', label: 'The sum of' }, { culture: 'es_EC', label: 'La suma de' }] },\r\n    { id: 'mustEqual', labels: [{ culture: 'en_US', label: 'must be equal to the' }, { culture: 'es_EC', label: 'debe ser igual al' }] },\r\n    { id: 'signatureMustBePNG', labels: [{ culture: 'en_US', label: 'The signature must be a png file' }, { culture: 'es_EC', label: 'La firma debe ser un archivo .png' }] },\r\n]\r\nexport const getLabel = (id) => contents.filter(c => c.id === id)[0].labels.filter(l => l.culture === getCulture())[0].label || 'Label undefined'\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\nimport { getCulture } from \"./utils/Internationalization\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src={`./assets/logo_${getCulture()}.png`} />\n      </div>\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nexport const toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nexport const setTrainingInforms = (trainings) => localStorage.setItem('mgeTrainings', JSON.stringify(trainings))\r\nconst getTrainingInforms = () => localStorage.getItem('mgeTrainings') ? JSON.parse(localStorage.getItem('mgeTrainings')) : []\r\nexport const setInforms = (informs) => localStorage.setItem('mgeInformList', JSON.stringify(informs))\r\nconst getInforms = () => localStorage.getItem('mgeInformList') ? JSON.parse(localStorage.getItem('mgeInformList')) : []\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const informs = getInforms()\r\n    let opciones = getDatosUsuario().opciones || []\r\n    //  Si existe informes se muestran las opciones de beneficiarios para registro y calificación.\r\n    if (informs.length > 1) {\r\n        // Si existe un WP aprobado y no existe un reporte final aprobado se habilita el registro de beneficiarios.\r\n        if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/registry') >= 0 ? { ...o, visible: true } : { ...o }))\r\n        else if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/qualification') >= 0 ? { ...o, visible: true } : { ...o }))\r\n    }\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined && o.visible === true)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getCultures = () => [\r\n    {\r\n        id: 'es_EC',\r\n        value: 'Español'\r\n    },\r\n    {\r\n        id: 'en_US',\r\n        value: 'English'\r\n    }\r\n]\r\nexport const getSortInforms = (informs) => informs.sort((a, b) => {\r\n    if (a.infFechaAprRec > b.infFechaAprRec) {\r\n        return 1;\r\n    }\r\n    if (a.infFechaAprRec < b.infFechaAprRec) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n})\r\nexport const getInformStatus = (informs) => {\r\n    const sortInforms = getSortInforms(informs)\r\n    return sortInforms[sortInforms.length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : sortInforms[sortInforms.length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : sortInforms[sortInforms.length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'\r\n}\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport AppMenu from \"./AppMenu\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport { getDatosUsuario } from \"./utils/Utils\";\r\nimport { getCulture, getLabel, labels } from \"./utils/Internationalization\";\r\n\r\nconst AppTopbar = (props) => {\r\n  const history = useHistory();\r\n  const searchPanelDesktop = useRef(null);\r\n  const searchPanelMobile = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.searchActive) {\r\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\r\n      else searchPanelMobile.current.focus();\r\n    }\r\n  }, [props.searchActive]);\r\n\r\n  const datosUsuario = (e) => {\r\n    history.push(\"/myaccount\");\r\n  };\r\n\r\n  const goResetPassword = () => history.push(\"/resetPassword\");\r\n\r\n  const goLanguagePreferences = () => history.push(\"/language\");\r\n\r\n  const cerrarSesion = (e) => {\r\n    localStorage.removeItem(\"mgeToken\");\r\n    localStorage.removeItem(\"mgeDatosUsuario\");\r\n    localStorage.removeItem(\"mgeTrainings\");\r\n    localStorage.removeItem(\"mgeInformList\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const logo = {\r\n    fontSize: \"1.5em\",\r\n    padding: 0,\r\n    margin: 0,\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout-topbar\">\r\n      <div className=\"layout-topbar-wrapper\">\r\n        <div className=\"layout-topbar-left\">\r\n          <button\r\n            tabIndex=\"0\"\r\n            className=\"menu-button p-link\"\r\n            onClick={props.onMenuButtonClick}\r\n          >\r\n            <i className=\"pi pi-bars\"></i>\r\n          </button>\r\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\r\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\r\n              {getCulture() === \"en_US\" ? \"MG\" : \"MN\"}\r\n            </span>\r\n            <span className=\"mge mge-bold mge-green\" style={logo}>\r\n              {getCulture() === \"en_US\" ? \"E\" : \"V\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <AppMenu\r\n          menuMode={props.menuMode}\r\n          sidebarActive={props.sidebarActive}\r\n          sidebarStatic={props.sidebarStatic}\r\n          model={props.menu}\r\n          menuActive={props.menuActive}\r\n          onRootMenuItemClick={props.onRootMenuItemClick}\r\n          onMobileMenuActive={props.onMobileMenuActive}\r\n          onMenuItemClick={props.onMenuItemClick}\r\n          onSidebarMouseOver={props.onSidebarMouseOver}\r\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\r\n          onToggleMenu={props.onToggleMenu}\r\n          resetActiveIndex={props.resetActiveIndex}\r\n          onMenuClick={props.onMenuClick}\r\n        />\r\n\r\n        <div className=\"layout-topbar-right\">\r\n          <ul className=\"layout-topbar-actions\">\r\n            <li\r\n              className={classNames(\"topbar-item user-profile\", {\r\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\r\n              })}\r\n            >\r\n              <button\r\n                className=\"p-link\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={props.onTopbarUserMenuClick}\r\n              >\r\n                {getDatosUsuario() && (\r\n                  <Row>\r\n                    <Col\r\n                      style={{\r\n                        paddingRight: \"15px\",\r\n                        paddingTop: \"5px\",\r\n                        textAlign: \"right\",\r\n                        lineHeight: \"1em\",\r\n                      }}\r\n                    >\r\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\r\n                        {`${getDatosUsuario().nombres || \"\"} ${getDatosUsuario().apellidos || \"\"\r\n                          }`}\r\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\r\n                          <>\r\n                            <br />\r\n                            <Typography.Text\r\n                              type=\"secondary\"\r\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\r\n                            >\r\n                              {`${getDatosUsuario().perfiles[0].perNombre}`}\r\n                            </Typography.Text>\r\n                          </>\r\n                        )}\r\n                      </Typography.Text>\r\n                    </Col>\r\n                    <Col>\r\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n              </button>\r\n              <ul className=\"fadeInDown\">\r\n                <li onClick={datosUsuario}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-user-gear\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.myAccount)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={goResetPassword}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-key\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.resetPassword)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={goLanguagePreferences}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-language\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.languagePreferences)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={cerrarSesion}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-right-from-bracket\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.signOut)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTopbar;\r\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from \"react\";\n\nconst AppRightPanel = (props) => {\n  return <></>;\n//   return (\n//     <div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n//       <div className=\"rightpanel-wrapper\">\n//         <div className=\"rightpanel-section weather-section\">\n//           <div className=\"section-header\">\n//             <h6>Today</h6>\n//           </div>\n//           <div className=\"weather\">\n//             <img\n//               src=\"assets/demo/images/rightpanel/icon-sun.svg\"\n//               alt=\"freya-layout\"\n//             />\n//             <div className=\"weather-info\">\n//               <h6>Ankara, 22 May</h6>\n//               <h1>24º</h1>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n};\n\nexport default AppRightPanel;\n","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport { getCulture, getLabel, labels } from './Internationalization'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers: {\r\n            \"Accept-Language\": getCulture()\r\n        }\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error(getLabel(labels.sessionExpired))\r\n                navigate.push('/login')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                localStorage.removeItem('mgeTrainings')\r\n                localStorage.removeItem('mgeInformList')\r\n                toast.error(getLabel(labels.sessionExpired))\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    localStorage.removeItem('mgeTrainings')\r\n                    localStorage.removeItem('mgeInformList')\r\n                    toast.error(getLabel(labels.sessionExpired))\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","// SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY EN ARCHIVO package.json\r\n// QA\r\n// \"proxy\": \"http://20.65.110.204:44613\",\r\n// SET NODE_OPTIONS=--openssl-legacy-provider && \r\n// PRODUCCION\r\n// \"proxy\": \"http://20.65.110.204:8080\",\r\n// \"proxy\": \"https://20.65.110.204:8081\",\r\n\r\nconst apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n//SERVICIOS MGE\r\n\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/insertCatalog`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogServiceRest/getCatalogByFilter`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/updateCatalog`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/deleteCatalog`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogServiceRest/getCatalogById`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsListByFather`\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsList`\r\n\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OptionServiceRest/insertOption`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OptionServiceRest/deleteOption`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OptionServiceRest/updateOption`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OptionServiceRest/getOptionsListByFather`\r\nexport const getOpcionesUrl = () => `${apiURL}/OptionServiceRest/getOptionsList`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OptionServiceRest/getOptionById`\r\n\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/ProfileServiceRest/insertProfile`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/ProfileServiceRest/updateProfile`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/ProfileServiceRest/deleteProfile`\r\nexport const getPerfilesUrl = () => `${apiURL}/ProfileServiceRest/getProfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/ProfileServiceRest/getProfileById`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/ProfileOptionServiceRest/getOptionsByProfileList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/insertProfileOption`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOptionServiceRest/updateProfileOption`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/deleteProfileOption`\r\n\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UserServiceRest/getUsersListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UserServiceRest/getUserById`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UserServiceRest/getUsersLessPostulants`\r\nexport const getUsersListByProfile = () => `${apiURL}/UserServiceRest/getUsersListByProfile`\r\nexport const getAutenticarUrl = () => `${apiURL}/UserServiceRest/authenticateUser`\r\nexport const getAutorizarUrl = () => `${apiURL}/UserServiceRest/authorizeUser`\r\nexport const updatePassword = () => `${apiURL}/UserServiceRest/updatePassword`\r\nexport const resetPassword = () => `${apiURL}/UserServiceRest/resetPassword`\r\nexport const recoveryPassword = () => `${apiURL}/UserServiceRest/recoveryPassword`\r\nexport const validateUserUuid = () => `${apiURL}/UserServiceRest/validateUserUuid`\r\nexport const addProfileUser = () => `${apiURL}/UserServiceRest/addProfileUser`\r\nexport const insertUsuario = () => `${apiURL}/UserServiceRest/insertUser`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UserServiceRest/updateUser`\r\nexport const enrollUsuario = () => `${apiURL}/UserServiceRest/enrollPostulant`\r\nexport const deletePerfilUsuario = () => `${apiURL}/UserServiceRest/deletePerfilUsuario`\r\nexport const getUsuariosUrl = () => `${apiURL}/UserServiceRest/getUsersList`\r\nexport const uploadPhotoUser = () => `${apiURL}/UserServiceRest/uploadPhotoUser`\r\nexport const getTotalUsersByProfile = () => `${apiURL}/UserServiceRest/getTotalUsersByProfile`\r\nexport const downloadUsersReport = () => `${apiURL}/UserServiceRest/downloadUsersReport`\r\nexport const uploadSignatureUser = () => `${apiURL}/UserServiceRest/uploadSignatureUser`\r\n\r\nexport const insertTraining = () => `${apiURL}/TrainingServiceRest/insertTraining`\r\nexport const updateTraining = () => `${apiURL}/TrainingServiceRest/updateTraining`\r\nexport const getTrainingById = () => `${apiURL}/TrainingServiceRest/getTrainingById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/TrainingServiceRest/getTrainingByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/TrainingServiceRest/getTrainingList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulantServiceRest/insertPostulant`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulantServiceRest/sendEmailRegistry`\r\nexport const sendEmailEnroll = () => `${apiURL}/PostulantServiceRest/sendEmailEnroll`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulantServiceRest/getPostulantByTraining`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulantServiceRest/getTrainingByPostulant`\r\nexport const deletePostulant = () => `${apiURL}/PostulantServiceRest/deletePostulant`\r\nexport const validatePostulant = () => `${apiURL}/PostulantServiceRest/validatePostulant`\r\n\r\nexport const insertCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/insertCountryTraining`\r\nexport const getCountryTrainingByTraining = () => `${apiURL}/CountryTrainingServiceRest/getCountryTrainingByTraining`\r\nexport const deleteCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/deleteCountryTraining`\r\n\r\nexport const insertCourse = () => `${apiURL}/CourseServiceRest/insertCourse`\r\nexport const getCourseByTraining = () => `${apiURL}/CourseServiceRest/getCoursesByTraining`\r\nexport const deleteCourse = () => `${apiURL}/CourseServiceRest/deleteCourse`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AssistanceServiceRest/insertAssistance`\r\nexport const getAttendanceById = () => `${apiURL}/AssistanceServiceRest/getAssistanceById`\r\nexport const updateAttendance = () => `${apiURL}/AssistanceServiceRest/updateAssistance`\r\n\r\nexport const insertInform = () => `${apiURL}/ReportServiceRest/insertReport`\r\nexport const updateInform = () => `${apiURL}/ReportServiceRest/updateReport`\r\nexport const getInformById = () => `${apiURL}/ReportServiceRest/getReportById`\r\nexport const downloadInformByName = () => `${apiURL}/ReportServiceRest/downloadReportByName`\r\nexport const downloadWorkplan = () => `${apiURL}/ReportServiceRest/downloadWorkPlan`\r\nexport const downloadFinalReport = () => `${apiURL}/ReportServiceRest/downloadFinalReport`\r\nexport const sendEmailLoadInform = () => `${apiURL}/ReportServiceRest/sendEmailLoadReport`\r\nexport const sendEmailRateInform = () => `${apiURL}/ReportServiceRest/sendEmailRateReport`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenceServiceRest/insertEvidence`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificateServiceRest/generateCertificate`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificateServiceRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificateServiceRest/downloadCertificateByName`\r\nexport const downloadCertificateByUuid = () => `${apiURL}/CertificateServiceRest/downloadCertificateByUuid`\r\n\r\nexport const insertBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/insertBeneficiary`\r\nexport const updateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/updateBeneficiary`\r\nexport const getBeneficiaryById = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiaryById`\r\nexport const getBeneficiariesByPostulant = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiariesByPostulant`\r\nexport const deleteBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/deleteBeneficiary`\r\nexport const validateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/validateBeneficiary`\r\nexport const downloadBeneficiariesReport = () => `${apiURL}/BeneficiaryServiceRest/downloadBeneficiariesReport`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, resetPassword, uploadPhotoUser, getTotalUsersByProfile, getUsersListByProfile, downloadUsersReport, uploadSignatureUser } from \"./../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    uploadSignature = (props) => {\r\n        const { navigate, datos } = props\r\n        return AxiosInstance(navigate).put(uploadSignatureUser(), datos)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n    getUsersListByProfile = (props) => {\r\n        const { navigate, profile } = props\r\n        return AxiosInstance(navigate).post(getUsersListByProfile(), profile)\r\n    }\r\n    getTotalUsersByProfile = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getTotalUsersByProfile())\r\n    }\r\n    resetPassword = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(resetPassword(), usuario)\r\n    }\r\n    downloadUsersReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(downloadUsersReport())\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Checkbox, Form, Input, Select, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePassword = ({ user, resetPassword, isReseting, closeResetPassword }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [sendNotification, setSendNotification] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user, sendNotification }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label='Usuario'\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label={getLabel(labels.password)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completePassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\"]}\r\n                    minLength={8}\r\n                    value={password}\r\n                    messages={{\r\n                        minLength: getLabel(labels.passwordHasMore8Characters),\r\n                        specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                        number: getLabel(labels.passwordHasNumber),\r\n                        capital: getLabel(labels.passwordHasCapitalLetter),\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Form.Item\r\n                    name='sendNotification'\r\n                    valuePropName='checked'\r\n                >\r\n                    <Checkbox defaultChecked={false} onChange={e => setSendNotification(e.target.checked)}>\r\n                        {getLabel(labels.sendNotification)}\r\n                    </Checkbox>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='email'\r\n                    label={getLabel(labels.email)}\r\n                    rules={[\r\n                        {\r\n                            required: sendNotification,\r\n                            message: getLabel(labels.completeEmail)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        fieldNames={{\r\n                            value: 'id',\r\n                            label: 'value'\r\n                        }}\r\n                        showSearch\r\n                        options={[\r\n                            {\r\n                                id: user.email,\r\n                                value: user.email\r\n                            },\r\n                            {\r\n                                id: user.email2,\r\n                                value: user.email2\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n                <Space>\r\n                    <Button onClick={closeResetPassword}\r\n                        disabled={isReseting}\r\n                    >\r\n                        {getLabel(labels.cancel)}\r\n                    </Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? getLabel(labels.resetting) : getLabel(labels.resetPassword)\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePassword","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space, Tooltip, Drawer, Tag } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport RestorePassword from './RestorePassword'\r\nimport md5 from 'md5'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const [openResetPassword, setOpenResetPassword] = useState(false)\r\n  const [isReseting, setIsReseting] = useState(false)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  }\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n      title: getLabel(labels.firstName),\r\n      dataIndex: 'nombres',\r\n      render: (_, r) =>\r\n        <Space direction='horizontal'>\r\n          <span>{r.nombres} {r.apellidos}</span>\r\n          <span className=' mgeKey'>\r\n            {\r\n              (\r\n                isReseting && <anticons.LoadingOutlined />\r\n              ) ||\r\n              <Tooltip\r\n                title={getLabel(labels.resetPassword)}\r\n                onClick={\r\n                  () => {\r\n                    setIsReseting(true)\r\n                    setUser(null)\r\n                    setTimeout(() => {\r\n                      setIsReseting(false)\r\n                      setUser(r)\r\n                      setOpenResetPassword(true)\r\n                    }, 250)\r\n                  }\r\n                }\r\n              >\r\n                <i\r\n                  style={{ cursor: 'pointer' }}\r\n                  className=\"fa-solid fa-key\"></i>\r\n              </Tooltip>\r\n            }\r\n          </span>\r\n        </Space>\r\n    },\r\n    {\r\n      title: getLabel(labels.idNumber),\r\n      dataIndex: 'documento',\r\n      responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.email),\r\n      dataIndex: 'email',\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.signatureUploaded),\r\n      dataIndex: 'firma',\r\n      render: (_, { firma }) => firma === true ? <Tag color=\"#108ee9\">{getLabel(labels.yes)}</Tag> : <Tag color=\"#faad14\">{getLabel(labels.no)}</Tag>,\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.phoneNumber),\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.actions),\r\n      render: (_, record) => <Button type='primary' href={`/#/users/${record.usuId}`}>{getLabel(labels.view)}</Button>\r\n    }\r\n  ]\r\n\r\n  const resetPassword = async (values) => {\r\n    setIsReseting(true)\r\n    const usuario = {\r\n      usuId: values.usuId,\r\n      password: md5(values.password),\r\n      ...(values.sendNotification && { email: values.email })\r\n    }\r\n    try {\r\n      const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n      if (data)\r\n        toast.success(getLabel(labels.passwordResetSuccessfully))\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsReseting(false)\r\n      closeResetPassword()\r\n    }\r\n  }\r\n\r\n  const closeResetPassword = () => {\r\n    setOpenResetPassword(false)\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    setUsuarios([])\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {getLabel(labels.usersManagement)}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.idNumber)}>\r\n              <Input type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.firstName)}>\r\n              <Input type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.email)}>\r\n              <Input type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.state)}>\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio key={s.catId} value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>{getLabel(labels.new)}</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>{getLabel(labels.search)}</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n        rowClassName='mgeChangePassword'\r\n      />\r\n      <Drawer title={getLabel(labels.resetPassword)} placement=\"right\" onClose={closeResetPassword} open={openResetPassword}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={closeResetPassword}\r\n              disabled={isLoading}\r\n            >{getLabel(labels.cancel)}</Button>\r\n          </Space>\r\n        }\r\n      >\r\n        {\r\n          user && <RestorePassword user={user} resetPassword={resetPassword} isReseting={isReseting} closeResetPassword={closeResetPassword} />\r\n        }\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n  const [signatureFile, setSignatureFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [fileSignatureList, setSignatureFileList] = useState([]);\r\n  const [photoFormatValid, setPhotoFormatValid] = useState(2)\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const propsSignature = {\r\n    onRemove: (file) => {\r\n      const index = fileSignatureList.indexOf(file);\r\n      const newFileList = fileSignatureList.slice();\r\n      newFileList.splice(index, 1);\r\n      setSignatureFileList(newFileList);\r\n      setSignatureFile(null);\r\n      setPhotoFormatValid(2)\r\n    },\r\n    beforeUpload: (file) => {\r\n      setSignatureFileList([...fileSignatureList, file]);\r\n      setSignatureFile(URL.createObjectURL(file));\r\n      const isPNG = file.type === 'image/png';\r\n      setPhotoFormatValid(isPNG ? 1 : 0);\r\n      return false;\r\n    },\r\n    fileSignatureList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const saveCurrentlyWorking = (value) => {\r\n    setUsuario({ ...usuario, trabaja: value })\r\n    setCurrentlyWorking(value)\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n      , lugartrabajo: currentlyWorking ? values.lugartrabajo : ''\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0 || fileSignatureList.length > 0) {\r\n\r\n        const requests = []\r\n\r\n        let datos = new FormData();\r\n\r\n        if (fileList.length > 0) {\r\n          datos.append('file', fileList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.upLoadPhoto({ datos }))\r\n        }\r\n\r\n        datos = new FormData();\r\n        if (fileSignatureList.length > 0) {\r\n          datos.append('file', fileSignatureList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.uploadSignature({ navigate, datos }))\r\n        }\r\n\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              if (results.length > 0) {\r\n                setIsSaving(false)\r\n                toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n              }\r\n            })\r\n            .catch(error => {\r\n              setIsSaving(false)\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              setError(msgError)\r\n            })\r\n        }\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d),\r\n          perfil: usuario.perfiles[0].perNombre\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {getLabel(labels.user)}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={getLabel(labels.uploadProfilePicture)}\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >{getLabel(labels.selectPhoto)}</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label={getLabel(labels.idNumber)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeID),\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label={getLabel(labels.firstName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeFirstName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label={getLabel(labels.lastName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeLastName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label={getLabel(labels.sex)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectSex),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label={getLabel(labels.dateBirth)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectDateBirth),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.idNumber)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>{getLabel(labels.uniqueIdentificationCountry)}</>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeID),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label={getLabel(labels.country)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountry),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.countryCode)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountryCode),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.phoneNumber)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completePhoneNumber),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.currentyWorking)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>{getLabel(labels.completeNameInstitution)}</>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onClick={(c) => {\r\n                              saveCurrentlyWorking(c);\r\n                            }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label={getLabel(labels.email)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.emailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label={getLabel(labels.additionalEmail)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeAdditionalEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.additionalEmailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='perfil'\r\n                      label={getLabel(labels.profile)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectProfile),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label={getLabel(labels.state)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectState),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={8} xxl={4}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={\r\n                        <Typography.Paragraph>\r\n                          {\r\n                            getLabel(labels.uploadSignature)\r\n                          }\r\n                          {\r\n                            usuario.firma === true ? <Typography.Text type='secondary' strong><br />{getLabel(labels.signatureAlreadyUploaded)}</Typography.Text> : <></>\r\n                          }\r\n                        </Typography.Paragraph>\r\n                      }\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFormatValid !== 2 ?\r\n                              photoFormatValid === 0 && <Typography.Text type='danger'>{getLabel(labels.signatureMustBePNG)}</Typography.Text> : <></>\r\n                          }\r\n                          {\r\n                            signatureFile && photoFormatValid === 1 && <Image src={signatureFile} width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsSignature}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileSignatureList.length > 0\r\n                              }\r\n                            >{getLabel(labels.selectPhoto)}</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >{getLabel(labels.back)}</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving || (photoFormatValid === 0)}>\r\n                          {getLabel(labels.save)}\r\n                        </Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport OpcionService from './../../service/OpcionService'\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1).map(o => (\r\n              {\r\n                title: o.opcNombre,\r\n                key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`,\r\n                children: o.opcHijos ? o.opcHijos.map(o => (\r\n                  {\r\n                    title: o.opcNombre,\r\n                    key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`\r\n                  }\r\n                )) : []\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: getLabel(labels.name),\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: getLabel(labels.level),\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: getLabel(labels.state),\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? getLabel(labels.active) : getLabel(labels.inactive)} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject.map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success(getLabel(labels.profileSavedSuccessfully))\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(getLabel(labels.errorOcurred), `${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success(getLabel(labels.profileDeletedSuccessfully))\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {getLabel(labels.profilesManagement)}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                {getLabel(labels.new)}\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title={getLabel(labels.sureDeleteProfiles)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>{getLabel(labels.refresh)}</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.name)}>\r\n                <Input id=\"perNombre\" name=\"perNombre\" type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.level)}>\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.state)}>\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? getLabel(labels.active) : getLabel(labels.inactive)\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? getLabel(labels.saving) : getLabel(labels.save)}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title={getLabel(labels.sureDeletProfile)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`${getLabel(labels.option)} ${perfilOpcionActualizado.pfoOpcId.opcNombre} ${getLabel(labels.successfullyUpdated)}`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1)\r\n              .map(o => (\r\n                {\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n                }\r\n              ))\r\n            // .map(o => (\r\n            //   {\r\n            //     key: `${o.opcId}`,\r\n            //     opcNombre: o.opcNombre,\r\n            //     ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n            //     children: o.opcHijos.map(o => ({\r\n            //       key: `${o.opcId}`,\r\n            //       opcNombre: o.opcNombre,\r\n            //       ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0]\r\n            //     }))\r\n            //   }\r\n            // ))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoadingOpciones(false)\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success(getLabel(labels.profileSavedSuccessfully))\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success(getLabel(labels.profileDeletedSuccessfully))\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {getLabel(labels.profile)} {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.name)}>\r\n                  <Input id=\"perNombre\" name=\"perNombre\" type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.level)}>\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.state)}>\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? getLabel(labels.active) : getLabel(labels.inactive)\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>{getLabel(labels.options)}</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? getLabel(labels.saving) : getLabel(labels.save)}\r\n                    </Button>\r\n                    <Popconfirm title={getLabel(labels.sureDeleteProfile)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin, Typography } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading, message } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col style={{ textAlign: 'center' }}>\r\n                                <Spin size='large'></Spin>\r\n                                {\r\n                                    message && <Typography.Paragraph>\r\n                                        {message}\r\n                                    </Typography.Paragraph>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    message: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Form, Spin, Tooltip, Tag, Popconfirm } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\n\r\nconst estilos = [\r\n    { background: '#54873C' },\r\n    { background: '#70B450' },\r\n    { background: '#385A28' },\r\n    { background: '#636466' },\r\n    { background: '#70B450' },\r\n    { background: '#54873C' },\r\n    { background: '#385A28' },\r\n]\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadTotals, setLoadTotals] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const [isLoadingTotals, setIsLoadingTotals] = useState(false)\r\n    const [totals, setTotals] = useState(null)\r\n    const [nombres, setNombres] = useState([])\r\n    const [apellidos, setApellidos] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [estados, setEstados] = useState([])\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [selectedProfiles, setSelectedProfiles] = useState([])\r\n    const [currentDataSource, setCurrentDataSource] = useState(null)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const columnas = [\r\n        {\r\n            title: '',\r\n            render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n        },\r\n        {\r\n            title: getLabel(labels.firstName),\r\n            dataIndex: 'nombres',\r\n            filters: nombres.map(n => ({\r\n                value: n,\r\n                text: n\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { nombres }) => nombres === value,\r\n            render: (_, r) => `${r.nombres}`\r\n        },\r\n        {\r\n            title: getLabel(labels.lastName),\r\n            dataIndex: 'apellidos',\r\n            filters: apellidos.map(a => ({\r\n                value: a,\r\n                text: a\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { apellidos }) => apellidos === value,\r\n            render: (_, r) => `${r.apellidos}`\r\n        },\r\n        {\r\n            title: getLabel(labels.country),\r\n            dataIndex: 'pais',\r\n            filters: paises.map(p => ({\r\n                value: p.catId,\r\n                text: <><img\r\n                    src={`https://flagcdn.com/32x24/${p.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${p.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${p.catDescripcion.toLowerCase()}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={p.catDescripcion} />&nbsp;{p.catNombre}</>\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { pais }) => pais.catId === value,\r\n            render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n                <Tooltip title={pais.catDescripcion}>\r\n                    <img\r\n                        src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                        srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                        width=\"32\"\r\n                        height=\"24\"\r\n                        alt={pais.catDescripcion}></img>\r\n                </Tooltip>\r\n            </div>,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: <div style={{ textAlign: 'center' }}>\r\n                {getLabel(labels.state)}\r\n            </div>,\r\n            dataIndex: 'estado',\r\n            filters: estados.map(p => ({\r\n                value: p.catId,\r\n                text: p.catNombre\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { estado }) => estado.catId === value,\r\n            render: (_, { estado }) => <div style={{ textAlign: 'center' }\r\n            }>\r\n                {estado.catNombre}\r\n            </div >,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: <div style={{ textAlign: 'center' }}>\r\n                {getLabel(labels.profile)}\r\n            </div>,\r\n            dataIndex: 'role',\r\n            filters: perfiles.map(p => ({\r\n                value: p.perId,\r\n                text: p.perNombre\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { perfiles }) => perfiles[0].perId === value,\r\n            render: (_, { perfiles }) => <div style={{ textAlign: 'center' }\r\n            }>\r\n                {perfiles[0].perNombre}\r\n            </div >,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: getLabel(labels.actions),\r\n            render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>\r\n                {getLabel(labels.view)}\r\n            </Button>\r\n        }\r\n    ]\r\n\r\n    const setProfile = (profile) => {\r\n        let profiles = []\r\n        if (selectedProfiles.filter(p => p.perId === profile.perId).length < 1)\r\n            profiles = [...selectedProfiles, profile]\r\n        else\r\n            profiles = selectedProfiles.filter(p => p.perId !== profile.perId)\r\n        setSelectedProfiles(profiles)\r\n        const requests = []\r\n        profiles.forEach(profile => {\r\n            requests.push(usuarioService.getUsersListByProfile({ navigate, profile }))\r\n        })\r\n        if (requests.length > 0) {\r\n            setIsLoading(true)\r\n            setCurrentDataSource(null)\r\n            setUsers([])\r\n            setPerfiles([])\r\n            Promise.all(requests)\r\n                .then((results) => {\r\n                    setIsLoading(false)\r\n                    if (results.length > 0) {\r\n                        let n = []\r\n                        let a = []\r\n                        let c = []\r\n                        let s = []\r\n                        let p = []\r\n                        let u = []\r\n                        results.forEach(r => {\r\n                            const { config } = r\r\n                            const profile = JSON.parse(config.data)\r\n                            const perfiles = [profile]\r\n                            const usuarios = r.data.listObject.map(u => ({ ...u, perfiles }))\r\n                            usuarios.forEach(u => {\r\n                                if (n.filter(p => p === u.nombres).length < 1)\r\n                                    n = [...n, u.nombres]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (a.filter(p => p === u.apellidos).length < 1)\r\n                                    a = [...a, u.apellidos]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (c.filter(p => p.catId === u.pais.catId).length < 1)\r\n                                    c = [...c, u.pais]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (s.filter(s => s.catId === u.estado.catId).length < 1)\r\n                                    s = [...s, u.estado]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (p.filter(p => p.perId === u.perfiles[0].perId).length < 1)\r\n                                    p = [...p, u.perfiles[0]]\r\n                            })\r\n                            usuarios.forEach(usuario => {\r\n                                if (u.filter(u => u.usuId === usuario.usuId).length < 1)\r\n                                    u = [...u, usuario]\r\n                            })\r\n                        })\r\n                        setNombres(n)\r\n                        setApellidos(a)\r\n                        setPaises(c)\r\n                        setEstados(s)\r\n                        setPerfiles(p)\r\n                        setUsers(u)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    const { response } = error\r\n                    const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                    toast.error(msgError)\r\n                })\r\n                .finally(() => {\r\n                    setIsLoading(false)\r\n                })\r\n        } else {\r\n            fetchData()\r\n        }\r\n    }\r\n\r\n    const renderTotal = ({ id, name, total, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={8} md={8} lg={8} xl={8} xxl={8}\r\n        >\r\n            <Card\r\n                {...props}\r\n                onClick={\r\n                    () => setProfile({ perId: id, perNombre: name, total })\r\n                }\r\n            >\r\n                <Statistic\r\n                    {...data}\r\n                    valueStyle={{\r\n                        color: '#ffffff',\r\n                    }}\r\n                />\r\n                {description}\r\n            </Card>\r\n        </Col>\r\n\r\n    const downloadReport = ({ id, name }) => {\r\n        const fileName = `${name}.xlsx`\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: id === 0 ? apiURLs.downloadBeneficiariesReport() : apiURLs.downloadUsersReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const renderTotalExportar = ({ id, name, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={8} md={8} lg={8} xl={8} xxl={8}\r\n        >\r\n            <Popconfirm\r\n                title={id === 0 ? getLabel(labels.sureDownloadBeneficiariesReport) : getLabel(labels.sureDownloadUsersReport)}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.no)}\r\n                onConfirm={\r\n                    () =>\r\n                        downloadReport({ id, name })\r\n                }\r\n                okButtonProps={{\r\n                    loading: isDownloading\r\n                }}\r\n            >\r\n                <Card\r\n                    {...props}\r\n                >\r\n                    <Statistic\r\n                        {...data}\r\n                        valueStyle={{\r\n                            color: '#ffffff',\r\n                        }}\r\n                    />\r\n                    {description}\r\n                </Card>\r\n            </Popconfirm>\r\n        </Col>\r\n\r\n    const fetchDataTotals = async () => {\r\n        setLoadTotals(false)\r\n        setIsLoadingTotals(true)\r\n        try {\r\n            const { data } = await usuarioService.getTotalUsersByProfile({ navigate })\r\n            if (data) {\r\n                const totalesCompleto = data.listObject\r\n                const totales = totalesCompleto.filter(t => t.perNombre.indexOf('ADMIN') < 0 && t.perNombre.indexOf('BENEFI') < 0)\r\n                let profiles = []\r\n                totales.forEach(t => {\r\n                    if (profiles.filter(p => p.perId === t.perId).length < 1) {\r\n                        const initialValue = 0;\r\n                        const initialValueActives = 0;\r\n                        profiles = [...profiles,\r\n                        {\r\n                            perId: t.perId,\r\n                            perNombre: t.perNombre,\r\n                            total: totalesCompleto.filter(a => a.perId === t.perId).reduce(\r\n                                (accumulator, currentValue) => accumulator + currentValue.total,\r\n                                initialValue,\r\n                            ),\r\n                            activos: totalesCompleto.filter(a => a.perId === t.perId && a.estado === getCatalogos().states.filter(s => s.catValor === 'ACTIVO' || s.catValor === 'ACTIVE')[0].catId).reduce(\r\n                                (accumulator, currentValue) => accumulator + currentValue.total,\r\n                                initialValueActives,\r\n                            ) || 0\r\n                        }\r\n                        ]\r\n                    }\r\n                })\r\n                const initialValue = 0;\r\n                setTotals(\r\n                    [...profiles,\r\n                    totalesCompleto.filter(t => t.perNombre.indexOf('BENEFI') >= 0)[0],\r\n                    {\r\n                        \"perId\": 999,\r\n                        \"perNombre\": getLabel(labels.users).toUpperCase(),\r\n                        \"total\": totalesCompleto.filter(t => t.perNombre.indexOf('BENEFI') < 0).reduce(\r\n                            (accumulator, currentValue) => accumulator + currentValue.total,\r\n                            initialValue,\r\n                        ) || 0 || 0\r\n                    }]\r\n                )\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingTotals(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setSelectedProfiles([])\r\n        setCurrentDataSource(null)\r\n        setPerfiles([])\r\n        setUsers([])\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject\r\n                let n = []\r\n                let a = []\r\n                let c = []\r\n                let s = []\r\n                let p = []\r\n                usuarios.forEach(u => {\r\n                    if (n.filter(p => p.nombres === u.nombres).length < 1)\r\n                        n = [...n, u.nombres]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (a.filter(p => p.apellidos === u.apellidos).length < 1)\r\n                        a = [...a, u.apellidos]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (c.filter(p => p.catId === u.pais.catId).length < 1)\r\n                        c = [...c, u.pais]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (s.filter(s => s.catId === u.estado.catId).length < 1)\r\n                        s = [...s, u.estado]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (p.filter(p => p.perId === u.perfiles[0].perId).length < 1)\r\n                        p = [...p, u.perfiles[0]]\r\n                })\r\n                setNombres(n)\r\n                setApellidos(a)\r\n                setPaises(c)\r\n                setEstados(s)\r\n                setPerfiles(p)\r\n                setUsers(usuarios)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n        if (loadTotals) fetchDataTotals()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoadingTotals ?\r\n                    <AlertWait isLoading={isLoadingTotals} message={getLabel(labels.loading)} />\r\n                    :\r\n                    totals && <Row gutter={[15, 15]}>\r\n                        {\r\n                            totals && totals.filter(t => t.perId !== 0 && t.perId !== 999).map((t, index) => (\r\n                                {\r\n                                    id: t.perId,\r\n                                    name: t.perNombre,\r\n                                    total: t.total,\r\n                                    props: {\r\n                                        bordered: true,\r\n                                        hoverable: true,\r\n                                        style: {\r\n                                            height: '100%'\r\n                                            , color: '#f0f0f0'\r\n                                            , ...estilos[index]\r\n                                        }\r\n                                    },\r\n                                    data: {\r\n                                        title: <Typography.Text style={{ color: '#ffffff' }}>{t.perNombre}</Typography.Text>,\r\n                                        value: t.perId !== 0 && t.perId !== 999 ? Math.round(t.activos * 100.00 / t.total, 1) : t.total,\r\n                                        precision: 0,\r\n                                        prefix: <anticons.UserOutlined />,\r\n                                        suffix: t.perId !== 0 && t.perId !== 999 && '%'\r\n                                    },\r\n                                    description: t.perId !== 0 && t.perId !== 999 && <>{t.activos} {getLabel(labels.of)} {t.total} {getLabel(labels.users)}</>\r\n                                }\r\n                            )).map(s => renderTotal(s))\r\n                        }\r\n                        {\r\n                            totals && totals.filter(t => t.perId === 0 || t.perId === 999).map((t, index) => (\r\n                                {\r\n                                    id: t.perId,\r\n                                    name: t.perNombre,\r\n                                    total: t.total,\r\n                                    props: {\r\n                                        bordered: true,\r\n                                        hoverable: true,\r\n                                        style: {\r\n                                            height: '100%'\r\n                                            , color: '#f0f0f0'\r\n                                            , ...estilos[index]\r\n                                        }\r\n                                    },\r\n                                    data: {\r\n                                        title: <Typography.Text style={{ color: '#ffffff' }}>{t.perNombre}</Typography.Text>,\r\n                                        value: t.perId !== 0 && t.perId !== 999 ? Math.round(t.activos * 100.00 / t.total, 1) : t.total,\r\n                                        precision: 0,\r\n                                        prefix: <anticons.UserOutlined />,\r\n                                        suffix: t.perId !== 0 && t.perId !== 999 && '%'\r\n                                    },\r\n                                    description: t.perId !== 0 && t.perId !== 999 && <>{t.activos} {getLabel(labels.of)} {t.total} {getLabel(labels.users)}</>\r\n                                }\r\n                            )).map(s => renderTotalExportar(s))\r\n                        }\r\n                    </Row>\r\n            }\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                                loading={isLoading || isDownloading}\r\n                            >\r\n                                {getLabel(labels.refresh)}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row >\r\n                    :\r\n                    <Row>\r\n                        {\r\n                            selectedProfiles &&\r\n                            <Col span={24}>\r\n                                <Row gutter={[15, 15]}>\r\n                                    {\r\n                                        selectedProfiles.map(p =>\r\n                                            <Col\r\n                                                key={p.perId}\r\n                                            >\r\n                                                <Tag\r\n                                                    onClose={(_) => setProfile(p)}\r\n                                                    closeIcon={<i className=\"fa-solid fa-circle-xmark\"></i>}\r\n                                                    closable\r\n                                                    style={{\r\n                                                        padding: '5px 15px',\r\n                                                        borderRadius: '15px',\r\n                                                        fontSize: '1em'\r\n                                                    }}\r\n                                                >\r\n                                                    {`${p.perNombre} (${p.total})`}\r\n                                                </Tag>\r\n                                            </Col>\r\n                                        )\r\n                                    }\r\n                                </Row>\r\n                            </Col>\r\n                        }\r\n                        <Col span={24} style={{ textAlign: 'end' }}>\r\n                            <Typography>\r\n                                <Paragraph>\r\n                                    <Text type='secondary'>\r\n                                        {`${getLabel(labels.filtered)} ${currentDataSource || users.length} ${getLabel(labels.of)} ${users.length} ${getLabel(labels.users)}`}\r\n                                    </Text>\r\n                                </Paragraph>\r\n                            </Typography>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            {\r\n                                perfiles && <Table\r\n                                    {...tableProps}\r\n                                    rowKey='usuId'\r\n                                    columns={columnas}\r\n                                    dataSource={users}\r\n                                    onChange={(pagination, filters, sorter, extra) => {\r\n                                        const { currentDataSource } = extra\r\n                                        setCurrentDataSource(currentDataSource.length)\r\n                                    }}\r\n                                >\r\n                                </Table>\r\n                            }\r\n                        </Col>\r\n                    </Row >\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Badge, Card, Alert } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entNombre }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        {getLabel(labels.view)}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>{getLabel(labels.backHome)}</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.profile)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            usuario.perfiles && usuario.perfiles[0].perNombre\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label={getLabel(labels.firstName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label={getLabel(labels.lastName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label={getLabel(labels.sex)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label={getLabel(labels.dateBirth)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label={getLabel(labels.country)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label={getLabel(labels.city)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={getLabel(labels.countryCode)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={getLabel(labels.phoneNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={getLabel(labels.idNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={getLabel(labels.currentyWorking)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.trainings)}</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description={getLabel(labels.trainingsNotFound)}\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport md5 from 'md5'\r\n\r\nimport { disabledDate, getCatalogos } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n    const [signatureFile, setSignatureFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [fileSignatureList, setSignatureFileList] = useState([]);\r\n    const [photoFormatValid, setPhotoFormatValid] = useState(2)\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const propsSignature = {\r\n        onRemove: (file) => {\r\n            const index = fileSignatureList.indexOf(file);\r\n            const newFileList = fileSignatureList.slice();\r\n            newFileList.splice(index, 1);\r\n            setSignatureFileList(newFileList);\r\n            setSignatureFile(null);\r\n            setPhotoFormatValid(2)\r\n        },\r\n        beforeUpload: (file) => {\r\n            setSignatureFileList([...fileSignatureList, file]);\r\n            setSignatureFile(URL.createObjectURL(file));\r\n            const isPNG = file.type === 'image/png';\r\n            setPhotoFormatValid(isPNG ? 1 : 0);\r\n            return false;\r\n        },\r\n        fileSignatureList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            cultura: getCulture(),\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0 || fileSignatureList.length > 0) {\r\n                const requests = []\r\n\r\n                let datos = new FormData();\r\n                if (fileList.length > 0) {\r\n                    datos.append('file', fileList[0])\r\n                    datos.append('usuId', usuarioActualizado.usuId)\r\n                    requests.push(usuarioService.upLoadPhoto({ datos }))\r\n                }\r\n\r\n                datos = new FormData();\r\n                if (fileSignatureList.length > 0) {\r\n                    datos.append('file', fileSignatureList[0])\r\n                    datos.append('usuId', usuarioActualizado.usuId)\r\n                    requests.push(usuarioService.uploadSignature({ navigate, datos }))\r\n                }\r\n\r\n                if (requests.length > 0) {\r\n                    Promise.all(requests)\r\n                        .then((results) => {\r\n                            if (results.length > 0) {\r\n                                setIsSaving(false)\r\n                                toast.success(getLabel(labels.userCreatedSuccessfully))\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            setIsSaving(false)\r\n                            const { response } = error\r\n                            const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                            setError(msgError)\r\n                        })\r\n                }\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success(getLabel(labels.userCreatedSuccessfully))\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            setError(getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>{getLabel(labels.backHome)}</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        {`${getLabel(labels.new)} ${getLabel(labels.user)}`}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.uploadProfilePicture)}\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >{getLabel(labels.selectPhoto)}</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label={getLabel(labels.firstName)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.completeFirstName),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label={getLabel(labels.lastName)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.completeLastName),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label={getLabel(labels.sex)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.selectSex),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label={getLabel(labels.dateBirth)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.selectDateBirth),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>{getLabel(labels.idNumber)}</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>{getLabel(labels.uniqueIdentificationCountry)}</>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeID),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label={getLabel(labels.country)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectCountry),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label={getLabel(labels.city)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeCity),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    {getLabel(labels.countryCode)}\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectCountryCode),\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    {getLabel(labels.phoneNumber)}\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completePhoneNumber),\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>{getLabel(labels.currentyWorking)}</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>{getLabel(labels.completeNameInstitution)}</>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => {\r\n                                                            setCurrentlyWorking(c);\r\n                                                        }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label={getLabel(labels.email)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeEmail),\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label={getLabel(labels.additionalEmail)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeAdditionalEmail),\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.additionalEmailNotValid)\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='password'\r\n                                            label={getLabel(labels.createYourPassword)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.createYourPassword),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='passwordConfirm'\r\n                                            label={getLabel(labels.confirmYourPassword)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.confirmYourPassword),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: getLabel(labels.passwordHasMore8Characters),\r\n                                                    specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                                                    number: getLabel(labels.passwordHasNumber),\r\n                                                    capital: getLabel(labels.passwordHasCapitalLetter),\r\n                                                    match: getLabel(labels.passwordsMatch),\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label={getLabel(labels.profile)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectProfile),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label={getLabel(labels.state)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectState),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={8} xxl={4}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={\r\n                                                <Typography.Paragraph>\r\n                                                    {\r\n                                                        getLabel(labels.uploadSignature)\r\n                                                    }\r\n                                                </Typography.Paragraph>\r\n                                            }\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFormatValid !== 2 ?\r\n                                                            photoFormatValid === 0 && <Typography.Text type='danger'>{getLabel(labels.signatureMustBePNG)}</Typography.Text> : <></>\r\n                                                    }\r\n                                                    {\r\n                                                        signatureFile && photoFormatValid === 1 && <Image src={signatureFile} width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...propsSignature}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileSignatureList.length > 0\r\n                                                            }\r\n                                                        >{getLabel(labels.selectPhoto)}</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >{getLabel(labels.back)}</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving || (photoFormatValid === 0)}>\r\n                                                    {getLabel(labels.save)}\r\n                                                </Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n  const [signatureFile, setSignatureFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([])\r\n  const [fileSignatureList, setSignatureFileList] = useState([])\r\n  const [photoFormatValid, setPhotoFormatValid] = useState(2)\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const propsSignature = {\r\n    onRemove: (file) => {\r\n      const index = fileSignatureList.indexOf(file);\r\n      const newFileList = fileSignatureList.slice();\r\n      newFileList.splice(index, 1);\r\n      setSignatureFileList(newFileList);\r\n      setSignatureFile(null);\r\n      setPhotoFormatValid(2)\r\n    },\r\n    beforeUpload: (file) => {\r\n      setSignatureFileList([...fileSignatureList, file]);\r\n      setSignatureFile(URL.createObjectURL(file));\r\n      const isPNG = file.type === 'image/png';\r\n      setPhotoFormatValid(isPNG ? 1 : 0);\r\n      return false;\r\n    },\r\n    fileSignatureList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const saveCurrentlyWorking = (value) => {\r\n    setUsuario({ ...usuario, trabaja: value })\r\n    setCurrentlyWorking(value)\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n      , lugartrabajo: currentlyWorking ? values.lugartrabajo : ''\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0 || fileSignatureList.length > 0) {\r\n        const requests = []\r\n\r\n        let datos = new FormData();\r\n\r\n        if (fileList.length > 0) {\r\n          datos.append('file', fileList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.upLoadPhoto({ datos }))\r\n        }\r\n\r\n        datos = new FormData();\r\n        if (fileSignatureList.length > 0) {\r\n          datos.append('file', fileSignatureList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.uploadSignature({ navigate, datos }))\r\n        }\r\n\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              if (results.length > 0) {\r\n                setIsSaving(false)\r\n                toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n              }\r\n            })\r\n            .catch(error => {\r\n              setIsSaving(false)\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(msgError)\r\n            })\r\n        }\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success(getLabel(labels.accountUpdatedSuccessfully))\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      toast.error(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  {getLabel(labels.myAccount)}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    {getLabel(labels.cancel)}\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving || (photoFormatValid === 0)}\r\n                    onClick={() => { formUser.submit() }}>\r\n                    {getLabel(labels.save)}\r\n                  </Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  {getLabel(labels.loading)}...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={getLabel(labels.uploadProfilePicture)}\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >\r\n                              {getLabel(labels.selectPhoto)}\r\n                            </Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label={getLabel(labels.idNumber)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeID),\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label={getLabel(labels.firstName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeFirstName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label={getLabel(labels.lastName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeLastName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label={getLabel(labels.sex)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectSex),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label={getLabel(labels.dateBirth)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectDateBirth),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.idNumber)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                {getLabel(labels.uniqueIdentificationCountry)}\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeID),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label={getLabel(labels.country)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountry)\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label={getLabel(labels.city)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeCity),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.countryCode)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountryCode),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.phoneNumber)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completePhoneNumber),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.currentyWorking)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                {getLabel(labels.completeNameInstitution)}\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onClick={(c) => {\r\n                              saveCurrentlyWorking(c);\r\n                            }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: getLabel(labels.ifYesCompleteNameInstitution)\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label={getLabel(labels.email)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.emailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label={getLabel(labels.additionalEmail)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeAdditionalEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.additionalEmailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label={getLabel(labels.state)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectState),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={8} xxl={4}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={\r\n                        <Typography.Paragraph>\r\n                          {\r\n                            getLabel(labels.uploadSignature)\r\n                          }\r\n                          {\r\n                            usuario.firma === true ? <Typography.Text type='secondary' strong><br />{getLabel(labels.signatureAlreadyUploaded)}</Typography.Text> : <></>\r\n                          }\r\n                        </Typography.Paragraph>\r\n                      }\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFormatValid !== 2 ?\r\n                              photoFormatValid === 0 && <Typography.Text type='danger'>{getLabel(labels.signatureMustBePNG)}</Typography.Text> : <></>\r\n                          }\r\n                          {\r\n                            signatureFile && photoFormatValid === 1 && <Image src={signatureFile} width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsSignature}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileSignatureList.length > 0\r\n                              }\r\n                            >{getLabel(labels.selectPhoto)}</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row >\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card, Checkbox } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [state, setState] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado, cursoList }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Space direction='horizontal'>\r\n                                <Typography.Text type='secondary'>\r\n                                    {cursoList.length} {getLabel(labels.courses)}\r\n                                </Typography.Text>\r\n                                <Typography.Text type='secondary'>\r\n                                    {numPostulantes} {getLabel(labels.applicants)}\r\n                                </Typography.Text>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {\r\n                                    getLabel(labels.view)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {getLabel(labels.edit)}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        let trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        if (state) {\r\n            trainer = { ...trainer, estado: !state }\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mgeCard\" style={{\r\n                paddingTop: '15px',\r\n                paddingBottom: '15px'\r\n            }}>\r\n                <Row>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    >\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                            {getLabel(labels.trainings)}\r\n                        </h3>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                        style={{\r\n                            textAlign: 'right'\r\n                        }}\r\n                    >\r\n                        <Space>\r\n                            <Button\r\n                                type='default'\r\n                                loading={isLoading}\r\n                                disabled={isLoading}\r\n                                onClick={() => {\r\n                                    fetchData()\r\n                                }}>{getLabel(labels.refresh)}</Button>\r\n                            <Button\r\n                                type='primary'\r\n                                disabled={isLoading}\r\n                                onClick={() => {\r\n                                    navigate.push('/trainingnew')\r\n                                }}>{getLabel(labels.newTraining)}</Button>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'end', paddingTop: '10px', paddingBottom: '10px' }}>\r\n                    <Checkbox checked={state} onChange={(e) => setState(e.target.checked)}>\r\n                        {getLabel(labels.onlyInactive)}\r\n                    </Checkbox>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { insertCountryTraining, getCountryTrainingByTraining, deleteCountryTraining } from \"../utils/urls\";\r\nexport class CountryTrainingService {\r\n    put = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).put(insertCountryTraining(), countryTraining)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(getCountryTrainingByTraining(), countryTraining)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(deleteCountryTraining(), countryTraining)\r\n    }\r\n}\r\n\r\nexport default CountryTrainingService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, Alert } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getCultures, getDatosUsuario } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst baseTraining = {\r\n  entCultura: getCulture()\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [paises, setPaises] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n  const [formCourse] = Form.useForm()\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  // const renderCourse = ({ catId, catNombre, catValor }) =>\r\n  //   <Col key={catId} span={24}>\r\n  //     <Form.Item\r\n  //       name={[catValor]}\r\n  //       label={`Number of beneficiaries for ${catNombre}`}\r\n  //       rules={[\r\n  //         {\r\n  //           required: true,\r\n  //           message: `Complete number of beneficiaries for ${catNombre}`\r\n  //         },\r\n  //       ]}\r\n  //     >\r\n  //       <InputNumber />\r\n  //     </Form.Item>\r\n  //   </Col>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `${getLabel(labels.thenEmail)} ${postulant} ${getLabel(labels.alreadyExists)}.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `${getLabel(labels.email)} ${postulant} ${getLabel(labels.successfullyAdded)}.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `${getLabel(labels.email)} ${email} ${getLabel(labels.successfullyRemoved)}.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      idRegion: values.idRegion,\r\n      entCultura: values.entCultura,\r\n      idModalidad: values.idModalidad,\r\n      entFechaIni: values.entFechaIni,\r\n      entFechaFin: values.entFechaFin,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar Paises\r\n        const requests = []\r\n        if (paises.length > 0) {\r\n          paises.forEach(p => {\r\n            requests.push(countryTrainingService.put({\r\n              navigate, countryTraining: {\r\n                \"idPais\": p.value,\r\n                \"idEntrenamiento\": data.listObject[0].entId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar cursos\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyCreated)}`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`${getLabel(labels.notPossibleAddApplicant)}: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyCreated)}`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        form={formCourse}\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      {getLabel(labels.newTraining)}\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >{getLabel(labels.saveDraft)}</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                    >{getLabel(labels.publish)}</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n\r\n                <Form.Item\r\n                  name='idRegion'\r\n                  label={getLabel(labels.region)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectRegion),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().regions}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, o) => {\r\n                      if (o.catValor === 'CAT_REG_AND') {\r\n                        const entCultura = getCultures().filter(c => c.id === 'es_EC')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      }\r\n                      else if (o.catValor === 'CAT_REG_CAR') {\r\n                        const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      } else {\r\n                        const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entCultura'\r\n                  label={getLabel(labels.language)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectLanguage),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    disabled\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'value',\r\n                      value: 'id'\r\n                    }}\r\n                    options={getCultures()}\r\n                    showSearch\r\n                    optionFilterProp=\"value\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label={getLabel(labels.country)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectCountry),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name='idPais'\r\n                    mode='multiple'\r\n                    onChange={(_, option) => {\r\n                      setPaises(option)\r\n                    }}\r\n                  >\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label={getLabel(labels.modality)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectModality),\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label={getLabel(labels.startDate)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectStartDate),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label={getLabel(labels.endDate)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectEndDate),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label={getLabel(labels.courses)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectCourses),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label={getLabel(labels.applicantsEmails)}\r\n                  extra={getLabel(labels.pressEnterAddEmail)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.addApplicants),\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: getLabel(labels.emailNotValid)\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nimport { getInformStatus } from '../../utils/Utils'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList.filter(a => a.posEstado.catValor === 'EST_ENR'))\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;{getLabel(labels.applicants)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label={getLabel(labels.searchExpression)}\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>{getLabel(labels.search)}</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.name),\r\n                                            dataIndex: 'usuId',\r\n                                            defaultSortOrder: 'ascend',\r\n                                            sorter: (a, b) => {\r\n                                                if (a.nombresApellidos > b.nombresApellidos) {\r\n                                                    return 1\r\n                                                }\r\n                                                if (a.nombresApellidos < b.nombresApellidos) {\r\n                                                    return -1\r\n                                                }\r\n                                                return 0\r\n                                            },\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.country),\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.attendance),\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.workPlan),\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${getInformStatus(informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL'))}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.finalReport),\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${getInformStatus(informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR'))}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.certificate),\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.actions),\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>{getLabel(labels.view)}</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.filter(p => p.posEstado.catValor === 'EST_ENR').map(p => ({ ...p, nombresApellidos: `${p.usuId.nombres} ${p.usuId.apellidos}` }))}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadInformByName, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Descriptions, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getInformStatus, getSortInforms, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              {getLabel(labels.download)}\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>\r\n            {getLabel(labels.registrationDate)}\r\n          </Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item\r\n            style={{\r\n              whiteSpace: 'pre-wrap'\r\n            }}\r\n            label={\r\n              <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n            }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              {getLabel(labels.comments)}:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'TYP_INF_WPL' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `${getLabel(labels.sureApproveThe)} ${infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''}?`\r\n                  }\r\n                  okText={getLabel(labels.yesApprove)} cancelText={getLabel(labels.no)} onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending\r\n                  }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >{getLabel(labels.approve)}</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `${getLabel(labels.sureRejectThe)} ${infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''}`\r\n                  }\r\n                  okText={getLabel(labels.yesReject)} cancelText={getLabel(labels.no)} onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >{getLabel(labels.reject)}</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${getInformStatus(postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId))}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && getSortInforms(postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n              >{getLabel(labels.download)}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByUuid(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": getCulture(),\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({ cerUuid }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      if (data) toast.success(getLabel(labels.attendanceSaved))\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": getCulture(),\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      if (data) toast.success(getLabel(labels.emailSent))\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error(getLabel(labels.emailSendFailed))\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'TYP_INF_WPL' ? commentWorkplan : catValor === 'TYP_INF_FIR' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = { idEntrenamiento: idTraining, posId: id }\r\n    try {\r\n      const { data } = await postulantService.getByTraining({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].entId.cursoList\r\n        const postulant = data.listObject[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  {getLabel(labels.loading)}...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              {getLabel(labels.profile)}:\r\n                            </Typography.Text>\r\n                            <br />{getLabel(labels.applicant)}\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              {getLabel(labels.invitedBy)}:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label={getLabel(labels.firstName)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label={getLabel(labels.lastName)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label={getLabel(labels.sex)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label={getLabel(labels.dateBirth)}\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label={getLabel(labels.country)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label={getLabel(labels.city)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label={getLabel(labels.countryCode)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label={getLabel(labels.phoneNumber)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label={getLabel(labels.idNumber)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label={getLabel(labels.currentyWorking)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label={getLabel(labels.email)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label={getLabel(labels.additionalEmail)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.progress)}</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              {getLabel(labels.attendance)}\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >{getLabel(labels.save)}</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getDatosUsuario, getInformStatus, getSortInforms, getToken, getTypeContent, setInforms } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [trainings, setTrainings] = useState([])\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const fileName = 'WorkplanTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    {getLabel(labels.download)}\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = (idEntrenamiento, posId, { curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={`${idEntrenamiento}_${curId}`}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${getInformStatus(trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId))}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList && getSortInforms(trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0] && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList && <>\r\n                    {\r\n                        trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId, posId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            {getLabel(labels.uploadYourWorkplan)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='posId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.file)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >{getLabel(labels.selectFile)}</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            loading={uploading || sending}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? getLabel(labels.uploading) : sending ? getLabel(labels.sending) : getLabel(labels.send)}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success(getLabel(labels.emailSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.emailSendFailed))\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId, posId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_WPL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success(getLabel(labels.uploadSuccessfully))\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            setTrainings(data.listObject)\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setInforms(training.informeList)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.workplanTemplate)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                {getLabel(labels.download)}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <>\r\n                                {\r\n                                    trainings && trainings.map(t => <Collapse\r\n                                        key={t.idEntrenamiento}\r\n                                        accordion\r\n                                        bordered={false}\r\n                                        expandIconPosition='end'\r\n                                        style={{\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            t.entId && t.entId.cursoList && t.entId.cursoList.map(c => renderCourse(t.idEntrenamiento, t.posId, c))\r\n                                        }\r\n                                    </Collapse>\r\n                                    )\r\n                                }\r\n                                {/* <Collapse\r\n                                    accordion\r\n                                    bordered={false}\r\n                                    expandIconPosition='end'\r\n                                    style={{\r\n                                        backgroundColor: 'transparent'\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                    }\r\n                                </Collapse> */}\r\n                            </>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Collapse, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getDatosUsuario, getInformStatus, getSortInforms, getToken, getTypeContent, setInforms } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [trainings, setTrainings] = useState([])\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n        const fileName = 'FinalReportTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    {getLabel(labels.download)}\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = (idEntrenamiento, posId, { curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={`${idEntrenamiento}_${curId}`}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${getInformStatus(trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId))}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList && getSortInforms(trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0] && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList && <>\r\n                    {\r\n                        trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId, posId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                            {getLabel(labels.uploadFinalReport)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='posId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.file)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >{getLabel(labels.selectFile)}</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>{getLabel(labels.copyEvidenceLink)}</Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label={getLabel(labels.url)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            loading={uploading || isLoading || sending}\r\n                                        >\r\n                                            {uploading ? getLabel(labels.uploading) : isLoading ? getLabel(labels.saving) : sending ? getLabel(labels.sending) : getLabel(labels.send)}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ idInforme }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId: idInforme }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success(getLabel(labels.emailSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.emailSendFailed))\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success(getLabel(labels.evidenceSendedSuccessfully))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId, posId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_FIR')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success(getLabel(labels.uploadSuccessfully))\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            setTrainings(data.listObject)\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setInforms(training.informeList)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR').map(i => i.infId))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.finalReportTemplate)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                {getLabel(labels.download)}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                trainings && trainings.map(t =>\r\n                                    t && t.beneficiarioList && t.beneficiarioList.length >= (t.entId.entLimBen || 1) ?\r\n                                        <Collapse\r\n                                            key={t.idEntrenamiento}\r\n                                            accordion\r\n                                            bordered={false}\r\n                                            expandIconPosition='end'\r\n                                            style={{\r\n                                                backgroundColor: 'transparent'\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                t.entId && t.entId.cursoList && t.entId.cursoList.map(c => renderCourse(t.idEntrenamiento, t.posId, c))\r\n                                            }\r\n                                        </Collapse>\r\n                                        :\r\n                                        <Result\r\n                                            key={t.idEntrenamiento}\r\n                                            title={`${getLabel(labels.thereMustLeast)} ${t.entId && (t.entId.entLimBen || 1)} ${getLabel(labels.registeredBeneficiariesUploadFinalReport)}.`}\r\n                                            extra={\r\n                                                <Button type=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/beneficiaries/registry')\r\n                                                    }}\r\n                                                >{getLabel(labels.registerBeneficiaries)}</Button>\r\n                                            }\r\n                                        />\r\n                                )\r\n                            }\r\n                            {/* {\r\n                                postulant && postulant.beneficiarioList && postulant.beneficiarioList.length >= (postulant.entId.entLimBen || 1) ?\r\n                                    <Collapse\r\n                                        accordion\r\n                                        bordered={false}\r\n                                        expandIconPosition='end'\r\n                                        style={{\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                        }\r\n                                    </Collapse>\r\n                                    :\r\n                                    <Result\r\n                                        title={`${getLabel(labels.thereMustLeast)} ${postulant.entId && (postulant.entId.entLimBen || 1)} ${getLabel(labels.registeredBeneficiariesUploadFinalReport)}.`}\r\n                                        extra={\r\n                                            <Button type=\"primary\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/beneficiaries/registry')\r\n                                                }}\r\n                                            >{getLabel(labels.registerBeneficiaries)}</Button>\r\n                                        }\r\n                                    />\r\n                            } */}\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Result } from 'antd'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [trainings, setTrainings] = useState([])\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = (idEntrenamiento, { cerEstado, cerFechaCad, cerId, cerNombre, idCurso, cerUuid }) =>\r\n        <div\r\n            key={`${idEntrenamiento}_${cerId}`}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                                {\r\n                                    trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0] && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >{getLabel(labels.download)}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            setTrainings(data.listObject)\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    trainings && trainings.map(t =>\r\n                        t && t.informeList && t.certificadoList &&\r\n\r\n                            t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0\r\n                            &&\r\n                            t.certificadoList.length > 0\r\n                            ?\r\n                            <>\r\n                                {\r\n                                    t.certificadoList && t.certificadoList.map(c => renderCertificate(t.idEntrenamiento, c))\r\n                                }\r\n                            </>\r\n                            :\r\n                            <Result\r\n                                key={t.idEntrenamiento}\r\n                                title={getLabel(labels.seeYourCertificateFinalReportBeneficiary)}\r\n                                extra={\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        onClick={\r\n                                            () => {\r\n                                                t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                    navigate.push('/finalreport') : navigate.push('/beneficiaries/qualification')\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        {\r\n                                            t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                getLabel(labels.sendFinalReport) : getLabel(labels.sendListBeneficiaries)\r\n                                        }\r\n                                    </Button>\r\n                                }\r\n                            />\r\n                    )\r\n                // postulant && postulant.informeList && postulant.certificadoList &&\r\n                // <>\r\n                //     {\r\n                //         postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0\r\n                //             &&\r\n                //             postulant.certificadoList.length > 0\r\n                //             ?\r\n                //             <>\r\n                //                 {\r\n                //                     postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                //                 }\r\n                //             </>\r\n                //             :\r\n                //             <Result\r\n                //                 title={getLabel(labels.seeYourCertificateFinalReportBeneficiary)}\r\n                //                 extra={\r\n                //                     <Button type=\"primary\"\r\n                //                         onClick={\r\n                //                             () => {\r\n                //                                 postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                //                                     navigate.push('/finalreport') : navigate.push('/beneficiaries/qualification')\r\n                //                             }\r\n                //                         }\r\n                //                     >\r\n                //                         {\r\n                //                             postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                //                                 getLabel(labels.sendFinalReport) : getLabel(labels.sendListBeneficiaries)\r\n                //                         }\r\n                //                     </Button>\r\n                //                 }\r\n                //             />\r\n                //     }\r\n                // </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Card, Badge, Button, Alert, Spin } from 'antd'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getActiveTraining, getDatosUsuario, setActiveTraining, setTrainingInforms } from '../../utils/Utils'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nconst postulantService = new PostulantService()\r\n\r\nconst Classes = () => {\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [trainings, setTrainings] = useState([])\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await postulantService.getTraining({ navigate, postulant: { idUsuario: getDatosUsuario().usuarioId } })\r\n            setTrainings(data.listObject)\r\n            setTrainingInforms(data.listObject)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.trainings)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {/* <Col span={24}>\r\n                    {\r\n                        isLoading ?\r\n                            <Row style={{ padding: '30px 10px' }}>\r\n                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                    <Spin size='large' tip={\r\n                                        <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                            {getLabel(labels.loading)}...\r\n                                        </Typography.Paragraph>\r\n                                    } />\r\n                                </Col>\r\n                            </Row> :\r\n                            trainings && trainings.length > 0 ?\r\n                                <>\r\n                                    {\r\n                                        trainings.map(t => renderTraining(t.entId))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <Alert\r\n                                    description={getLabel(labels.trainingsNotFound)}\r\n                                    type=\"info\"\r\n                                    showIcon\r\n                                    style={{ borderRadius: '12px', border: 'none' }}\r\n                                />\r\n                    }\r\n                </Col> */}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, Image, Alert, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getCultures, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport PostulantService from '../../service/PostulantService'\r\n\r\nconst trainingService = new TrainingService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\nconst postulantService = new PostulantService()\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCountry, setIsLoadingCountry] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const [formCourse] = Form.useForm()\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' || training.entEstado.catValor === 'ACTIVE' ?\r\n                            <>\r\n                                <Tooltip title={getLabel(labels.sendInvitationEmail)}>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCountry = async (country) => {\r\n        setIsSaving(true)\r\n        const countryTraining = { ...country, idEntrenamiento: training.entId }\r\n        if (countryTraining.checked) {\r\n            try {\r\n                const { data } = await countryTrainingService.put({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await countryTrainingService.del({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `${getLabel(labels.thenEmail)} ${posEmail} ${getLabel(labels.alreadyExists)}`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `${getLabel(labels.email)} ${posEmail} ${getLabel(labels.successfullySaved)}`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants()\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `${getLabel(labels.email)} ${postulant.posEmail} ${getLabel(labels.successfullyDeleted)}`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants()\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setTraining({\r\n                    ...training,\r\n                    countries: training.countryTrainingList.map(c => c.paePais.catId),\r\n                    courses: training.cursoList.map(c => c.curNombre.catId),\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n                setPaises(training.countryTrainingList)\r\n                setCourses(training.cursoList)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCountries = async () => {\r\n        setIsLoadingCountry(true)\r\n        const countryTraining = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await countryTrainingService.getByTraining({ navigate, countryTraining })\r\n            if (data) {\r\n                const countries = data.listObject\r\n                setPaises(countries)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingCountry(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject[0].postulanteList\r\n                setPostulants(postulants)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        const training = {\r\n            idRegion: values.entRegion.catId,\r\n            entId: values.entId,\r\n            entCultura: values.entCultura,\r\n            entFechaFin: values.entFechaFin\r\n        }\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await trainingService.set({ navigate, training })\r\n            if (data) {\r\n                toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyUpdated)}`)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error(getLabel(labels.couldNotSendEmail), { position: 'bottom-center' })\r\n            else\r\n                toast.success(getLabel(labels.emailSentSuccessfully), { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred), { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (paises.length < 1 || courses.length < 1 || postulants.length < 1) {\r\n            toast.error(getLabel(labels.addCountryCourseApplicant))\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            entCultura: training.entCultura,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error(getLabel(labels.couldNotSendEmail))\r\n                                    else\r\n                                        toast.success(getLabel(labels.emailSentSuccessfully))\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.publishSuccesfully)}`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.publishSuccesfully)}`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            form={formCourse}\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving || isPublishing || isSendingEmail}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        {getLabel(labels.edit)} {getLabel(labels.training)}\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >{getLabel(labels.saveDraft)}</Button>\r\n                                                    <Popconfirm title={getLabel(labels.surePublishTraining)} okText={getLabel(labels.yesPublish)} cancelText={getLabel(labels.no)} onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >{getLabel(labels.publish)}</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col span={24} style={{ display: 'none' }}>\r\n                                    <Form.Item\r\n                                        name='entId'\r\n                                        label={getLabel(labels.idTraining)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.completeID),\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name={['entRegion', 'catId']}\r\n                                                label={getLabel(labels.region)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectRegion),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    showSearch\r\n                                                    options={getCatalogos().regions}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onChange={(_, o) => {\r\n                                                        if (o.catValor === 'CAT_REG_AND') {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'es_EC')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        }\r\n                                                        else if (o.catValor === 'CAT_REG_CAR') {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        } else {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name='entCultura'\r\n                                                label={getLabel(labels.language)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectLanguage),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'value',\r\n                                                        value: 'id'\r\n                                                    }}\r\n                                                    options={getCultures()}\r\n                                                    showSearch\r\n                                                    optionFilterProp=\"value\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='countries'\r\n                                                label={getLabel(labels.country)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectCountry),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCountry}\r\n                                                    mode='multiple'\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={\r\n                                                        getCatalogos().paises.map(p => {\r\n                                                            const { catNombre, catDescripcion } = p\r\n                                                            const flag = catDescripcion.toLowerCase()\r\n                                                            return (\r\n                                                                {\r\n                                                                    ...p,\r\n                                                                    catNombre: <>\r\n                                                                        <img\r\n                                                                            src={`https://flagcdn.com/24x18/${flag}.png`}\r\n                                                                            srcSet={`https://flagcdn.com/48x36/${flag}.png 2x,https://flagcdn.com/72x54/${flag}.png 3x`}\r\n                                                                            width=\"24\"\r\n                                                                            height=\"18\"\r\n                                                                            alt={catNombre} />&nbsp;\r\n                                                                        {catNombre}\r\n                                                                    </>\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        )\r\n                                                    }\r\n                                                    onSelect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: true,\r\n                                                            idPais: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: false,\r\n                                                            paeId: paises.filter(c => c.paePais.catId === option.catId).length > 0 ? paises.filter(c => c.paePais.catId === option.catId)[0].paeId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label={getLabel(labels.trainingName)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.completeTrainingName),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label={getLabel(labels.modality)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectModality),\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'\r\n                                                >\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label={getLabel(labels.startDate)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectStartDate),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label={getLabel(labels.endDate)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectEndDate),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='courses'\r\n                                                label={getLabel(labels.courses)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectCourses),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCourse}\r\n                                                    mode='multiple'\r\n                                                    showSearch\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={getCatalogos().cursos}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onSelect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: true,\r\n                                                            idNombreCurso: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: false,\r\n                                                            curId: courses.filter(c => c.curNombre.catId === option.catId).length > 0 ? courses.filter(c => c.curNombre.catId === option.catId)[0].curId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isPublishing || isSendingEmail}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label={getLabel(labels.applicantsEmails)}\r\n                                                extra={getLabel(labels.pressEnterAddEmail)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.addApplicants),\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: getLabel(labels.emailNotValid)\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image, Tag } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nimport { getInformStatus } from '../../utils/Utils'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;{getLabel(labels.applicants)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label={getLabel(labels.searchExpression)}\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>{getLabel(labels.search)}</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.firstName),\r\n                                            dataIndex: 'usuId',\r\n                                            defaultSortOrder: 'ascend',\r\n                                            sorter: (a, b) => {\r\n                                                if (a.nombresApellidos > b.nombresApellidos) {\r\n                                                    return 1\r\n                                                }\r\n                                                if (a.nombresApellidos < b.nombresApellidos) {\r\n                                                    return -1\r\n                                                }\r\n                                                return 0\r\n                                            },\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.country),\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.attendance),\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.workPlan),\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${getInformStatus(informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL'))}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.finalReport),\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${getInformStatus(informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR'))}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.certificate),\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.actions),\r\n                                            dataIndex: '',\r\n                                            render: (_, { posId, usuId }) => <div style={{ textAlign: 'center' }}>\r\n                                                {\r\n                                                    usuId ?\r\n                                                        <Button type='primary' href={`/#/trainingapplicant/${posId}/${id}`}>{getLabel(labels.view)}</Button>\r\n                                                        :\r\n                                                        <Tag color='#108ee9'>{getLabel(labels.notEnrolled)}</Tag>\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.map(p => ({ ...p, nombresApellidos: p.usuId ? `${p.usuId.nombres} ${p.usuId.apellidos}` : `${p.posEmail}` }))}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport { getInformStatus, getSortInforms, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nconst postulantService = new PostulantService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            {getLabel(labels.download)}\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item\r\n                        style={{\r\n                            whiteSpace: 'pre-wrap'\r\n                        }}\r\n                        label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                        }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${getInformStatus(postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId))}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''\r\n                            }\r\n                            &nbsp;- {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && getSortInforms(postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerUuid, cerId, cerNombre, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >{getLabel(labels.download)}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { idEntrenamiento: idTraining, posId: id }\r\n        try {\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject[0].entId.cursoList\r\n                const postulant = data.listObject[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.profile)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />{getLabel(labels.applicant)}\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.invitedBy)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={'nombres'}\r\n                                                            label={getLabel(labels.firstName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label={getLabel(labels.lastName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label={getLabel(labels.sex)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label={getLabel(labels.dateBirth)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label={getLabel(labels.country)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label={getLabel(labels.city)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={getLabel(labels.countryCode)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={getLabel(labels.phoneNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={getLabel(labels.idNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={getLabel(labels.currentyWorking)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.progress)}</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            {getLabel(labels.attendance)}\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { deleteBeneficiary, downloadBeneficiariesReport, getBeneficiariesByPostulant, getBeneficiaryById, insertBeneficiary, updateBeneficiary, validateBeneficiary } from '../utils/urls'\r\nexport class BeneficiaryService {\r\n    put = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).put(insertBeneficiary(), beneficiary)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(updateBeneficiary(), beneficiary)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiaryById(), beneficiary)\r\n    }\r\n    getByPostulant = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiariesByPostulant(), beneficiary)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(deleteBeneficiary(), beneficiary)\r\n    }\r\n    val = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(validateBeneficiary(), beneficiary)\r\n    }\r\n    downloadBeneficiariesReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).patch(downloadBeneficiariesReport())\r\n    }\r\n}\r\n\r\nexport default BeneficiaryService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, downloadCertificateByUuid, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n    downloadByUuid = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByUuid(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React, { useState } from 'react'\r\nimport { Col, Row, Space, Button, Form, Select, InputNumber, Input, Switch, Alert } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst { Option } = Select\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            alt={e.catNombre}\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.substr(0, 2).toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n        ></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst Beneficiary = ({ type, beneficiary, saveBeneficiary, isSaving, closeBeneficiary }) => {\r\n\r\n    const [totalEmpleados, setTotalEmpleados] = useState(beneficiary.benNumPer || 0)\r\n    const [totalEmpleadosH, setTotalEmpleadosH] = useState(beneficiary.benHombres || 0)\r\n    const [totalEmpleadosM, setTotalEmpleadosM] = useState(beneficiary.benMujeres || 0)\r\n\r\n    const totalValido = () => totalEmpleados === totalEmpleadosH + totalEmpleadosM\r\n\r\n    const [formBeneficiary] = Form.useForm()\r\n\r\n    if (type === 1)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label={getLabel(labels.idNumber)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label={getLabel(labels.name)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeFirstName)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label={getLabel(labels.country)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectCountry)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCiudad']}\r\n                                label={getLabel(labels.city)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCity)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label={getLabel(labels.sex)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectSex)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name='benTrabaja'\r\n                                label={getLabel(labels.currentyWorking)}\r\n                                valuePropName='checked'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idNivelInt']}\r\n                                label={getLabel(labels.instructionLevel)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeInstructionLevel)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().educationLevels}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >{getLabel(labels.cancel)}</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? getLabel(labels.saving) : getLabel(labels.save)\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n    if (type === 2)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label={getLabel(labels.idNumber)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label={getLabel(labels.name)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeFirstName)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label={getLabel(labels.country)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectCountry)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCiudad']}\r\n                                label={getLabel(labels.city)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCity)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label={getLabel(labels.sex)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectSex)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benIdEmpresa']}\r\n                                label={getLabel(labels.companyID)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCompanyID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNomEmpresa']}\r\n                                label={getLabel(labels.company)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCompany)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCargo']}\r\n                                label={getLabel(labels.jobTitle)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeJobTitle)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNumPer']}\r\n                                label={getLabel(labels.totalCollaborators)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeTotalCollaborators)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        setTotalEmpleados(e)\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Row gutter={[10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benHombres']}\r\n                                        label={getLabel(labels.men)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.numberMen)\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                            onChange={(e) => {\r\n                                                setTotalEmpleadosH(e)\r\n                                            }}\r\n                                            min={0}\r\n                                            max={(totalEmpleados || 0) - (totalEmpleadosM || 0)}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benMujeres']}\r\n                                        label={getLabel(labels.women)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.numberWomen)\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                            onChange={(e) => {\r\n                                                setTotalEmpleadosM(e)\r\n                                            }}\r\n                                            min={0}\r\n                                            max={(totalEmpleados || 0) - (totalEmpleadosH || 0)}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            {\r\n                                !totalValido() &&\r\n                                <Row gutter={[10]}>\r\n                                    <Col span={24}>\r\n                                        <Form.Item>\r\n                                            <Alert type='warning' showIcon message={`${getLabel(labels.theSum)} ${getLabel(labels.men)} + ${getLabel(labels.women)} ${getLabel(labels.mustEqual)} ${getLabel(labels.totalCollaborators)}`} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >{getLabel(labels.cancel)}</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled || !totalValido()}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? getLabel(labels.saving) : getLabel(labels.save)\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default Beneficiary","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Col, Row, Space, Button, Table, Image, Drawer, Typography, Collapse, Popconfirm, Switch, Result, Modal } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport BeneficiaryService from './../../service/BeneficiaryService'\r\nimport CertificateService from '../../service/CertificateService'\r\nimport Beneficiary from './Beneficiary'\r\n\r\nconst postulantService = new PostulantService()\r\nconst beneficiaryService = new BeneficiaryService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst { Title, Paragraph, Text } = Typography\r\nconst { confirm } = Modal\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst Beneficiaries = () => {\r\n    const navigate = useHistory()\r\n    const { operation } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isOpening, setIsOpening] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingBeneficiaries, setIsLoadingBeneficiaries] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [postulant, setPostulant] = useState({})\r\n    const [beneficiaryC1, setBeneficiaryC1] = useState(null)\r\n    const [beneficiaryC2, setBeneficiaryC2] = useState(null)\r\n    const [openC1, setOpenC1] = useState(false)\r\n    const [openC2, setOpenC2] = useState(false)\r\n    const [selectedBeneficiary, setSelectedBeneficiary] = useState({ benId: 0 })\r\n    const [openDeleteBeneficiary, setOpenDeleteBeneficiary] = useState(false);\r\n\r\n    const [isGenerating, setIsGenerating] = useState(false)\r\n    const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n\r\n    const closeBeneficiaryC1 = () => {\r\n        setOpenC1(false)\r\n    }\r\n\r\n    const getBeneficiaryC1 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC1(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                idNivelInt: data.listObject[0].benNivelInt.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC1(beneficiary)\r\n            setOpenC1(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC1 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC1()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const newBeneficiary = time => new Promise(resolve => setTimeout(resolve, time * 1000))\r\n\r\n    const closeBeneficiaryC2 = () => {\r\n        setOpenC2(false)\r\n    }\r\n\r\n    const getBeneficiaryC2 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC2(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC2(beneficiary)\r\n            setOpenC2(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC2 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC2()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const showReconfirmDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(true)\r\n    }\r\n\r\n    const confirmDeleteBeneficiary = async () => {\r\n        setIsDeleting(true)\r\n        try {\r\n            const { data } = await beneficiaryService.del({ navigate, beneficiary: selectedBeneficiary })\r\n            if (data) {\r\n                toast.success(getLabel(labels.beneficiarySuccessfullyRemoved))\r\n                fetchData(2)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setSelectedBeneficiary({ benId: 0 })\r\n            setIsDeleting(false)\r\n            setOpenDeleteBeneficiary(false)\r\n        }\r\n    }\r\n\r\n    const cancelDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(false)\r\n    }\r\n\r\n    const delBeneficiary = async ({ benId }) => {\r\n        setSelectedBeneficiary({ benId })\r\n        if ((postulant.beneficiarioList.length - 1) < (postulant.entId.entLimBen || 1)) {\r\n            showReconfirmDeleteBeneficiary()\r\n        } else {\r\n            setIsDeleting(true)\r\n            try {\r\n                const { data } = await beneficiaryService.del({ navigate, beneficiary: { benId } })\r\n                if (data) {\r\n                    toast.success(getLabel(labels.beneficiarySuccessfullyRemoved))\r\n                    fetchData(2)\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setSelectedBeneficiary({ benId: 0 })\r\n                setIsDeleting(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateBeneficiary = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = await beneficiaryService.val({ navigate, beneficiary })\r\n            if (data)\r\n                toast.success(getLabel(labels.beneficiarySuccessfullyUpdated))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendCertificate = async ({ cerId }) => {\r\n        setIsSendingCertificate(true)\r\n        try {\r\n            const certificate = { cerId }\r\n            const { data } = await certificateService.send({ navigate, certificate })\r\n            if (data) toast.success(getLabel(labels.certificateSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.certificateSendFailed))\r\n        } finally {\r\n            setIsSendingCertificate(false)\r\n        }\r\n    }\r\n\r\n    const generate = async ({ idCurso, idPostulante }) => {\r\n        setIsGenerating(true)\r\n        try {\r\n            const course = { idCurso, idPostulante }\r\n            const { data } = await certificateService.generate({ navigate, course })\r\n            const certificate = data.listObject[0]\r\n            toast.success(getLabel(labels.certificateGeneratedSuccessfully))\r\n            sendCertificate(certificate)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    const sendBeneficiaries = async ({ idCurso, idPostulante }) => {\r\n        confirm({\r\n            title: getLabel(labels.sendBeneficiaryListTitle),\r\n            icon: <anticons.ExclamationCircleFilled />,\r\n            content: getLabel(labels.sendBeneficiaryListConfirm),\r\n            okText: getLabel(labels.ok),\r\n            cancelText: getLabel(labels.cancel),\r\n            onOk() {\r\n                generate({ idCurso, idPostulante })\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCourse = ({ curId, curNombre }, posId, idEntrenamiento) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            operation === 'registry' &&\r\n                            <>\r\n                                {\r\n                                    trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].beneficiarioList && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].beneficiarioList.filter(b => b.idCurso === curId && b.idPostulante === posId).length >= (trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].entId.entLimBen || 1) ?\r\n                                        <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                        :\r\n                                        <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                }\r\n                            </>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' &&\r\n                            <>\r\n                                <>\r\n                                    {\r\n                                        trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].certificadoList && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].certificadoList.filter(c => c.idCurso === curId && c.idPostulante === posId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                            <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                            :\r\n                                            <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                    }\r\n                                </>\r\n                            </>\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography>\r\n                            <Text strong style={{ fontSize: '1.1em' }}>\r\n                                {curNombre.catNombre}\r\n                            </Text>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            <Row>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Typography>\r\n                        <Paragraph>\r\n                            <Text type='secondary' strong>\r\n                                {`${getLabel(labels.minimumBeneficiaries)} (${trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].entId.entLimBen || 1})`}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    style={{ textAlign: 'right' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type='default'\r\n                            loading={isLoading || isLoadingBeneficiaries}\r\n                            disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                            onClick={() => {\r\n                                fetchData(2)\r\n                            }}>{getLabel(labels.refresh)}</Button>\r\n                        {\r\n                            trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].certificadoList.filter(c => c.idCurso === curId).length < 1 && <Button\r\n                                type='primary'\r\n                                loading={isOpening}\r\n                                disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                                onClick={() => {\r\n                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC1(null)\r\n                                            setBeneficiaryC1({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_NAT'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC1(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC2(null)\r\n                                            setBeneficiaryC2({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_LEG'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC2(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    }\r\n                                }}>{getLabel(labels.newBeneficiary)}</Button>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                            <Button type='primary'\r\n                                loading={isGenerating || isSendingCertificate}\r\n                                disabled={isGenerating || isSendingCertificate || isLoading || isLoadingBeneficiaries}\r\n                                onClick={() => sendBeneficiaries(\r\n                                    {\r\n                                        idCurso: curId,\r\n                                        idPostulante: posId\r\n                                    })}\r\n                            >\r\n                                {\r\n                                    isGenerating || isSendingCertificate ? getLabel(labels.sending) : getLabel(labels.send)\r\n                                }\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0] && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].beneficiarioList &&\r\n                <Table\r\n                    loading={isLoading || isLoadingBeneficiaries}\r\n                    {...tableProps}\r\n                    rowKey='benId'\r\n                    columns={[\r\n                        {\r\n                            title: getLabel(labels.idNumber),\r\n                            dataIndex: 'benDocumento',\r\n                            render: (_, { benDocumento }) => `${benDocumento}`,\r\n                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.name),\r\n                            dataIndex: 'benNombres',\r\n                            render: (_, { benNombres }) => `${benNombres}`\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.country),\r\n                            dataIndex: 'benPais',\r\n                            render: (_, { benPais }) =>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png`}\r\n                                        srcSet={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${benPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                        width=\"32\"\r\n                                        height=\"24\"\r\n                                        alt={benPais.catNombre}></img>\r\n                                </div>\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.city),\r\n                            dataIndex: 'benCiudad',\r\n                            render: (_, { benCiudad }) => `${benCiudad || ''}`,\r\n                            responsive: ['sm', 'md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.sex),\r\n                                    dataIndex: 'benSexo',\r\n                                    render: (_, { benSexo }) => `${benSexo.catNombre}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.jobTitle),\r\n                                    dataIndex: 'benCargo',\r\n                                    render: (_, { benCargo }) => `${benCargo}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.isWorking),\r\n                                    dataIndex: 'benTrabaja',\r\n                                    render: (_, { benTrabaja }) => <>{benTrabaja ? getLabel(labels.yes) : getLabel(labels.no)}</>,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.company),\r\n                                    dataIndex: 'benNomEmpresa',\r\n                                    render: (_, { benNomEmpresa }) => `${benNomEmpresa}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.instructionLevel),\r\n                                    dataIndex: 'benNivelInt',\r\n                                    render: (_, { benNivelInt }) => `${benNivelInt.catNombre}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.totalPersons),\r\n                                    dataIndex: 'benNumPer',\r\n                                    render: (_, { benNumPer }) => `${benNumPer}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        {\r\n                            title: getLabel(labels.actions),\r\n                            dataIndex: '',\r\n                            render: (_, record) =>\r\n                                <Space>\r\n                                    <Button type='primary'\r\n                                        icon={<anticons.FolderOpenFilled />}\r\n                                        onClick={() => {\r\n                                            if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                                getBeneficiaryC1(record)\r\n                                            } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                                getBeneficiaryC2(record)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    {\r\n                                        operation === 'registry' && trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                                        <>\r\n                                            <Popconfirm title={getLabel(labels.sureDeleteBeneficiary)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.cancel)} onConfirm={() => delBeneficiary(record)}\r\n                                                okButtonProps={{\r\n                                                    loading: isDeleting,\r\n                                                    disabled: isDeleting\r\n                                                }}\r\n                                            >\r\n                                                <Button type='default'\r\n                                                    danger\r\n                                                    icon={<anticons.DeleteFilled />}\r\n                                                    loading={isDeleting}\r\n                                                    disabled={isDeleting}\r\n                                                />\r\n                                            </Popconfirm>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        operation === 'qualification' &&\r\n                                        <Switch\r\n                                            defaultChecked={record.benValidado}\r\n                                            onChange={(e) => {\r\n                                                validateBeneficiary({ ...record, benValidado: e })\r\n                                            }}\r\n                                            loading={isSaving}\r\n                                            disabled={trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].certificadoList.filter(c => c.idCurso === curId).length > 0}\r\n                                        />\r\n                                    }\r\n                                </Space>\r\n                        }\r\n                    ]}\r\n                    dataSource={trainings.filter(t => t.idEntrenamiento === idEntrenamiento)[0].beneficiarioList.filter(b => b.idCurso === curId)}>\r\n                </Table>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const fetchData = async (typeLoad) => {\r\n        setLoad(false)\r\n        if (typeLoad) {\r\n            if (typeLoad === 1) {\r\n                setIsLoading(true)\r\n            } else if (typeLoad === 2) {\r\n                setIsLoadingBeneficiaries(true)\r\n            }\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            setTrainings(data.listObject)\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            if (typeLoad) {\r\n                if (typeLoad === 1) {\r\n                    setIsLoading(false)\r\n                } else if (typeLoad === 2) {\r\n                    setIsLoadingBeneficiaries(false)\r\n                }\r\n            } else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px 20px 6px 20px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                        <Typography>\r\n                            <Title type='secondary' level={3}>\r\n                                {\r\n                                    operation === 'registry' ? getLabel(labels.registryOperation) : getLabel(labels.qualificationOperation)\r\n                                }\r\n                            </Title>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row justify='center'>\r\n                {\r\n                    isLoading ?\r\n                        <AlertWait message={`${getLabel(labels.loading)}...`} isLoading={isLoading} />\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                operation === 'registry' &&\r\n                                <>\r\n                                    {\r\n                                        trainings && trainings.map(t =>\r\n                                            t && t.informeList &&\r\n                                                t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n                                                t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                <Collapse\r\n                                                    key={t.idEntrenamiento}\r\n                                                    accordion\r\n                                                    bordered={false}\r\n                                                    expandIconPosition='end'\r\n                                                    style={{\r\n                                                        backgroundColor: 'transparent'\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        t && t.informeList && t.entId && t.entId.cursoList &&\r\n                                                        t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                            .map(i => ({ ...t.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                            .map(c => renderCourse(c, t.posId, t.idEntrenamiento))\r\n                                                    }\r\n                                                </Collapse>\r\n                                                :\r\n                                                <Result\r\n                                                    key={t.idEntrenamiento}\r\n                                                    title={getLabel(labels.oneApprovedWorkplanRegisterBeneficiaries)}\r\n                                                    extra={\r\n                                                        <Button type=\"primary\"\r\n                                                            onClick={() => {\r\n                                                                navigate.push('/workplan')\r\n                                                            }}\r\n                                                        >\r\n                                                            {getLabel(labels.sendWorkplan)}\r\n                                                        </Button>\r\n                                                    }\r\n                                                />\r\n                                        )\r\n                                    }\r\n                                    {/* {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={getLabel(labels.oneApprovedWorkplanRegisterBeneficiaries)}\r\n                                                extra={\r\n                                                    <Button type=\"primary\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/workplan')\r\n                                                        }}\r\n                                                    >\r\n                                                        {getLabel(labels.sendWorkplan)}\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    } */}\r\n                                </>\r\n                            }\r\n                            {\r\n                                operation === 'qualification' &&\r\n                                <>\r\n                                    {\r\n                                        trainings && trainings.map(t =>\r\n                                            t && t.informeList &&\r\n                                                t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0 ?\r\n                                                <Collapse\r\n                                                    key={t.idEntrenamiento}\r\n                                                    accordion\r\n                                                    bordered={false}\r\n                                                    expandIconPosition='end'\r\n                                                    style={{\r\n                                                        backgroundColor: 'transparent'\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        t && t.informeList && t.entId && t.entId.cursoList &&\r\n                                                        t.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                            .map(i => ({ ...t.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                            .map(c => renderCourse(c, t.posId, t.idEntrenamiento))\r\n                                                    }\r\n                                                </Collapse>\r\n                                                :\r\n                                                <Collapse\r\n                                                    key={t.idEntrenamiento}\r\n                                                    accordion\r\n                                                    bordered={false}\r\n                                                    expandIconPosition='end'\r\n                                                    style={{\r\n                                                        backgroundColor: 'transparent'\r\n                                                    }}\r\n                                                >\r\n                                                    <Result\r\n                                                        key={t.idEntrenamiento}\r\n                                                        title={getLabel(labels.oneApprovedFinalReportQualifyBeneficiaries)}\r\n                                                        extra={\r\n                                                            <Button type=\"primary\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/finalreport')\r\n                                                                }}\r\n                                                            >\r\n                                                                {getLabel(labels.sendFinalReport)}\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                                </Collapse>\r\n                                        )\r\n                                    }\r\n                                    {/* {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={getLabel(labels.oneApprovedFinalReportQualifyBeneficiaries)}\r\n                                                extra={\r\n                                                    <Button type=\"primary\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/finalreport')\r\n                                                        }}\r\n                                                    >\r\n                                                        {getLabel(labels.sendFinalReport)}\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    } */}\r\n                                </>\r\n                            }\r\n\r\n                        </Col>\r\n                }\r\n            </Row>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC1} open={openC1}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC1}\r\n                            disabled={isSaving}\r\n                        >{getLabel(labels.cancel)}</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC1 && <Beneficiary type={1} beneficiary={beneficiaryC1} saveBeneficiary={saveBeneficiaryC1} closeBeneficiary={closeBeneficiaryC1} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC2} open={openC2}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC2}\r\n                            disabled={isSaving}\r\n                        >{getLabel(labels.cancel)}</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC2 && <Beneficiary type={2} beneficiary={beneficiaryC2} saveBeneficiary={saveBeneficiaryC2} closeBeneficiary={closeBeneficiaryC2} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Modal\r\n                title={getLabel(labels.deleteBeneficiaryTitle)}\r\n                open={openDeleteBeneficiary}\r\n                onOk={confirmDeleteBeneficiary}\r\n                confirmLoading={isDeleting}\r\n                onCancel={cancelDeleteBeneficiary}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.cancel)}\r\n            >\r\n                <p>\r\n                    {\r\n                        getLabel(labels.reConfirmDeleteBeneficiary)\r\n                    }\r\n                </p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beneficiaries","import React, { useState } from 'react'\r\nimport { Button, Form, Input, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport md5 from 'md5'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePasswordUser = ({ user, navigate }) => {\r\n\r\n    const [passwordNew, setPasswordNew] = useState('')\r\n    const [passwordNewConfirm, setPasswordNewConfirm] = useState('')\r\n    const [isReseting, setIsReseting] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const resetPassword = async (values) => {\r\n        const usuario = {\r\n            usuId: values.usuId,\r\n            oldpassword: md5(values.password),\r\n            password: md5(values.passwordNew)\r\n        }\r\n        setIsReseting(true)\r\n        try {\r\n            const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n            if (data)\r\n                toast.success(getLabel(labels.passwordResetSuccessfully))\r\n            setTimeout(() => {\r\n                localStorage.removeItem(\"mgeToken\")\r\n                localStorage.removeItem(\"mgeDatosUsuario\")\r\n                localStorage.removeItem(\"mgeTrainings\")\r\n                localStorage.removeItem(\"mgeInformList\")\r\n                navigate.push(\"/login\")\r\n                setIsReseting(false)\r\n            }, 3000)\r\n        } catch (error) {\r\n            setIsReseting(false)\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const cancelResetPassword = () => {\r\n        window.history.go(-1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label={getLabel(labels.idNumber)}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label={getLabel(labels.password)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completePassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNew'\r\n                    label={getLabel(labels.newPassword)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completeNewPassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNew(e.target.value)} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNewConfirm'\r\n                    label={getLabel(labels.confirmNewPassword)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.confirmNewPassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNewConfirm(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                    minLength={8}\r\n                    value={passwordNew}\r\n                    valueAgain={passwordNewConfirm}\r\n                    messages={{\r\n                        minLength: getLabel(labels.passwordHasMore8Characters),\r\n                        specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                        number: getLabel(labels.passwordHasNumber),\r\n                        capital: getLabel(labels.passwordHasCapitalLetter),\r\n                        match: getLabel(labels.passwordsMatch)\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Space>\r\n                    <Button onClick={cancelResetPassword}\r\n                        disabled={isReseting}\r\n                    >{getLabel(labels.cancel)}</Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? getLabel(labels.resetting) : getLabel(labels.resetPassword)\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePasswordUser","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nimport RestorePasswordUser from '../components/usuario/RestorePasswordUser'\r\nimport AlertWait from './AlertWait'\r\nimport UsuarioService from '../service/UsuarioService'\r\n\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getLabel, labels } from '../utils/Internationalization'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Title } = Typography\r\n\r\nconst ResetPasswordUser = () => {\r\n    const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n    const navigate = useHistory()\r\n    const [user, setUser] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchUser = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            const usuario = data.listObject[0]\r\n            setUser(usuario)\r\n        }\r\n        catch (error) {\r\n\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchUser()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Row justify='center' gutter={[15, 20]}>\r\n            <Col span={24}>\r\n                <div className='mgeCard' style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Typography>\r\n                        <Title level={3}>\r\n                            <span className='mge-darkGreen'>\r\n                                {\r\n                                    getLabel(labels.resetPassword).split(' ').map(l => `${l.substring(0, 1).toUpperCase()}${l.substring(1)}`).join(' ')\r\n                                }\r\n                            </span>\r\n                        </Title>\r\n                    </Typography>\r\n                </div>\r\n            </Col>\r\n            <Col xs={22} sm={18} md={16} lg={14} xl={10} xxl={8}>\r\n                {\r\n                    isLoading && <AlertWait isLoading={isLoading} message={getLabel(labels.pleaseWait)} />\r\n                }\r\n                {\r\n                    user && <RestorePasswordUser user={user} navigate={navigate}></RestorePasswordUser>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ResetPasswordUser","import React, { useState } from 'react'\r\nimport { Col, Radio, Row, Typography, Space, Button } from 'antd'\r\nimport { getCultures } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels, setCulture } from '../../utils/Internationalization'\r\nimport toast from 'react-hot-toast'\r\nconst { Title, Paragraph, Text } = Typography\r\n\r\nconst LanguagePreferences = () => {\r\n\r\n    const [value, setValue] = useState(getCulture())\r\n\r\n    const renderCulture = ({ id, value }) => <Radio key={id} value={id}>{value}</Radio>\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.target.value)\r\n        const culture = { culture: e.target.value }\r\n        setCulture(culture)\r\n        toast.success(getLabel(labels.languagePreferencesSaved))\r\n    }\r\n\r\n    return (\r\n        <Row justify='center' gutter={[15, 20]}>\r\n            <Col span={24}>\r\n                <div className='mgeCard' style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Typography>\r\n                        <Title level={3}>\r\n                            <span className='mge-darkGreen'>\r\n                                {getLabel(labels.languagePreferences)}\r\n                            </span>\r\n                        </Title>\r\n                        <Paragraph>\r\n                            <Text type='secondary'>\r\n                                {getLabel(labels.seePreferredLanguage)}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n                <div style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Radio.Group onChange={onChange} value={value}>\r\n                        <Space direction='horizontal'>\r\n                            {\r\n                                getCultures().map(c => renderCulture(c))\r\n                            }\r\n                        </Space>\r\n                    </Radio.Group>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n                <div style={{ padding: '15px 20px 10px 20px', textAlign: 'end' }}>\r\n                    <Button\r\n                        type='default'\r\n                        onClick={() => {\r\n                            window.history.go(-1)\r\n                        }}\r\n                    >\r\n                        {getLabel(labels.back)}\r\n                    </Button>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LanguagePreferences","import React from 'react'\r\nimport LanguagePreferences from '../components/cuenta/LanguagePreferences'\r\nconst Language = () => {\r\n    return <LanguagePreferences />\r\n}\r\nexport default Language","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\n\r\nimport AppTopbar from \"./AppTopbar\";\r\nimport AppFooter from \"./AppFooter\";\r\nimport AppRightPanel from \"./AppRightPanel\";\r\n\r\nimport { Tooltip } from \"primereact/tooltip\";\r\n\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"./App.scss\";\r\n\r\nimport Usuarios from \"./components/usuario\";\r\nimport Usuario from \"./components/usuario/Usuario\";\r\nimport Opciones from \"./components/opcion\";\r\nimport Perfiles from \"./components/perfil\";\r\nimport Perfil from \"./components/perfil/Perfil\";\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport UserInfo from \"./components/dashboard/UserInfo\";\r\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\r\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\r\nimport Courses from \"./components/courses/Courses\";\r\nimport Course from \"./components/courses/Course\";\r\nimport Applicants from \"./components/Applicant/Applicants\";\r\nimport Applicant from \"./components/Applicant/Applicant\";\r\nimport WorkPlan from \"./components/workplan/WorkPlan\";\r\nimport FinalReport from \"./components/finalReport/FinalReport\";\r\nimport Certificate from \"./components/certificate/Certificate\";\r\nimport Classes from \"./components/classes/Classes\";\r\nimport Training from \"./components/training/Training\";\r\n\r\nimport { getDatosUsuario, getOpcionesMenu } from \"./utils/Utils\";\r\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\r\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\r\nimport Beneficiaries from \"./components/beneficiary/Beneficiaries\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport ResetPasswordUser from \"./pages/ResetPasswordUser\";\r\nimport Language from \"./pages/Language\";\r\n\r\nconst App = (props) => {\r\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\r\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\r\n  const [sidebarStatic, setSidebarStatic] = useState(true);\r\n  const [sidebarActive, setSidebarActive] = useState(true);\r\n  const [menuActive, setMenuActive] = useState(false);\r\n  const [configActive, setConfigActive] = useState(false);\r\n  const [rightPanelActive, setRightPanelActive] = useState(false);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\r\n  const copyTooltipRef = useRef();\r\n  const location = useLocation();\r\n\r\n  const menu = getOpcionesMenu();\r\n\r\n  let menuClick;\r\n  let rightPanelClick;\r\n  let configClick;\r\n  let searchClick;\r\n  let topbarUserMenuClick;\r\n\r\n  useEffect(() => {\r\n    copyTooltipRef &&\r\n      copyTooltipRef.current &&\r\n      copyTooltipRef.current.updateTargetEvents();\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (staticMenuMobileActive) {\r\n      blockBodyScroll();\r\n    } else {\r\n      unblockBodyScroll();\r\n    }\r\n  }, [staticMenuMobileActive]);\r\n\r\n  useEffect(() => {\r\n    setResetActiveIndex(true);\r\n    setMenuActive(false);\r\n  }, []);\r\n\r\n  const onMenuItemClick = (event) => {\r\n    if (!event.item.items) {\r\n      setResetActiveIndex(true);\r\n      hideOverlayMenu();\r\n    }\r\n    if (!event.item.items && (isSlim() || isHorizontal())) {\r\n      setMenuActive(false);\r\n    }\r\n  };\r\n\r\n  const onMenuClick = (event) => {\r\n    if (menuActive && event.target.className === \"layout-menu-container\") {\r\n      setResetActiveIndex(true);\r\n      setMenuActive(false);\r\n    }\r\n    menuClick = true;\r\n  };\r\n\r\n  const blockBodyScroll = () => {\r\n    if (document.body.classList) {\r\n      document.body.classList.add(\"blocked-scroll\");\r\n    } else {\r\n      document.body.className += \" blocked-scroll\";\r\n    }\r\n  };\r\n\r\n  const unblockBodyScroll = () => {\r\n    if (document.body.classList) {\r\n      document.body.classList.remove(\"blocked-scroll\");\r\n    } else {\r\n      document.body.className = document.body.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n    }\r\n  };\r\n\r\n  const onMenuButtonClick = (event) => {\r\n    menuClick = true;\r\n    setTopbarUserMenuActive(false);\r\n    setRightPanelActive(false);\r\n\r\n    if (isMobile()) {\r\n      setStaticMenuMobileActive(\r\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\r\n      );\r\n      if (staticMenuMobileActive) {\r\n        blockBodyScroll();\r\n      } else {\r\n        unblockBodyScroll();\r\n      }\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const isMobile = () => {\r\n    return window.innerWidth <= 991;\r\n  };\r\n\r\n  const isHorizontal = () => {\r\n    return \"sideBar\" === \"horizontal\";\r\n  };\r\n\r\n  const isSlim = () => {\r\n    return \"sideBar\" === \"slim\";\r\n  };\r\n\r\n  const hideOverlayMenu = () => {\r\n    setStaticMenuMobileActive(false);\r\n    unblockBodyScroll();\r\n  };\r\n\r\n  const onRightPanelClick = () => {\r\n    rightPanelClick = true;\r\n  };\r\n\r\n  const onRightPanelButtonClick = () => {\r\n    setRightPanelActive((prevState) => !prevState);\r\n    rightPanelClick = true;\r\n  };\r\n\r\n  const onTopbarSearchToggle = () => {\r\n    setSearchActive((prevState) => !prevState);\r\n    searchClick = true;\r\n  };\r\n\r\n  const onTopbarSearchClick = () => {\r\n    searchClick = true;\r\n  };\r\n\r\n  const onTopbarUserMenuClick = () => {\r\n    setTopbarUserMenuActive((prevState) => !prevState);\r\n    topbarUserMenuClick = true;\r\n  };\r\n\r\n  const onDocumentClick = () => {\r\n    if (!searchClick && searchActive) {\r\n      setSearchActive(false);\r\n      searchClick = false;\r\n    }\r\n\r\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\r\n      setTopbarUserMenuActive(false);\r\n      topbarUserMenuClick = false;\r\n    }\r\n\r\n    if (!rightPanelClick && rightPanelActive) {\r\n      setRightPanelActive(false);\r\n    }\r\n\r\n    if (!configClick && configActive) {\r\n      setConfigActive(false);\r\n    }\r\n\r\n    if (!menuClick) {\r\n      if (isSlim() || isHorizontal()) {\r\n        setResetActiveIndex(true);\r\n        setMenuActive(false);\r\n      }\r\n\r\n      if (staticMenuMobileActive) {\r\n        hideOverlayMenu();\r\n      }\r\n\r\n      unblockBodyScroll();\r\n    }\r\n\r\n    searchClick = false;\r\n    topbarUserMenuClick = false;\r\n    rightPanelClick = false;\r\n    configClick = false;\r\n    menuClick = false;\r\n  };\r\n\r\n  const onSidebarMouseOver = () => {\r\n    setSidebarActive(!isMobile());\r\n  };\r\n\r\n  const onSidebarMouseLeave = () => {\r\n    setSidebarActive(false);\r\n  };\r\n\r\n  const onToggleMenu = (event) => {\r\n    menuClick = true;\r\n    setSidebarStatic((prevState) => !prevState);\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onRootMenuItemClick = () => {\r\n    setMenuActive((prevMenuActive) => !prevMenuActive);\r\n  };\r\n\r\n  const layoutClassName = classNames(\r\n    \"layout-wrapper\",\r\n    {\r\n      \"layout-sidebar\": \"sidebar\",\r\n      \"layout-static\": \"sidebar\" && sidebarStatic,\r\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\r\n      \"layout-rightpanel-active\": rightPanelActive,\r\n      \"layout-slim\": \"sidebar\" === \"slim\",\r\n      \"layout-mobile-active\": staticMenuMobileActive,\r\n      \"p-input-filled\": \"filled\",\r\n      \"p-ripple-disabled\": false,\r\n    },\r\n    \"layout-menu-light layout-topbar-light\"\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={layoutClassName}\r\n      onClick={onDocumentClick}\r\n      style={{ backgroundColor: \"#F0F0F0\" }}\r\n    >\r\n      <Tooltip\r\n        ref={copyTooltipRef}\r\n        target=\".block-action-copy\"\r\n        position=\"bottom\"\r\n        content=\"Copied to clipboard\"\r\n        event=\"focus\"\r\n      />\r\n\r\n      <AppTopbar\r\n        topbarScheme={\"light\"}\r\n        onRightPanelButtonClick={onRightPanelButtonClick}\r\n        searchActive={searchActive}\r\n        onTopbarSearchToggle={onTopbarSearchToggle}\r\n        onTopbarSearchClick={onTopbarSearchClick}\r\n        topbarUserMenuActive={topbarUserMenuActive}\r\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\r\n        menu={menu}\r\n        menuActive={menuActive}\r\n        onRootMenuItemClick={onRootMenuItemClick}\r\n        mobileMenuActive={staticMenuMobileActive}\r\n        onMenuItemClick={onMenuItemClick}\r\n        menuMode={\"sidebar\"}\r\n        sidebarStatic={sidebarStatic}\r\n        sidebarActive={sidebarActive}\r\n        onSidebarMouseOver={onSidebarMouseOver}\r\n        onSidebarMouseLeave={onSidebarMouseLeave}\r\n        onToggleMenu={onToggleMenu}\r\n        onMenuButtonClick={onMenuButtonClick}\r\n        resetActiveIndex={resetActiveIndex}\r\n        onMenuClick={onMenuClick}\r\n      />\r\n\r\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\r\n\r\n      <div className=\"layout-main\">\r\n        <div\r\n          className=\"mgeBG\"\r\n          style={{\r\n            opacity: \"0.3\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            bottom: \"0\",\r\n            right: \"0\",\r\n          }}\r\n        >\r\n          &nbsp;\r\n        </div>\r\n        <div className=\"layout-content\">\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return getDatosUsuario() &&\r\n                getDatosUsuario().opciones &&\r\n                getDatosUsuario().opciones.length > 0 ? (\r\n                <Redirect to={getDatosUsuario().opciones[0].actionOpcion} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              );\r\n            }}\r\n          />\r\n          <Route path=\"/dashboard\" exact component={Dashboard} />\r\n          <Route path=\"/user/:id\" exact component={UserInfo} />\r\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\r\n          <Route\r\n            path=\"/trainingapplicant/:id/:idTraining\"\r\n            exact\r\n            component={TrainingApplicant}\r\n          />\r\n\r\n          <Route path=\"/users\" exact component={Usuarios} />\r\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\r\n          <Route path=\"/users/:id\" exact component={Usuario} />\r\n          <Route path=\"/resetPassword\" exact component={ResetPasswordUser} />\r\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\r\n          <Route path=\"/language\" exact component={Language} />\r\n\r\n          <Route path=\"/opciones\" exact component={Opciones} />\r\n          <Route path=\"/perfiles\" exact component={Perfiles} />\r\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\r\n\r\n          <Route path=\"/training\" exact component={Courses} />\r\n          <Route path=\"/training/:id\" exact component={Applicants} />\r\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\r\n          <Route path=\"/trainingnew\" exact component={Course} />\r\n\r\n          <Route path=\"/applicants\" exact component={Applicants} />\r\n          <Route\r\n            path=\"/applicants/:id/:idTraining\"\r\n            exact\r\n            component={Applicant}\r\n          />\r\n\r\n          <Route path=\"/classes\" exact component={Classes} />\r\n          <Route path=\"/workplan\" exact component={WorkPlan} />\r\n          <Route\r\n            path=\"/beneficiaries/:operation\"\r\n            exact\r\n            component={Beneficiaries}\r\n          />\r\n          <Route path=\"/finalreport\" exact component={FinalReport} />\r\n          <Route path=\"/certificate\" exact component={Certificate} />\r\n        </div>\r\n\r\n        <AppFooter />\r\n      </div>\r\n      <div className=\"layout-mask modal-in\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import axios from \"axios\"\r\nimport { getAutenticarUrl, getAutorizarUrl, updatePassword, recoveryPassword, validateUserUuid } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    validateResetPassword = ({ datos }) => (axios.post(validateUserUuid(), datos, { headers: { \"Accept-Language\": getCulture() } }))\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class CatalogoService {\r\n    getPaises = () => this.getPorPadre({ catalogo: { catValor: \"CAT_PAISES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catValor: \"CAT_MODALIDAD\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catValor: \"CAT_CURSOS\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catValor: \"CAT_SEXO\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_ENT\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TIP_INF\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_INF\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_REG\" } })\r\n    getEducationLevel = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EDU_LEV\" } })\r\n    getTypePerson = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TYP_PER\" } })\r\n    getRegion = () => this.getPorPadre({ catalogo: { catValor: \"CAT_REGIONS\" } })\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getCulture, getLabel, labels, setCulture } from '../utils/Internationalization'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const visible = true\r\n                const { opciones } = data.listObject[0]\r\n                const opcionesVisible = opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/') >= 0 ? { ...o, visible: false } : { ...o, visible }))\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones: opcionesVisible })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                requests.push(catalogoService.getEducationLevel())\r\n                requests.push(catalogoService.getTypePerson())\r\n                requests.push(catalogoService.getRegion())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject,\r\n                                cursos: results[1].data.listObject,\r\n                                modalidades: results[2].data.listObject,\r\n                                generos: results[3].data.listObject,\r\n                                trainingStatus: results[4].data.listObject,\r\n                                reportType: results[5].data.listObject,\r\n                                reportStatus: results[6].data.listObject,\r\n                                states: results[7].data.listObject,\r\n                                educationLevels: results[8].data.listObject,\r\n                                typePersons: results[9].data.listObject,\r\n                                regions: results[10].data.listObject\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (localStorage.getItem('mgeCulture') === null) setCulture({ culture: usuario.cultura || 'en_US' })\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].perId }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { perId, perNombre } = p\r\n        return (\r\n            <Col key={perId} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {getLabel(labels.login)}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            {/* <Image src={\"./assets/\" + perNombre + \"_1.png\"} preview={false} /> */}\r\n                            <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                                {perNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    {getLabel(labels.welcomeBack)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    {getLabel(labels.loginAccess)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>\r\n                                        {\r\n                                            getLabel(labels.loginAs)\r\n                                        }\r\n                                    </span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label={getLabel(labels.emailLogin)}\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterEmail),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item label={getLabel(labels.passwordLogin)}\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterPassword)\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>\r\n                                                {getLabel(labels.login)}\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>\r\n                                {\r\n                                    getLabel(labels.forgotPassword)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { getCulture, getLabel, labels } from '../utils/Internationalization'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, idInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: idInvitadoPor, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        requests.push(catalogoService.getEducationLevel())\r\n        requests.push(catalogoService.getTypePerson())\r\n        requests.push(catalogoService.getRegion())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject,\r\n                        cursos: results[1].data.listObject,\r\n                        modalidades: results[2].data.listObject,\r\n                        generos: results[3].data.listObject,\r\n                        trainingStatus: results[4].data.listObject,\r\n                        reportType: results[5].data.listObject,\r\n                        reportStatus: results[6].data.listObject,\r\n                        states: results[7].data.listObject,\r\n                        educationLevels: results[8].data.listObject,\r\n                        typePersons: results[9].data.listObject,\r\n                        regions: results[9].data.listObject\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success(getLabel(labels.accountCreatedSuccessfully))\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            cultura: getCulture(),\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        {getLabel(labels.loading)}...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    {getLabel(labels.welcomeMyGreenEnterprise)}\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    {getLabel(labels.completeInformationActiveAccount)}\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label={getLabel(labels.uploadProfilePicture)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.selectProfilePicture)\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >\r\n                                                                            {getLabel(labels.selectPhoto)}\r\n                                                                        </Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label={getLabel(labels.firstName)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.completeFirstName),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label={getLabel(labels.lastName)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.completeLastName),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label={getLabel(labels.sex)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.selectSex),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label={getLabel(labels.dateBirth)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.selectDateBirth),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>{getLabel(labels.idNumber)}</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                {getLabel(labels.uniqueIdentificationCountry)}\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeID),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label={getLabel(labels.country)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.selectCountry),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label={getLabel(labels.city)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeCity),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    {getLabel(labels.countryCode)}\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.selectCountryCode),\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    {getLabel(labels.phoneNumber)}\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completePhoneNumber),\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>\r\n                                                                        {getLabel(labels.currentyWorking)}\r\n                                                                    </>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                {getLabel(labels.completeNameInstitution)}\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeEmail),\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: getLabel(labels.emailNotValid)\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeAdditionalEmail),\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: getLabel(labels.additionalEmailNotValid)\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='password'\r\n                                                            label={getLabel(labels.createYourPassword)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.createYourPassword),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='passwordConfirm'\r\n                                                            label={getLabel(labels.confirmYourPassword)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.confirmYourPassword),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: getLabel(labels.passwordHasMore8Characters),\r\n                                                                    specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                                                                    number: getLabel(labels.passwordHasNumber),\r\n                                                                    capital: getLabel(labels.passwordHasCapitalLetter),\r\n                                                                    match: getLabel(labels.passwordsMatch)\r\n                                                                }}\r\n                                                                onChange={(isValid) => {\r\n                                                                    setValidForm(isValid)\r\n                                                                }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>{getLabel(labels.register)}</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title={getLabel(labels.accountPreviouslyCreated)}\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                {getLabel(labels.login)}\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport { getCulture, getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg(getLabel(labels.passwordSentIndicatedEmail))\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                    {getLabel(labels.login)}\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>\r\n                                    {getLabel(labels.recoverPassword)}\r\n                                </span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item\r\n                                        name='email'\r\n                                        label={getLabel(labels.email)}\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: getLabel(labels.emailNotValid)\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.completeEmail),\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >\r\n                                                {getLabel(labels.recoverPassword)}\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useEffect, useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport AlertWait from \"./AlertWait\"\r\nimport toast from \"react-hot-toast\"\r\nimport { getCulture, getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [validate, setValidate] = useState(true)\r\n    const [isValidating, setIsValidating] = useState(false)\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [isResetting, setIsResetting] = useState(false)\r\n    const [isReset, setIsReset] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const reset = async (values) => {\r\n        setOkMsg(null)\r\n        setIsResetting(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            if (data) {\r\n                setOkMsg(getLabel(labels.passwordSuccessfullyChanged))\r\n                setIsReset(true)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsResetting(false)\r\n        }\r\n    }\r\n\r\n    const validateRequest = async () => {\r\n        setValidate(false)\r\n        setIsValidating(true)\r\n        try {\r\n            const datos = { usuId: id, uuid }\r\n            const { data } = await cuentaService.validateResetPassword({ datos })\r\n            if (data) setIsValid(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else if (response.status === 409) {\r\n                setIsValid(false)\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        }\r\n        finally {\r\n            setIsValidating(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validate) validateRequest()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                <Row justify='center'>\r\n                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n\r\n                                {\r\n                                    isValidating ?\r\n                                        <>\r\n                                            <AlertWait isLoading={isValidating} message={getLabel(labels.loading)} />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {\r\n                                                isValid ?\r\n                                                    <>\r\n                                                        {\r\n                                                            isReset && okMsg ?\r\n                                                                <>\r\n                                                                    <Result\r\n                                                                        status='success'\r\n                                                                        title={getLabel(labels.passwordResetSuccessfully)}\r\n                                                                        subTitle={okMsg}\r\n                                                                        extra={\r\n                                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                                onClick={() => {\r\n                                                                                    navigate.push('/login')\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                {getLabel(labels.login)}\r\n                                                                            </Button>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>\r\n                                                                        {getLabel(labels.resetPassword)}\r\n                                                                    </span></Divider>\r\n                                                                    <Form\r\n                                                                        layout={'vertical'}\r\n                                                                        onFinish={reset}\r\n                                                                    >\r\n                                                                        <Form.Item\r\n                                                                            name='password'\r\n                                                                            label={getLabel(labels.newPassword)}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: getLabel(labels.completeNewPassword),\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item\r\n                                                                            name='passwordConfirm'\r\n                                                                            label={getLabel(labels.confirmNewPassword)}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: getLabel(labels.confirmNewPassword),\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item>\r\n                                                                            <PasswordChecklist\r\n                                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                                minLength={8}\r\n                                                                                value={password}\r\n                                                                                valueAgain={passwordConfirm}\r\n                                                                                messages={{\r\n                                                                                    minLength: getLabel(labels.passwordHasMore8Characters),\r\n                                                                                    specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                                                                                    number: getLabel(labels.passwordHasNumber),\r\n                                                                                    capital: getLabel(labels.passwordHasCapitalLetter),\r\n                                                                                    match: getLabel(labels.passwordsMatch),\r\n                                                                                }}\r\n                                                                                onChange={(isValid) => { }}\r\n                                                                            />\r\n                                                                        </Form.Item>\r\n                                                                        <div style={{\r\n                                                                            paddingTop: '10px'\r\n                                                                        }}>\r\n                                                                            <Form.Item>\r\n                                                                                <Button\r\n                                                                                    type='primary'\r\n                                                                                    htmlType='submit'\r\n                                                                                    loading={isResetting}\r\n                                                                                    disabled={isResetting}\r\n                                                                                    block>\r\n                                                                                    {\r\n                                                                                        isResetting ? getLabel(labels.resettingPassword) : getLabel(labels.resetPassword)\r\n                                                                                    }\r\n                                                                                </Button>\r\n                                                                            </Form.Item>\r\n                                                                        </div>\r\n                                                                    </Form>\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <Result\r\n                                                        status='404'\r\n                                                        title={getLabel(labels.pageNotExist)}\r\n                                                        subTitle={getLabel(labels.pageVisitedNotExist)}\r\n                                                        extra={\r\n                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/login')\r\n                                                                }}\r\n                                                            >\r\n                                                                {getLabel(labels.login)}\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                            }\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row >\r\n            </Layout >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from \"react\";\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport RecuperarPassword from \"./pages/RecuperarPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nexport const ctx = React.createContext();\n\nconst AppWrapper = (props) => {\n  let location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  const [colorScheme, setColorScheme] = useState(\"light\");\n\n  switch (props.location.pathname) {\n    case \"/login\":\n      return (\n        <Route\n          path=\"/login\"\n          render={() => <Login colorScheme={colorScheme} />}\n        />\n      );\n    case \"/signup\":\n      return (\n        <Route\n          path=\"/signup\"\n          render={() => <Signup colorScheme={colorScheme} />}\n        />\n      );\n    case \"/recover\":\n      return (\n        <Route\n          path=\"/recover\"\n          render={() => <RecuperarPassword colorScheme={colorScheme} />}\n        />\n      );\n    case \"/reset\":\n      return (\n        <Route\n          path=\"/reset\"\n          render={() => <ResetPassword colorScheme={colorScheme} />}\n        />\n      );\n    default:\n      return <App setColorScheme={setColorScheme} />;\n  }\n};\n\nexport default withRouter(AppWrapper);\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}