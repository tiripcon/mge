{"version":3,"sources":["utils/Internationalization.jsx","AppMenu.js","utils/Utils.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/RestorePassword.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","pages/AlertWait.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CountryTrainingService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","service/InformService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","service/BeneficiaryService.jsx","service/CertificateService.jsx","components/beneficiary/Beneficiary.jsx","components/beneficiary/Beneficiaries.jsx","components/usuario/RestorePasswordUser.jsx","pages/ResetPasswordUser.jsx","components/cuenta/LanguagePreferences.jsx","pages/Language.jsx","App.js","service/CuentaService.jsx","service/CatalogoService.jsx","pages/Login.jsx","pages/Signup.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","AppWrapper.js","index.js"],"names":["getCulture","domainCulture","window","location","hostname","indexOf","localStorage","getItem","JSON","parse","culture","setCulture","c","setItem","stringify","labels","welcomeBack","loginAccess","emailLogin","passwordLogin","login","enterEmail","enterPassword","emailNotValid","forgotPassword","recoverPassword","email","completeEmail","resourceNotAvailable","resetPassword","view","edit","errorOcurred","trainings","training","refresh","newTraining","onlyInactive","loading","courses","applicants","searchExpression","search","name","country","attendance","workPlan","finalReport","certificate","actions","registrationDate","evidences","download","reviewDate","observation","comments","sureApproveThe","sureRejectThe","yesApprove","yesReject","approve","reject","expires","attendanceSaved","emailSent","emailSendFailed","information","rol","applicant","invitedBy","firstName","lastName","sex","dateBirth","city","countryCode","phoneNumber","idNumber","currentyWorking","additionalEmail","progress","sendInvitationEmail","thenEmail","alreadyExists","successfullyCreated","successfullyAdded","successfullyRemoved","successfullySaved","successfullyDeleted","successfullyUpdated","couldNotSendEmail","emailSentSuccessfully","addCountryCourseApplicant","publishSuccesfully","saveDraft","surePublishTraining","yesPublish","publish","idTraining","completeID","region","selectRegion","language","selectLanguage","selectCountry","trainingName","completeTrainingName","modality","selectModality","startDate","selectStartDate","endDate","selectEndDate","selectCourses","applicantsEmails","pressEnterAddEmail","addApplicants","notPossibleAddApplicant","myAccount","signOut","accountUpdatedSuccessfully","uploadFailed","uploadProfilePicture","selectPhoto","completeFirstName","completeLastName","selectSex","selectDateBirth","uniqueIdentificationCountry","completeCity","selectCountryCode","completePhoneNumber","completeNameInstitution","ifYesCompleteNameInstitution","completeAdditionalEmail","additionalEmailNotValid","state","selectState","pleaseWait","passwordResetSuccessfully","completePassword","password","newPassword","confirmNewPassword","completeNewPassword","resetting","passwordHasMore8Characters","passwordHasSpecialCharacters","passwordHasNumber","passwordHasCapitalLetter","passwordsMatch","uploadYourWorkplan","file","selectFile","uploading","sending","send","uploadSuccessfully","workplanTemplate","languagePreferences","seePreferredLanguage","back","languagePreferencesSaved","ok","reset","save","accept","yes","no","cancel","minimumBeneficiaries","beneficiaryTitle","beneficiariesTitle","deleteBeneficiaryTitle","reConfirmDeleteBeneficiary","sendBeneficiaryListTitle","sendBeneficiaryListConfirm","beneficiarySuccessfullyRemoved","beneficiarySuccessfullyUpdated","certificateSentSuccessfully","certificateSendFailed","certificateGeneratedSuccessfully","newBeneficiary","jobTitle","isWorking","company","instructionLevel","totalPersons","sureDeleteBeneficiary","registryOperation","qualificationOperation","oneApprovedWorkplanRegisterBeneficiaries","sendWorkplan","oneApprovedFinalReportQualifyBeneficiaries","sendFinalReport","completeInstructionLevel","saving","companyID","completeCompanyID","completeCompany","completeJobTitle","totalCollaborators","completeTotalCollaborators","men","women","numberMen","numberWomen","uploadFinalReport","copyEvidenceLink","url","evidenceSendedSuccessfully","finalReportTemplate","thereMustLeast","registeredBeneficiariesUploadFinalReport","registerBeneficiaries","seeYourCertificateFinalReportBeneficiary","sendListBeneficiaries","users","trainerOfTrainers","trainer","sessionExpired","trainingsNotFound","backHome","notEnrolled","usersManagement","new","userUpdatedSuccessfully","user","userCreatedSuccessfully","createYourPassword","confirmYourPassword","profile","selectProfile","profilesManagement","level","active","inactive","profileSavedSuccessfully","profileDeletedSuccessfully","sureDeleteProfiles","delete","deleting","sureDeleteProfile","option","options","of","resultsFound","filtered","sureDownloadUsersReport","sureDownloadBeneficiariesReport","passwordSentIndicatedEmail","passwordSuccessfullyChanged","resettingPassword","pageNotExist","pageVisitedNotExist","sendNotification","accountCreatedSuccessfully","welcomeMyGreenEnterprise","selectProfilePicture","completeInformationActiveAccount","register","accountPreviouslyCreated","uploadSignature","signature","signatureUploaded","signatureAlreadyUploaded","contents","id","label","getLabel","filter","l","AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","element","classList","remove","replace","RegExp","split","join","isMobile","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","getDatosUsuario","opciones","getCatalogos","getOpciones","opcion","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getOpcionesMenu","informs","w","infTipo","catValor","infEstado","opcionesSubOpciones","undefined","getTypeContent","fileName","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perNombre","push","gutter","removeItem","AppFooter","display","AppRightPanel","AxiosInstance","navigate","axiosInstance","axios","create","headers","interceptors","request","use","config","token","toast","error","Promise","response","status","apiURL","getCatalogosPorPadreUrl","downloadUsersReport","updateTraining","downloadInformByName","downloadCertificateByUuid","downloadBeneficiariesReport","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","put","set","patch","upLoadPhoto","datos","getLessPostulants","getUsersListByProfile","getTotalUsersByProfile","Paragraph","Typography","RestorePassword","isReseting","closeResetPassword","setPassword","validForm","setValidForm","setSendNotification","strong","layout","initialValues","onFinish","Item","rules","required","message","Password","onChange","minLength","messages","specialChar","number","capital","isValid","valuePropName","defaultChecked","checked","fieldNames","showSearch","email2","htmlType","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setUser","setError","documento","setDocumento","setEmail","setNombres","estado","setEstado","openResetPassword","setOpenResetPassword","setIsReseting","columnas","title","render","_","imagen","width","dataIndex","direction","responsive","firma","color","codigotel","celular","record","usuId","values","a","md5","data","success","messageText","fetchData","estadoId","listObject","subTitle","extra","span","justify","Title","xs","sm","md","lg","xl","Group","states","s","catId","catNombre","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","rowClassName","placement","onClose","open","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","signatureFile","setSignatureFile","fileList","setFileList","fileSignatureList","setSignatureFileList","onRemove","newFileList","slice","splice","beforeUpload","URL","createObjectURL","propsSignature","update","trabaja","sexoId","sexo","paisId","pais","usuarioActualizado","requests","FormData","append","all","then","results","catch","msgError","newUsuario","fechanac","moment","$d","perfil","align","xxl","multiple","generos","optionFilterProp","paises","p","catDescripcion","srcSet","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","forEach","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","form","opcIcono","PerfilService","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","sureDeletProfile","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","guardar","perfilActualizado","eliminar","AlertWait","showIcon","tableProps","estilos","background","Dashboard","loadTotals","setLoadTotals","setUsers","isLoadingTotals","setIsLoadingTotals","totals","setTotals","setApellidos","setPaises","estados","setEstados","selectedProfiles","setSelectedProfiles","currentDataSource","setCurrentDataSource","isDownloading","setIsDownloading","filters","n","filterMode","onFilter","setProfile","profiles","u","finally","renderTotalExportar","description","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","xhr","blob","Blob","saveAs","downloadReport","valueStyle","fetchDataTotals","totalesCompleto","totales","t","total","reduce","accumulator","currentValue","activos","hoverable","Math","round","precision","prefix","suffix","renderTotal","tip","closeIcon","borderRadius","sorter","TrainingService","getByTraining","getById","pub","trainingService","UserInfo","setTrainings","fetchTrainings","idUsuario","centered","letterSpacing","readOnly","entEstado","entFechaFin","entFechaIni","entId","entNombre","marginBottom","reverse","renderTraining","border","UsuarioNew","passwordConfirm","setPasswordConfirm","insert","cultura","fetchProfiles","valueAgain","match","User","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","setState","setCourses","paddingBottom","entModalidad","numPostulantes","cursoList","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CountryTrainingService","countryTraining","CourseService","course","baseTraining","entCultura","postulantService","countryTrainingService","courseService","Course","formPostulante","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","setStartDate","setEndDate","formCourse","removePostulant","newPostulantsList","idRegion","idModalidad","idEstado","trainingStatus","regions","setFieldValue","mode","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","cursos","resetFields","posEmail","Applicants","setCourse","setApplicants","postulanteList","posEstado","entRegion","criteria","searchCriteria","ciudad","filteredCourse","asistenciaList","asiValor","informeList","curNombre","substr","idCurso","curId","certificadoList","tc","cerEstado","posId","AttendanceService","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","attendanceService","informService","panelStyle","backgroundColor","Applicant","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","downloadInform","column","eviUrl","whiteSpace","TextArea","showCount","maxLength","setInform","reportStatus","danger","renderInform","downloadCertificate","cerUuid","cerNombre","setAttendance","sendRateEmail","informe","idEntrenamiento","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","cerFechaCad","cerId","cerFechaReg","cerRuta","renderCertificate","WorkPlan","setPostulant","setUploading","setSending","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","handleUpload","reportType","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","idInforme","informInserted","newInform","downloadFinalReportTemplate","beneficiarioList","entLimBen","f","Certificate","Classes","Training","loadPostulant","setLoadPostulant","isLoadingCountry","setIsLoadingCountry","isLoadingCourse","setIsLoadingCourse","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","setCountry","fetchCountries","newCourse","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","countries","countryTrainingList","paePais","modTraining","envios","promise","fn","resolve","flag","idPais","onDeselect","paeId","idNombreCurso","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","BeneficiaryService","beneficiary","getByPostulant","val","CertificateService","generate","downloadByUuid","renderPaisValor","Beneficiary","saveBeneficiary","closeBeneficiary","formBeneficiary","editDisabled","educationLevels","beneficiaryService","certificateService","confirm","Modal","Beneficiaries","operation","isOpening","setIsOpening","isLoadingBeneficiaries","setIsLoadingBeneficiaries","beneficiaryC1","setBeneficiaryC1","beneficiaryC2","setBeneficiaryC2","openC1","setOpenC1","openC2","setOpenC2","benId","selectedBeneficiary","setSelectedBeneficiary","openDeleteBeneficiary","setOpenDeleteBeneficiary","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","closeBeneficiaryC1","getBeneficiaryC1","idTipo","benTipo","benPais","idSexo","benSexo","idNivelInt","benNivelInt","saveBeneficiaryC1","time","closeBeneficiaryC2","getBeneficiaryC2","saveBeneficiaryC2","confirmDeleteBeneficiary","delBeneficiary","validateBeneficiary","sendCertificate","idPostulante","sendBeneficiaries","onOk","b","benTrabaja","typePersons","catReferencia","benDocumento","benNombres","benCiudad","benCargo","benNomEmpresa","benNumPer","benValidado","typeLoad","Collapse","confirmLoading","onCancel","RestorePasswordUser","passwordNew","setPasswordNew","passwordNewConfirm","setPasswordNewConfirm","oldpassword","ResetPasswordUser","fetchUser","LanguagePreferences","setValue","renderCulture","Language","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","useLocation","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","onRightPanelClick","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","validateResetPassword","recoveryPassword","updatePassword","CatalogoService","getPaises","getPorPadre","catalogo","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","getEducationLevel","getTypePerson","getRegion","getCatalogo","cuentaService","catalogoService","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","opcionesVisible","mgeCatalogos","statusText","textTransform","renderPerfil","backgroundImage","renderError","messageCode","Signup","decodeURIComponent","uuid","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","invitadopor","fetchCatalogos","registrar","RecuperarPassword","okMsg","setOkMsg","setEmailSent","recuperar","banner","ResetPassword","setValidate","isValidating","setIsValidating","setIsValid","isResetting","setIsResetting","isReset","setIsReset","validateRequest","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9c653d6f.chunk.js","sourcesContent":["export const getCulture = () => {\r\n    const domainCulture = window.location.hostname.indexOf('mygreenenterprise') > 0 ? 'en_US' : 'es_EC'\r\n    return (localStorage.getItem('mgeCulture') && JSON.parse(localStorage.getItem('mgeCulture')).culture) || domainCulture\r\n}\r\nexport const setCulture = (c) => localStorage.setItem('mgeCulture', JSON.stringify(c))\r\nexport const labels = {\r\n    welcomeBack: 'welcomeBack',\r\n    loginAccess: 'loginAccess',\r\n    emailLogin: 'emailLogin',\r\n    passwordLogin: 'passwordLogin',\r\n    login: 'login',\r\n    enterEmail: 'enterEmail',\r\n    enterPassword: 'enterPassword',\r\n    emailNotValid: 'emailNotValid',\r\n    forgotPassword: 'forgotPassword',\r\n    recoverPassword: 'recoverPassword',\r\n    email: 'email',\r\n    completeEmail: 'completeEmail',\r\n    resourceNotAvailable: 'resourceNotAvailable',\r\n    resetPassword: 'resetPassword',\r\n    view: 'view',\r\n    edit: 'edit',\r\n    errorOcurred: 'errorOcurred',\r\n    trainings: 'trainings',\r\n    training: 'training',\r\n    refresh: 'refresh',\r\n    newTraining: 'newTraining',\r\n    onlyInactive: 'onlyInactive',\r\n    loading: 'loading',\r\n    courses: 'courses',\r\n    applicants: 'applicants',\r\n    searchExpression: 'searchExpression',\r\n    search: 'search',\r\n    name: 'name',\r\n    country: 'country',\r\n    attendance: 'attendance',\r\n    workPlan: 'workPlan',\r\n    finalReport: 'finalReport',\r\n    certificate: 'certificate',\r\n    actions: 'actions',\r\n    registrationDate: 'registrationDate',\r\n    evidences: 'evidences',\r\n    download: 'download',\r\n    reviewDate: 'reviewDate',\r\n    observation: 'observation',\r\n    comments: 'comments',\r\n    sureApproveThe: 'sureApproveThe',\r\n    sureRejectThe: 'sureRejectThe',\r\n    yesApprove: 'yesApprove',\r\n    yesReject: 'yesReject',\r\n    approve: 'approve',\r\n    reject: 'reject',\r\n    expires: 'expires',\r\n    attendanceSaved: 'attendanceSaved',\r\n    emailSent: 'emailSent',\r\n    emailSendFailed: 'emailSendFailed',\r\n    information: 'information',\r\n    rol: 'rol',\r\n    applicant: 'applicant',\r\n    invitedBy: 'invitedBy',\r\n    firstName: 'firstName',\r\n    lastName: 'lastName',\r\n    sex: 'sex',\r\n    dateBirth: 'dateBirth',\r\n    city: 'city',\r\n    countryCode: 'countryCode',\r\n    phoneNumber: 'phoneNumber',\r\n    idNumber: 'idNumber',\r\n    currentyWorking: 'currentyWorking',\r\n    additionalEmail: 'additionalEmail',\r\n    progress: 'progress',\r\n    sendInvitationEmail: 'sendInvitationEmail',\r\n    thenEmail: 'thenEmail',\r\n    alreadyExists: 'alreadyExists',\r\n    successfullyCreated: 'successfullyCreated',\r\n    successfullyAdded: 'successfullyAdded',\r\n    successfullyRemoved: 'successfullyRemoved',\r\n    successfullySaved: 'successfullySaved',\r\n    successfullyDeleted: 'successfullyDeleted',\r\n    successfullyUpdated: 'successfullyUpdated',\r\n    couldNotSendEmail: 'couldNotSendEmail',\r\n    emailSentSuccessfully: 'emailSentSuccessfully',\r\n    addCountryCourseApplicant: 'addCountryCourseApplicant',\r\n    publishSuccesfully: 'publishSuccesfully',\r\n    saveDraft: 'saveDraft',\r\n    surePublishTraining: 'surePublishTraining',\r\n    yesPublish: 'yesPublish',\r\n    publish: 'publish',\r\n    idTraining: 'idTraining',\r\n    completeID: 'completeID',\r\n    region: 'region',\r\n    selectRegion: 'selectRegion',\r\n    language: 'language',\r\n    selectLanguage: 'selectLanguage',\r\n    selectCountry: 'selectCountry',\r\n    trainingName: 'trainingName',\r\n    completeTrainingName: 'completeTrainingName',\r\n    modality: 'modality',\r\n    selectModality: 'selectModality',\r\n    startDate: 'startDate',\r\n    selectStartDate: 'selectStartDate',\r\n    endDate: 'endDate',\r\n    selectEndDate: 'selectEndDate',\r\n    selectCourses: 'selectCourses',\r\n    applicantsEmails: 'applicantsEmails',\r\n    pressEnterAddEmail: 'pressEnterAddEmail',\r\n    addApplicants: 'addApplicants',\r\n    notPossibleAddApplicant: 'notPossibleAddApplicant',\r\n    myAccount: 'myAccount',\r\n    signOut: 'signOut',\r\n    accountUpdatedSuccessfully: 'accountUpdatedSuccessfully',\r\n    uploadFailed: 'uploadFailed',\r\n    uploadProfilePicture: 'uploadProfilePicture',\r\n    selectPhoto: 'selectPhoto',\r\n    completeFirstName: 'completeFirstName',\r\n    completeLastName: 'completeLastName',\r\n    selectSex: 'selectSex',\r\n    selectDateBirth: 'selectDateBirth',\r\n    uniqueIdentificationCountry: 'uniqueIdentificationCountry',\r\n    completeCity: 'completeCity',\r\n    selectCountryCode: 'selectCountryCode',\r\n    completePhoneNumber: 'completePhoneNumber',\r\n    completeNameInstitution: 'completeNameInstitution',\r\n    ifYesCompleteNameInstitution: 'ifYesCompleteNameInstitution',\r\n    completeAdditionalEmail: 'completeAdditionalEmail',\r\n    additionalEmailNotValid: 'additionalEmailNotValid',\r\n    state: 'state',\r\n    selectState: 'selectState',\r\n    pleaseWait: 'pleaseWait',\r\n    passwordResetSuccessfully: 'passwordResetSuccessfully',\r\n    completePassword: 'completePassword',\r\n    password: 'password',\r\n    newPassword: 'newPassword',\r\n    confirmNewPassword: 'confirmNewPassword',\r\n    completeNewPassword: 'completeNewPassword',\r\n    resetting: 'resetting',\r\n    passwordHasMore8Characters: 'passwordHasMore8Characters',\r\n    passwordHasSpecialCharacters: 'passwordHasSpecialCharacters',\r\n    passwordHasNumber: 'passwordHasNumber',\r\n    passwordHasCapitalLetter: 'passwordHasCapitalLetter',\r\n    passwordsMatch: 'passwordsMatch',\r\n    uploadYourWorkplan: 'uploadYourWorkplan',\r\n    file: 'file',\r\n    selectFile: 'selectFile',\r\n    uploading: 'uploading',\r\n    sending: 'sending',\r\n    send: 'send',\r\n    uploadSuccessfully: 'uploadSuccessfully',\r\n    workplanTemplate: 'workplanTemplate',\r\n    languagePreferences: 'languagePreferences',\r\n    seePreferredLanguage: 'seePreferredLanguage',\r\n    back: 'back',\r\n    languagePreferencesSaved: 'languagePreferencesSaved',\r\n    ok: 'ok',\r\n    reset: 'reset',\r\n    save: 'save',\r\n    accept: 'accept',\r\n    yes: 'yes',\r\n    no: 'no',\r\n    cancel: 'cancel',\r\n    minimumBeneficiaries: 'minimumBeneficiaries',\r\n    beneficiaryTitle: 'beneficiaryTitle',\r\n    beneficiariesTitle: 'beneficiariesTitle',\r\n    deleteBeneficiaryTitle: 'deleteBeneficiaryTitle',\r\n    reConfirmDeleteBeneficiary: 'reConfirmDeleteBeneficiary',\r\n    sendBeneficiaryListTitle: 'sendBeneficiaryListTitle',\r\n    sendBeneficiaryListConfirm: 'sendBeneficiaryListConfirm',\r\n    beneficiarySuccessfullyRemoved: 'beneficiarySuccessfullyRemoved',\r\n    beneficiarySuccessfullyUpdated: 'beneficiarySuccessfullyUpdated',\r\n    certificateSentSuccessfully: 'certificateSentSuccessfully',\r\n    certificateSendFailed: 'certificateSendFailed',\r\n    certificateGeneratedSuccessfully: 'certificateGeneratedSuccessfully',\r\n    newBeneficiary: 'newBeneficiary',\r\n    jobTitle: 'jobTitle',\r\n    isWorking: 'isWorking',\r\n    company: 'company',\r\n    instructionLevel: 'instructionLevel',\r\n    totalPersons: 'totalPersons',\r\n    sureDeleteBeneficiary: 'sureDeleteBeneficiary',\r\n    registryOperation: 'registryOperation',\r\n    qualificationOperation: 'qualificationOperation',\r\n    oneApprovedWorkplanRegisterBeneficiaries: 'oneApprovedWorkplanRegisterBeneficiaries',\r\n    sendWorkplan: 'sendWorkplan',\r\n    oneApprovedFinalReportQualifyBeneficiaries: 'oneApprovedFinalReportQualifyBeneficiaries',\r\n    sendFinalReport: 'sendFinalReport',\r\n    completeInstructionLevel: 'completeInstructionLevel',\r\n    saving: 'saving',\r\n    companyID: 'companyID',\r\n    completeCompanyID: 'completeCompanyID',\r\n    completeCompany: 'completeCompany',\r\n    completeJobTitle: 'completeJobTitle',\r\n    totalCollaborators: 'totalCollaborators',\r\n    completeTotalCollaborators: 'completeTotalCollaborators',\r\n    men: 'men',\r\n    women: 'women',\r\n    numberMen: 'numberMen',\r\n    numberWomen: 'numberWomen',\r\n    uploadFinalReport: 'uploadFinalReport',\r\n    copyEvidenceLink: 'copyEvidenceLink',\r\n    url: 'url',\r\n    evidenceSendedSuccessfully: 'evidenceSendedSuccessfully',\r\n    finalReportTemplate: 'finalReportTemplate',\r\n    thereMustLeast: 'thereMustLeast',\r\n    registeredBeneficiariesUploadFinalReport: 'registeredBeneficiariesUploadFinalReport',\r\n    registerBeneficiaries: 'registerBeneficiaries',\r\n    seeYourCertificateFinalReportBeneficiary: 'seeYourCertificateFinalReportBeneficiary',\r\n    sendListBeneficiaries: 'sendListBeneficiaries',\r\n    users: 'users',\r\n    trainerOfTrainers: 'trainerOfTrainers',\r\n    trainer: 'trainer',\r\n    sessionExpired: 'sessionExpired',\r\n    trainingsNotFound: 'trainingsNotFound',\r\n    backHome: 'backHome',\r\n    notEnrolled: 'notEnrolled',\r\n    usersManagement: 'usersManagement',\r\n    new: 'new',\r\n    userUpdatedSuccessfully: 'userUpdatedSuccessfully',\r\n    user: 'user',\r\n    userCreatedSuccessfully: 'userCreatedSuccessfully',\r\n    createYourPassword: 'createYourPassword',\r\n    confirmYourPassword: 'confirmYourPassword',\r\n    profile: 'profile',\r\n    selectProfile: 'selectProfile',\r\n    profilesManagement: 'profilesManagement',\r\n    level: 'level',\r\n    active: 'active',\r\n    inactive: 'inactive',\r\n    profileSavedSuccessfully: 'profileSavedSuccessfully',\r\n    profileDeletedSuccessfully: 'profileDeletedSuccessfully',\r\n    sureDeleteProfiles: 'sureDeleteProfiles',\r\n    delete: 'delete',\r\n    deleting: 'deleting',\r\n    sureDeleteProfile: 'sureDeleteProfile',\r\n    option: 'option',\r\n    options: 'options',\r\n    of: 'of',\r\n    resultsFound: 'resultsFound',\r\n    filtered: 'filtered',\r\n    sureDownloadUsersReport: 'sureDownloadUsersReport',\r\n    sureDownloadBeneficiariesReport: 'sureDownloadBeneficiariesReport',\r\n    passwordSentIndicatedEmail: 'passwordSentIndicatedEmail',\r\n    passwordSuccessfullyChanged: 'passwordSuccessfullyChanged',\r\n    resettingPassword: 'resettingPassword',\r\n    pageNotExist: 'pageNotExist',\r\n    pageVisitedNotExist: 'pageVisitedNotExist',\r\n    sendNotification: 'sendNotification',\r\n    accountCreatedSuccessfully: 'accountCreatedSuccessfully',\r\n    welcomeMyGreenEnterprise: 'welcomeMyGreenEnterprise',\r\n    selectProfilePicture: 'selectProfilePicture',\r\n    completeInformationActiveAccount: 'completeInformationActiveAccount',\r\n    register: 'register',\r\n    accountPreviouslyCreated: 'accountPreviouslyCreated',\r\n    uploadSignature: 'uploadSignature',\r\n    signature: 'signature',\r\n    signatureUploaded: 'signatureUploaded',\r\n    signatureAlreadyUploaded: 'signatureAlreadyUploaded',\r\n}\r\nconst contents = [\r\n    { id: 'welcomeBack', labels: [{ culture: 'en_US', label: 'Welcome back' }, { culture: 'es_EC', label: 'Bienvenido' }] },\r\n    { id: 'loginAccess', labels: [{ culture: 'en_US', label: 'Log in to access your account' }, { culture: 'es_EC', label: 'Ingresa para acceder a tu cuenta' }] },\r\n    { id: 'emailLogin', labels: [{ culture: 'en_US', label: 'Log in with your email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'passwordLogin', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'login', labels: [{ culture: 'en_US', label: 'Log in' }, { culture: 'es_EC', label: 'Ingresar' }] },\r\n    { id: 'enterEmail', labels: [{ culture: 'en_US', label: 'Enter you email' }, { culture: 'es_EC', label: 'Ingresa el correo' }] },\r\n    { id: 'enterPassword', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Ingresa la contraseña' }] },\r\n    { id: 'emailNotValid', labels: [{ culture: 'en_US', label: 'Email is not valid' }, { culture: 'es_EC', label: 'Correo no válido' }] },\r\n    { id: 'forgotPassword', labels: [{ culture: 'en_US', label: 'Forgot your password?' }, { culture: 'es_EC', label: '¿Olvidaste tu contraseña?' }] },\r\n    { id: 'recoverPassword', labels: [{ culture: 'en_US', label: 'Recover password' }, { culture: 'es_EC', label: 'Recuperar Contraseña' }] },\r\n    { id: 'email', labels: [{ culture: 'en_US', label: 'Email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'completeEmail', labels: [{ culture: 'en_US', label: 'Complete your email' }, { culture: 'es_EC', label: 'Completa el correo' }] },\r\n    { id: 'resourceNotAvailable', labels: [{ culture: 'en_US', label: 'The requested resource is not available or cannot be found.' }, { culture: 'es_EC', label: 'El recurso solicitado no está disponible o no existe.' }] },\r\n    { id: 'resetPassword', labels: [{ culture: 'en_US', label: 'Reset password' }, { culture: 'es_EC', label: 'Restablecer contraseña' }] },\r\n    { id: 'view', labels: [{ culture: 'en_US', label: 'View' }, { culture: 'es_EC', label: 'Ver' }] },\r\n    { id: 'edit', labels: [{ culture: 'en_US', label: 'Edit' }, { culture: 'es_EC', label: 'Editar' }] },\r\n    { id: 'errorOcurred', labels: [{ culture: 'en_US', label: 'An error ocurred' }, { culture: 'es_EC', label: 'Ocurrió un error' }] },\r\n    { id: 'trainings', labels: [{ culture: 'en_US', label: 'Trainings' }, { culture: 'es_EC', label: 'Formaciones' }] },\r\n    { id: 'training', labels: [{ culture: 'en_US', label: 'Training' }, { culture: 'es_EC', label: 'Formación' }] },\r\n    { id: 'refresh', labels: [{ culture: 'en_US', label: 'Refresh' }, { culture: 'es_EC', label: 'Actualizar' }] },\r\n    { id: 'newTraining', labels: [{ culture: 'en_US', label: 'New Training' }, { culture: 'es_EC', label: 'Nueva Formación' }] },\r\n    { id: 'onlyInactive', labels: [{ culture: 'en_US', label: 'Inactive only' }, { culture: 'es_EC', label: 'Solo inactivos' }] },\r\n    { id: 'loading', labels: [{ culture: 'en_US', label: 'Loading' }, { culture: 'es_EC', label: 'Cargando' }] },\r\n    { id: 'courses', labels: [{ culture: 'en_US', label: 'Courses' }, { culture: 'es_EC', label: 'Cursos' }] },\r\n    { id: 'applicants', labels: [{ culture: 'en_US', label: 'Applicants' }, { culture: 'es_EC', label: 'Postulantes' }] },\r\n    { id: 'searchExpression', labels: [{ culture: 'en_US', label: 'Search expression' }, { culture: 'es_EC', label: 'Criterio de Búsqueda' }] },\r\n    { id: 'search', labels: [{ culture: 'en_US', label: 'Search' }, { culture: 'es_EC', label: 'Buscar' }] },\r\n    { id: 'name', labels: [{ culture: 'en_US', label: 'Name' }, { culture: 'es_EC', label: 'Nombre' }] },\r\n    { id: 'country', labels: [{ culture: 'en_US', label: 'Country' }, { culture: 'es_EC', label: 'País' }] },\r\n    { id: 'attendance', labels: [{ culture: 'en_US', label: 'Attendance' }, { culture: 'es_EC', label: 'Asistencia' }] },\r\n    { id: 'workPlan', labels: [{ culture: 'en_US', label: 'Work Plan' }, { culture: 'es_EC', label: 'Plan de Trabajo' }] },\r\n    { id: 'finalReport', labels: [{ culture: 'en_US', label: 'Final Report' }, { culture: 'es_EC', label: 'Informe Final' }] },\r\n    { id: 'certificate', labels: [{ culture: 'en_US', label: 'Certificate' }, { culture: 'es_EC', label: 'Certificado' }] },\r\n    { id: 'actions', labels: [{ culture: 'en_US', label: 'Actions' }, { culture: 'es_EC', label: 'Acciones' }] },\r\n    { id: 'registrationDate', labels: [{ culture: 'en_US', label: 'Registration Date' }, { culture: 'es_EC', label: 'Fecha de Registro' }] },\r\n    { id: 'evidences', labels: [{ culture: 'en_US', label: 'Evidences' }, { culture: 'es_EC', label: 'Evidencias' }] },\r\n    { id: 'download', labels: [{ culture: 'en_US', label: 'Download' }, { culture: 'es_EC', label: 'Descargar' }] },\r\n    { id: 'reviewDate', labels: [{ culture: 'en_US', label: 'Review Date' }, { culture: 'es_EC', label: 'Fecha de Revisión' }] },\r\n    { id: 'observation', labels: [{ culture: 'en_US', label: 'Observation' }, { culture: 'es_EC', label: 'Observación' }] },\r\n    { id: 'comments', labels: [{ culture: 'en_US', label: 'Comments' }, { culture: 'es_EC', label: 'Comentarios' }] },\r\n    { id: 'sureApproveThe', labels: [{ culture: 'en_US', label: 'Are you sure to approve the' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas aprobar el' }] },\r\n    { id: 'sureRejectThe', labels: [{ culture: 'en_US', label: 'Are you sure to reject the' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas rechazar el' }] },\r\n    { id: 'yesApprove', labels: [{ culture: 'en_US', label: 'Yes, approve' }, { culture: 'es_EC', label: 'Sí, aprobar' }] },\r\n    { id: 'yesReject', labels: [{ culture: 'en_US', label: 'Yes, reject' }, { culture: 'es_EC', label: 'Sí, rechazar' }] },\r\n    { id: 'approve', labels: [{ culture: 'en_US', label: 'Approve' }, { culture: 'es_EC', label: 'Aprobar' }] },\r\n    { id: 'reject', labels: [{ culture: 'en_US', label: 'Reject' }, { culture: 'es_EC', label: 'Rechazar' }] },\r\n    { id: 'expires', labels: [{ culture: 'en_US', label: 'Expires' }, { culture: 'es_EC', label: 'Vence' }] },\r\n    { id: 'attendanceSaved', labels: [{ culture: 'en_US', label: 'Attendance Successfully Saved' }, { culture: 'es_EC', label: 'Asistencia guardada exitosamente' }] },\r\n    { id: 'emailSent', labels: [{ culture: 'en_US', label: 'Email Sent Successfully' }, { culture: 'es_EC', label: 'Email enviado existosamente' }] },\r\n    { id: 'information', labels: [{ culture: 'en_US', label: 'Information' }, { culture: 'es_EC', label: 'Información' }] },\r\n    { id: 'rol', labels: [{ culture: 'en_US', label: 'Rol' }, { culture: 'es_EC', label: 'Rol' }] },\r\n    { id: 'applicant', labels: [{ culture: 'en_US', label: 'Applicant' }, { culture: 'es_EC', label: 'Postulante' }] },\r\n    { id: 'invitedBy', labels: [{ culture: 'en_US', label: 'Invited by' }, { culture: 'es_EC', label: 'Invitado por' }] },\r\n    { id: 'firstName', labels: [{ culture: 'en_US', label: 'First Name' }, { culture: 'es_EC', label: 'Nombres' }] },\r\n    { id: 'lastName', labels: [{ culture: 'en_US', label: 'Last Name' }, { culture: 'es_EC', label: 'Apellidos' }] },\r\n    { id: 'sex', labels: [{ culture: 'en_US', label: 'Sex' }, { culture: 'es_EC', label: 'Sexo' }] },\r\n    { id: 'dateBirth', labels: [{ culture: 'en_US', label: 'Date Birth' }, { culture: 'es_EC', label: 'Fecha de Nacimiento' }] },\r\n    { id: 'city', labels: [{ culture: 'en_US', label: 'City' }, { culture: 'es_EC', label: 'Ciudad' }] },\r\n    { id: 'countryCode', labels: [{ culture: 'en_US', label: 'Country Code' }, { culture: 'es_EC', label: 'Código de País' }] },\r\n    { id: 'phoneNumber', labels: [{ culture: 'en_US', label: 'Phone Number' }, { culture: 'es_EC', label: 'Número de Teléfono' }] },\r\n    { id: 'idNumber', labels: [{ culture: 'en_US', label: 'ID Number' }, { culture: 'es_EC', label: 'Número de Identificación' }] },\r\n    { id: 'currentyWorking', labels: [{ culture: 'en_US', label: 'Currenty Working' }, { culture: 'es_EC', label: 'Esta trabajando actualmente' }] },\r\n    { id: 'additionalEmail', labels: [{ culture: 'en_US', label: 'Additional Email' }, { culture: 'es_EC', label: 'Correo Adicional' }] },\r\n    { id: 'progress', labels: [{ culture: 'en_US', label: 'Progress' }, { culture: 'es_EC', label: 'Progreso' }] },\r\n    { id: 'sendInvitationEmail', labels: [{ culture: 'en_US', label: 'Send invitation email' }, { culture: 'es_EC', label: 'Enviar el correo electrónico de invitación' }] },\r\n    { id: 'thenEmail', labels: [{ culture: 'en_US', label: 'Then email' }, { culture: 'es_EC', label: 'El correo' }] },\r\n    { id: 'alreadyExists', labels: [{ culture: 'en_US', label: 'already exists' }, { culture: 'es_EC', label: 'ya se encuentra registrado' }] },\r\n    { id: 'successfullyCreated', labels: [{ culture: 'en_US', label: 'succesfully created' }, { culture: 'es_EC', label: 'creado exitosamente' }] },\r\n    { id: 'successfullyAdded', labels: [{ culture: 'en_US', label: 'successfully added' }, { culture: 'es_EC', label: 'agregado exitosamente' }] },\r\n    { id: 'successfullyRemoved', labels: [{ culture: 'en_US', label: 'successfully removed' }, { culture: 'es_EC', label: 'eliminado exitosamente' }] },\r\n    { id: 'successfullySaved', labels: [{ culture: 'en_US', label: 'successfully saved' }, { culture: 'es_EC', label: 'guardado exitosamente' }] },\r\n    { id: 'successfullyDeleted', labels: [{ culture: 'en_US', label: 'successfully deleted' }, { culture: 'es_EC', label: 'eliminado exitosamente' }] },\r\n    { id: 'successfullyUpdated', labels: [{ culture: 'en_US', label: 'successfully updated' }, { culture: 'es_EC', label: 'actualizado exitosamente' }] },\r\n    { id: 'couldNotSendEmail', labels: [{ culture: 'en_US', label: 'Could not send email' }, { culture: 'es_EC', label: 'No se puedo enviar el correo electrónico' }] },\r\n    { id: 'emailSentSuccessfully', labels: [{ culture: 'en_US', label: 'Email sent successfully' }, { culture: 'es_EC', label: 'Correo electrónico enviado existosamente' }] },\r\n    { id: 'addCountryCourseApplicant', labels: [{ culture: 'en_US', label: 'Add at least one country, one course and one applicant' }, { culture: 'es_EC', label: 'Agregue al menos un país, un curso y un postulante' }] },\r\n    { id: 'publishSuccesfully', labels: [{ culture: 'en_US', label: 'publish succesfully' }, { culture: 'es_EC', label: 'publicado exitosamente' }] },\r\n    { id: 'saveDraft', labels: [{ culture: 'en_US', label: 'Save Draft' }, { culture: 'es_EC', label: 'Guardar borrador' }] },\r\n    { id: 'surePublishTraining', labels: [{ culture: 'en_US', label: 'Are you sure to publish the training?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas publicar la formación?' }] },\r\n    { id: 'yesPublish', labels: [{ culture: 'en_US', label: 'Yes, publish' }, { culture: 'es_EC', label: 'Sí, publicar' }] },\r\n    { id: 'publish', labels: [{ culture: 'en_US', label: 'Publish' }, { culture: 'es_EC', label: 'Publicar' }] },\r\n    { id: 'idTraining', labels: [{ culture: 'en_US', label: 'Id Training' }, { culture: 'es_EC', label: 'ID de Formación' }] },\r\n    { id: 'completeID', labels: [{ culture: 'en_US', label: 'Complete ID' }, { culture: 'es_EC', label: 'Complete el ID' }] },\r\n    { id: 'region', labels: [{ culture: 'en_US', label: 'Region' }, { culture: 'es_EC', label: 'Región' }] },\r\n    { id: 'selectRegion', labels: [{ culture: 'en_US', label: 'Select region' }, { culture: 'es_EC', label: 'Seleccione la región' }] },\r\n    { id: 'language', labels: [{ culture: 'en_US', label: 'Language' }, { culture: 'es_EC', label: 'Idioma' }] },\r\n    { id: 'selectLanguage', labels: [{ culture: 'en_US', label: 'Select language' }, { culture: 'es_EC', label: 'Seleccione el idioma' }] },\r\n    { id: 'selectCountry', labels: [{ culture: 'en_US', label: 'Select country' }, { culture: 'es_EC', label: 'Seleccione el país' }] },\r\n    { id: 'trainingName', labels: [{ culture: 'en_US', label: 'Training name' }, { culture: 'es_EC', label: 'Nombre de la formación' }] },\r\n    { id: 'completeTrainingName', labels: [{ culture: 'en_US', label: 'Complete training name' }, { culture: 'es_EC', label: 'Complete el nombre la formación' }] },\r\n    { id: 'modality', labels: [{ culture: 'en_US', label: 'Modality' }, { culture: 'es_EC', label: 'Modalidad' }] },\r\n    { id: 'selectModality', labels: [{ culture: 'en_US', label: 'Select modality' }, { culture: 'es_EC', label: 'Seleccione la modalidad' }] },\r\n    { id: 'startDate', labels: [{ culture: 'en_US', label: 'Start Date' }, { culture: 'es_EC', label: 'Fecha de Inicio' }] },\r\n    { id: 'selectStartDate', labels: [{ culture: 'en_US', label: 'Select start date' }, { culture: 'es_EC', label: 'Seleccione la fecha de inicio' }] },\r\n    { id: 'endDate', labels: [{ culture: 'en_US', label: 'End Date' }, { culture: 'es_EC', label: 'Fecha Final' }] },\r\n    { id: 'selectEndDate', labels: [{ culture: 'en_US', label: 'Select end date' }, { culture: 'es_EC', label: 'Seleccione la fecha final' }] },\r\n    { id: 'selectCourses', labels: [{ culture: 'en_US', label: 'Select courses' }, { culture: 'es_EC', label: 'Seleccione los cursos' }] },\r\n    { id: 'applicantsEmails', labels: [{ culture: 'en_US', label: 'Applicants emails' }, { culture: 'es_EC', label: 'Correos electrónicos de los postulantes' }] },\r\n    { id: 'pressEnterAddEmail', labels: [{ culture: 'en_US', label: 'Press enter to add email' }, { culture: 'es_EC', label: 'Presione enter para agregar el correo electrónico' }] },\r\n    { id: 'addApplicants', labels: [{ culture: 'en_US', label: 'Add applicants' }, { culture: 'es_EC', label: 'Agregue al menos un postulante' }] },\r\n    { id: 'notPossibleAddApplicant', labels: [{ culture: 'en_US', label: 'It was not possible to add the applicant' }, { culture: 'es_EC', label: 'No fue posible agregar el postulante' }] },\r\n    { id: 'myAccount', labels: [{ culture: 'en_US', label: 'My Account' }, { culture: 'es_EC', label: 'Mi Cuenta' }] },\r\n    { id: 'signOut', labels: [{ culture: 'en_US', label: 'Sign out' }, { culture: 'es_EC', label: 'Cerrar sesión' }] },\r\n    { id: 'accountUpdatedSuccessfully', labels: [{ culture: 'en_US', label: 'Account updated successfully' }, { culture: 'es_EC', label: 'Cuenta actualizada exitosamente' }] },\r\n    { id: 'uploadFailed', labels: [{ culture: 'en_US', label: 'Upload failed' }, { culture: 'es_EC', label: 'Carga fallida' }] },\r\n    { id: 'uploadProfilePicture', labels: [{ culture: 'en_US', label: 'Upload your profile picture' }, { culture: 'es_EC', label: 'Sube tu foto de perfil' }] },\r\n    { id: 'selectPhoto', labels: [{ culture: 'en_US', label: 'Select a Photo' }, { culture: 'es_EC', label: 'Seleccione una foto' }] },\r\n    { id: 'completeFirstName', labels: [{ culture: 'en_US', label: 'Complete First Name' }, { culture: 'es_EC', label: 'Complete los nombres' }] },\r\n    { id: 'completeLastName', labels: [{ culture: 'en_US', label: 'Complete Last Name' }, { culture: 'es_EC', label: 'Complete los apellidos' }] },\r\n    { id: 'selectSex', labels: [{ culture: 'en_US', label: 'Select sex' }, { culture: 'es_EC', label: 'Selecciona el sexo' }] },\r\n    { id: 'selectDateBirth', labels: [{ culture: 'en_US', label: 'Select date of birth' }, { culture: 'es_EC', label: 'Selecciona la fecha de nacimiento' }] },\r\n    { id: 'uniqueIdentificationCountry', labels: [{ culture: 'en_US', label: 'This is the unique identification number issued by the country of residence' }, { culture: 'es_EC', label: 'Este es el número de identificación único emitido por el país de residencia' }] },\r\n    { id: 'completeCity', labels: [{ culture: 'en_US', label: 'Complete city' }, { culture: 'es_EC', label: 'Complete la ciudad' }] },\r\n    { id: 'selectCountryCode', labels: [{ culture: 'en_US', label: 'Select country code' }, { culture: 'es_EC', label: 'Seleccione el código de país' }] },\r\n    { id: 'completePhoneNumber', labels: [{ culture: 'en_US', label: 'Complete the phone number' }, { culture: 'es_EC', label: 'Complete el número de teléfono' }] },\r\n    { id: 'completeNameInstitution', labels: [{ culture: 'en_US', label: 'Please write the complete name of the institution' }, { culture: 'es_EC', label: 'Por favor escriba el nombre completo de la institución' }] },\r\n    { id: 'ifYesCompleteNameInstitution', labels: [{ culture: 'en_US', label: 'If yes, please write the complete name of the institution' }, { culture: 'es_EC', label: 'En caso afirmativo, escriba el nombre completo de la institución' }] },\r\n    { id: 'completeAdditionalEmail', labels: [{ culture: 'en_US', label: 'Complete the additional email' }, { culture: 'es_EC', label: 'Complete el correo electrónico adicional' }] },\r\n    { id: 'additionalEmailNotValid', labels: [{ culture: 'en_US', label: 'Additional email is not valid' }, { culture: 'es_EC', label: 'El correo electrónico adicional no es válido' }] },\r\n    { id: 'state', labels: [{ culture: 'en_US', label: 'State' }, { culture: 'es_EC', label: 'Estado' }] },\r\n    { id: 'selectState', labels: [{ culture: 'en_US', label: 'Select state' }, { culture: 'es_EC', label: 'Seleccione el estado' }] },\r\n    { id: 'pleaseWait', labels: [{ culture: 'en_US', label: 'Please Wait' }, { culture: 'es_EC', label: 'Espere por favor' }] },\r\n    { id: 'passwordResetSuccessfully', labels: [{ culture: 'en_US', label: 'Password reset successfully' }, { culture: 'es_EC', label: 'Restablecimiento de contraseña exitoso' }] },\r\n    { id: 'completePassword', labels: [{ culture: 'en_US', label: 'Complete the password' }, { culture: 'es_EC', label: 'Complete la contraseña' }] },\r\n    { id: 'password', labels: [{ culture: 'en_US', label: 'Password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'newPassword', labels: [{ culture: 'en_US', label: 'New password' }, { culture: 'es_EC', label: 'Nueva contraseña' }] },\r\n    { id: 'confirmNewPassword', labels: [{ culture: 'en_US', label: 'Confirm new password' }, { culture: 'es_EC', label: 'Confirme la nueva contraseña' }] },\r\n    { id: 'completeNewPassword', labels: [{ culture: 'en_US', label: 'Complete then new password' }, { culture: 'es_EC', label: 'Complete la nueva contraseña' }] },\r\n    { id: 'resetting', labels: [{ culture: 'en_US', label: 'Resetting' }, { culture: 'es_EC', label: 'Reestableciendo' }] },\r\n    { id: 'passwordHasMore8Characters', labels: [{ culture: 'en_US', label: 'Password has more than 8 characters' }, { culture: 'es_EC', label: 'La contraseña tiene más de 8 caracteres' }] },\r\n    { id: 'passwordHasSpecialCharacters', labels: [{ culture: 'en_US', label: 'Password has special characters' }, { culture: 'es_EC', label: 'La contraseña tiene caracteres especiales' }] },\r\n    { id: 'passwordHasNumber', labels: [{ culture: 'en_US', label: 'Password has a number' }, { culture: 'es_EC', label: 'La contraseña tiene un número' }] },\r\n    { id: 'passwordHasCapitalLetter', labels: [{ culture: 'en_US', label: 'Password has a capital letter' }, { culture: 'es_EC', label: 'La contraseña tiene una letra mayúscula' }] },\r\n    { id: 'passwordsMatch', labels: [{ culture: 'en_US', label: 'Passwords match' }, { culture: 'es_EC', label: 'Las contraseñas coinciden' }] },\r\n    { id: 'uploadYourWorkplan', labels: [{ culture: 'en_US', label: 'Upload your workplan' }, { culture: 'es_EC', label: 'Sube tu plan de trabajo' }] },\r\n    { id: 'file', labels: [{ culture: 'en_US', label: 'File' }, { culture: 'es_EC', label: 'Archivo' }] },\r\n    { id: 'selectFile', labels: [{ culture: 'en_US', label: 'Select File' }, { culture: 'es_EC', label: 'Seleccionar archivo' }] },\r\n    { id: 'uploading', labels: [{ culture: 'en_US', label: 'Uploading' }, { culture: 'es_EC', label: 'Subiendo' }] },\r\n    { id: 'sending', labels: [{ culture: 'en_US', label: 'Sending' }, { culture: 'es_EC', label: 'Enviando' }] },\r\n    { id: 'send', labels: [{ culture: 'en_US', label: 'Send' }, { culture: 'es_EC', label: 'Enviar' }] },\r\n    { id: 'uploadSuccessfully', labels: [{ culture: 'en_US', label: 'Upload successfully' }, { culture: 'es_EC', label: 'Carga realizada exitosamente' }] },\r\n    { id: 'workplanTemplate', labels: [{ culture: 'en_US', label: 'Workplan Template' }, { culture: 'es_EC', label: 'Plantilla de plan de trabajo' }] },\r\n    { id: 'languagePreferences', labels: [{ culture: 'en_US', label: 'Language preferences' }, { culture: 'es_EC', label: 'Preferencias de idioma' }] },\r\n    { id: 'seePreferredLanguage', labels: [{ culture: 'en_US', label: 'See buttons, titles, and other texts on webapp in your preferred language' }, { culture: 'es_EC', label: 'Vea botones, títulos y otros textos en la aplicación web en su idioma preferido' }] },\r\n    { id: 'back', labels: [{ culture: 'en_US', label: 'Back' }, { culture: 'es_EC', label: 'Regresar' }] },\r\n    { id: 'languagePreferencesSaved', labels: [{ culture: 'en_US', label: 'Language preferences saved successfully' }, { culture: 'es_EC', label: 'Las preferencias de idioma se guardaron correctamente' }] },\r\n    { id: 'ok', labels: [{ culture: 'en_US', label: 'OK' }, { culture: 'es_EC', label: 'OK' }] },\r\n    { id: 'reset', labels: [{ culture: 'en_US', label: 'Reset' }, { culture: 'es_EC', label: 'Limpiar' }] },\r\n    { id: 'save', labels: [{ culture: 'en_US', label: 'Save' }, { culture: 'es_EC', label: 'Guardar' }] },\r\n    { id: 'accept', labels: [{ culture: 'en_US', label: 'Accept' }, { culture: 'es_EC', label: 'Aceptar' }] },\r\n    { id: 'yes', labels: [{ culture: 'en_US', label: 'Yes' }, { culture: 'es_EC', label: 'Si' }] },\r\n    { id: 'no', labels: [{ culture: 'en_US', label: 'No' }, { culture: 'es_EC', label: 'No' }] },\r\n    { id: 'cancel', labels: [{ culture: 'en_US', label: 'Cancel' }, { culture: 'es_EC', label: 'Cancelar' }] },\r\n    { id: 'minimumBeneficiaries', labels: [{ culture: 'en_US', label: 'Minimum Beneficiaries' }, { culture: 'es_EC', label: 'Mínimo de Beneficiarios' }] },\r\n    { id: 'beneficiaryTitle', labels: [{ culture: 'en_US', label: 'Beneficiary' }, { culture: 'es_EC', label: 'Beneficiario' }] },\r\n    { id: 'beneficiariesTitle', labels: [{ culture: 'en_US', label: 'Beneficiaries' }, { culture: 'es_EC', label: 'Beneficiarios' }] },\r\n    { id: 'deleteBeneficiaryTitle', labels: [{ culture: 'en_US', label: 'Delete Beneficiary' }, { culture: 'es_EC', label: 'Eliminar Beneficiario' }] },\r\n    { id: 'reConfirmDeleteBeneficiary', labels: [{ culture: 'en_US', label: 'If you do not meet the minimum number of registered beneficiaries, your final report will be disabled. Continue anyway?' }, { culture: 'es_EC', label: 'Si no cumple con el mínimo de beneficiarios registrados se deshabilitara su informe final. ¿Continuar de todos modos?' }] },\r\n    { id: 'sendBeneficiaryListTitle', labels: [{ culture: 'en_US', label: 'Send Beneciary List' }, { culture: 'es_EC', label: 'Enviar Lista de Beneciarios' }] },\r\n    { id: 'sendBeneficiaryListConfirm', labels: [{ culture: 'en_US', label: 'Check beneficiary qualification/participation. Once sent, further editing will not be allowed and the certificate will be generated. Are you sure you want to send the list of beneficiaries?' }, { culture: 'es_EC', label: 'Verifique la calificación/participación de los beneficiarios. Una vez enviado, no se permitirán más ediciones y se generará el certificado. ¿Estás seguro de que quieres enviar la lista de beneficiarios?' }] },\r\n    { id: 'beneficiarySuccessfullyRemoved', labels: [{ culture: 'en_US', label: 'Beneficiary successfully removed' }, { culture: 'es_EC', label: 'Beneficiario eliminado con éxito' }] },\r\n    { id: 'beneficiarySuccessfullyUpdated', labels: [{ culture: 'en_US', label: 'Beneficiary successfully updated' }, { culture: 'es_EC', label: 'Beneficiario actualizado exitosamente' }] },\r\n    { id: 'certificateSentSuccessfully', labels: [{ culture: 'en_US', label: 'Certificate sent successfully' }, { culture: 'es_EC', label: 'Certificado enviado exitosamente' }] },\r\n    { id: 'certificateSendFailed', labels: [{ culture: 'en_US', label: 'Certificate send failed' }, { culture: 'es_EC', label: 'Error al enviar el certificado' }] },\r\n    { id: 'certificateGeneratedSuccessfully', labels: [{ culture: 'en_US', label: 'Certificate generated successfully' }, { culture: 'es_EC', label: 'Certificado generado exitosamente' }] },\r\n    { id: 'newBeneficiary', labels: [{ culture: 'en_US', label: 'New Beneficiary' }, { culture: 'es_EC', label: 'Nuevo beneficiario' }] },\r\n    { id: 'jobTitle', labels: [{ culture: 'en_US', label: 'Position' }, { culture: 'es_EC', label: 'Cargo' }] },\r\n    { id: 'isWorking', labels: [{ culture: 'en_US', label: 'Is Working' }, { culture: 'es_EC', label: 'Está trabajando' }] },\r\n    { id: 'company', labels: [{ culture: 'en_US', label: 'Enterprise Name' }, { culture: 'es_EC', label: 'Empresa' }] },\r\n    { id: 'instructionLevel', labels: [{ culture: 'en_US', label: 'Instruction Level' }, { culture: 'es_EC', label: 'Nivel de instrucción' }] },\r\n    { id: 'totalPersons', labels: [{ culture: 'en_US', label: 'Nro. of Employees' }, { culture: 'es_EC', label: 'Nro. de Empleados' }] },\r\n    { id: 'actions', labels: [{ culture: 'en_US', label: 'Actions' }, { culture: 'es_EC', label: 'Acciones' }] },\r\n    { id: 'sureDeleteBeneficiary', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the beneficiary?' }, { culture: 'es_EC', label: '¿Estás seguro de que deseas eliminar al beneficiario?' }] },\r\n    { id: 'registryOperation', labels: [{ culture: 'en_US', label: 'Beneficiary Registry' }, { culture: 'es_EC', label: 'Registro de Beneficiarios' }] },\r\n    { id: 'qualificationOperation', labels: [{ culture: 'en_US', label: 'Beneficiary Qualification' }, { culture: 'es_EC', label: 'Calificación de Beneficiarios' }] },\r\n    { id: 'oneApprovedWorkplanRegisterBeneficiaries', labels: [{ culture: 'en_US', label: 'There must be at least one approved workplan to register beneficiaries' }, { culture: 'es_EC', label: 'Debe haber al menos un plan de trabajo aprobado para registrar beneficiarios' }] },\r\n    { id: 'sendWorkplan', labels: [{ culture: 'en_US', label: 'Send Workplan' }, { culture: 'es_EC', label: 'Enviar plan de trabajo' }] },\r\n    { id: 'oneApprovedFinalReportQualifyBeneficiaries', labels: [{ culture: 'en_US', label: 'There must be at least one approved final report to qualify beneficiaries' }, { culture: 'es_EC', label: 'Debe haber al menos un informe final aprobado para calificar a los beneficiarios' }] },\r\n    { id: 'sendFinalReport', labels: [{ culture: 'en_US', label: 'Send Final Report' }, { culture: 'es_EC', label: 'Enviar informe final' }] },\r\n    { id: 'completeInstructionLevel', labels: [{ culture: 'en_US', label: 'Complete the Instruction Level' }, { culture: 'es_EC', label: 'Completa el nivel de instrucción' }] },\r\n    { id: 'saving', labels: [{ culture: 'en_US', label: 'Saving' }, { culture: 'es_EC', label: 'Guardando' }] },\r\n    { id: 'companyID', labels: [{ culture: 'en_US', label: 'Enterprise ID' }, { culture: 'es_EC', label: 'ID de Empresa' }] },\r\n    { id: 'completeCompanyID', labels: [{ culture: 'en_US', label: 'Complete the Enterprise ID' }, { culture: 'es_EC', label: 'Complete el ID de Empresa' }] },\r\n    { id: 'completeCompany', labels: [{ culture: 'en_US', label: 'Complete the Enterprise Name' }, { culture: 'es_EC', label: 'Complete la Empresa' }] },\r\n    { id: 'completeJobTitle', labels: [{ culture: 'en_US', label: 'Complete the position' }, { culture: 'es_EC', label: 'Complete el cargo' }] },\r\n    { id: 'totalCollaborators', labels: [{ culture: 'en_US', label: 'Nro. of Employees' }, { culture: 'es_EC', label: 'Nro. de Empleados' }] },\r\n    { id: 'completeTotalCollaborators', labels: [{ culture: 'en_US', label: 'Complete Nro. of Employees' }, { culture: 'es_EC', label: 'Completa el Nro. de Empleados' }] },\r\n    { id: 'men', labels: [{ culture: 'en_US', label: 'Men' }, { culture: 'es_EC', label: 'Hombres' }] },\r\n    { id: 'women', labels: [{ culture: 'en_US', label: 'Women' }, { culture: 'es_EC', label: 'Mujeres' }] },\r\n    { id: 'numberMen', labels: [{ culture: 'en_US', label: 'Number of men' }, { culture: 'es_EC', label: 'Número de hombres' }] },\r\n    { id: 'numberWomen', labels: [{ culture: 'en_US', label: 'Number of women' }, { culture: 'es_EC', label: 'Número de mujeres' }] },\r\n    { id: 'uploadFinalReport', labels: [{ culture: 'en_US', label: 'Upload your final report' }, { culture: 'es_EC', label: 'Sube tu informe final' }] },\r\n    { id: 'copyEvidenceLink', labels: [{ culture: 'en_US', label: 'Copy evidence link' }, { culture: 'es_EC', label: 'Copiar enlace de evidencia' }] },\r\n    { id: 'url', labels: [{ culture: 'en_US', label: 'URL' }, { culture: 'es_EC', label: 'URL' }] },\r\n    { id: 'evidenceSendedSuccessfully', labels: [{ culture: 'en_US', label: 'Evidence sended successfully' }, { culture: 'es_EC', label: 'Evidencia enviada exitosamente' }] },\r\n    { id: 'finalReportTemplate', labels: [{ culture: 'en_US', label: 'Final Report Template' }, { culture: 'es_EC', label: 'Plantilla de informe final' }] },\r\n    { id: 'thereMustLeast', labels: [{ culture: 'en_US', label: 'There must be at least' }, { culture: 'es_EC', label: 'Debe haber al menos' }] },\r\n    { id: 'registeredBeneficiariesUploadFinalReport', labels: [{ culture: 'en_US', label: 'registered beneficiaries to upload your final report' }, { culture: 'es_EC', label: 'beneficiarios registrados para cargar su informe final' }] },\r\n    { id: 'registerBeneficiaries', labels: [{ culture: 'en_US', label: 'Register Beneficiaries' }, { culture: 'es_EC', label: 'Registrar beneficiarios' }] },\r\n    { id: 'seeYourCertificateFinalReportBeneficiary', labels: [{ culture: 'en_US', label: 'You will see your certificate once your final report is approved and you submit your beneficiary list' }, { culture: 'es_EC', label: 'Verá su certificado una vez que se apruebe su informe final y envíe su lista de beneficiarios.' }] },\r\n    { id: 'sendListBeneficiaries', labels: [{ culture: 'en_US', label: 'Send list of beneficiaries' }, { culture: 'es_EC', label: 'Enviar lista de beneficiarios' }] },\r\n    { id: 'users', labels: [{ culture: 'en_US', label: 'Users' }, { culture: 'es_EC', label: 'Usuarios' }] },\r\n    { id: 'trainerOfTrainers', labels: [{ culture: 'en_US', label: 'Trainer of trainers' }, { culture: 'es_EC', label: 'Formador de formadores' }] },\r\n    { id: 'trainer', labels: [{ culture: 'en_US', label: 'Trainer' }, { culture: 'es_EC', label: 'Formador' }] },\r\n    { id: 'sessionExpired', labels: [{ culture: 'en_US', label: 'The session has expired. Please log in again.' }, { culture: 'es_EC', label: 'La sesión ha expirado. Por favor inicia sesión nuevamente.' }] },\r\n    { id: 'trainingsNotFound', labels: [{ culture: 'en_US', label: 'Trainings not found' }, { culture: 'es_EC', label: 'Formaciones no encontradas' }] },\r\n    { id: 'backHome', labels: [{ culture: 'en_US', label: 'Back to home' }, { culture: 'es_EC', label: 'Volver al inicio' }] },\r\n    { id: 'notEnrolled', labels: [{ culture: 'en_US', label: 'Not enrolled' }, { culture: 'es_EC', label: 'No enrolado' }] },\r\n    { id: 'usersManagement', labels: [{ culture: 'en_US', label: 'Users Management' }, { culture: 'es_EC', label: 'Gestión de Usuarios' }] },\r\n    { id: 'new', labels: [{ culture: 'en_US', label: 'New' }, { culture: 'es_EC', label: 'Nuevo' }] },\r\n    { id: 'userUpdatedSuccessfully', labels: [{ culture: 'en_US', label: 'User updated successfully' }, { culture: 'es_EC', label: 'Usuario actualizado exitosamente' }] },\r\n    { id: 'user', labels: [{ culture: 'en_US', label: 'User' }, { culture: 'es_EC', label: 'Usuario' }] },\r\n    { id: 'userCreatedSuccessfully', labels: [{ culture: 'en_US', label: 'User created successfully' }, { culture: 'es_EC', label: 'Usuario creado exitosamente' }] },\r\n    { id: 'createYourPassword', labels: [{ culture: 'en_US', label: 'Create password' }, { culture: 'es_EC', label: 'Cree la contraseña' }] },\r\n    { id: 'confirmYourPassword', labels: [{ culture: 'en_US', label: 'Confirm password' }, { culture: 'es_EC', label: 'Confirme la contraseña' }] },\r\n    { id: 'profile', labels: [{ culture: 'en_US', label: 'Profile' }, { culture: 'es_EC', label: 'Perfil' }] },\r\n    { id: 'selectProfile', labels: [{ culture: 'en_US', label: 'Select profile' }, { culture: 'es_EC', label: 'Seleccionar el perfil' }] },\r\n    { id: 'profilesManagement', labels: [{ culture: 'en_US', label: 'Profiles Management' }, { culture: 'es_EC', label: 'Gestión de Perfiles' }] },\r\n    { id: 'level', labels: [{ culture: 'en_US', label: 'Level' }, { culture: 'es_EC', label: 'Nivel' }] },\r\n    { id: 'active', labels: [{ culture: 'en_US', label: 'Active' }, { culture: 'es_EC', label: 'Activo' }] },\r\n    { id: 'inactive', labels: [{ culture: 'en_US', label: 'Inactivo' }, { culture: 'es_EC', label: 'Inactivo' }] },\r\n    { id: 'profileSavedSuccessfully', labels: [{ culture: 'en_US', label: 'Profile saved successfully' }, { culture: 'es_EC', label: 'Perfil guardado exitosamente' }] },\r\n    { id: 'profileDeletedSuccessfully', labels: [{ culture: 'en_US', label: 'Profile deleted successfully' }, { culture: 'es_EC', label: 'Perfil eliminado exitosamente' }] },\r\n    { id: 'sureDeleteProfiles', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the selected profiles?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas eliminar los perfiles seleccionados?' }] },\r\n    { id: 'delete', labels: [{ culture: 'en_US', label: 'Delete' }, { culture: 'es_EC', label: 'Eliminar' }] },\r\n    { id: 'deleting', labels: [{ culture: 'en_US', label: 'Deleting' }, { culture: 'es_EC', label: 'Eliminando' }] },\r\n    { id: 'sureDeleteProfile', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the profile?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas eliminar el perfil?' }] },\r\n    { id: 'option', labels: [{ culture: 'en_US', label: 'Option' }, { culture: 'es_EC', label: 'Opción' }] },\r\n    { id: 'options', labels: [{ culture: 'en_US', label: 'Options' }, { culture: 'es_EC', label: 'Opciones' }] },\r\n    { id: 'of', labels: [{ culture: 'en_US', label: 'of' }, { culture: 'es_EC', label: 'de' }] },\r\n    { id: 'resultsFound', labels: [{ culture: 'en_US', label: 'results found' }, { culture: 'es_EC', label: 'resultados encontrados' }] },\r\n    { id: 'filtered', labels: [{ culture: 'en_US', label: 'Filtered' }, { culture: 'es_EC', label: 'Filtrados' }] },\r\n    { id: 'sureDownloadUsersReport', labels: [{ culture: 'en_US', label: 'Do you want to download the report of all Users?' }, { culture: 'es_EC', label: '¿Desea descargar el reporte de todos los Usuarios?' }] },\r\n    { id: 'sureDownloadBeneficiariesReport', labels: [{ culture: 'en_US', label: 'Do you want to download the report of all Beneficiaries?' }, { culture: 'es_EC', label: '¿Desea descargar el reporte de todos los Beneficiaros?' }] },\r\n    { id: 'passwordSentIndicatedEmail', labels: [{ culture: 'en_US', label: 'Your password was sent to the indicated email. Check your inbox.' }, { culture: 'es_EC', label: 'Su contraseña fue enviada al correo electrónico indicado. Revise tu correo.' }] },\r\n    { id: 'passwordSuccessfullyChanged', labels: [{ culture: 'en_US', label: 'Password has been successfully changed. Please log in again.' }, { culture: 'es_EC', label: 'La contraseña se ha cambiado correctamente. Por favor inicia sesión nuevamente.' }] },\r\n    { id: 'resettingPassword', labels: [{ culture: 'en_US', label: 'Resetting password' }, { culture: 'es_EC', label: 'Reestableciendo contraseña' }] },\r\n    { id: 'pageNotExist', labels: [{ culture: 'en_US', label: 'Page does not exist' }, { culture: 'es_EC', label: 'La página no existe' }] },\r\n    { id: 'pageVisitedNotExist', labels: [{ culture: 'en_US', label: 'Sorry, the page you visited does not exist' }, { culture: 'es_EC', label: 'Lo sentimos, la página que visitaste no existe.' }] },\r\n    { id: 'sendNotification', labels: [{ culture: 'en_US', label: 'Send notification' }, { culture: 'es_EC', label: 'Enviar notificación' }] },\r\n    { id: 'accountCreatedSuccessfully', labels: [{ culture: 'en_US', label: 'Your account has been created successfully. Please log in.' }, { culture: 'es_EC', label: 'Su cuenta ha sido creada con éxito. Por favor Iniciar sesión.' }] },\r\n    { id: 'welcomeMyGreenEnterprise', labels: [{ culture: 'en_US', label: 'Welcome to My Green Enterprise' }, { culture: 'es_EC', label: 'Bienvenido a Mi Negocio Verde' }] },\r\n    { id: 'selectProfilePicture', labels: [{ culture: 'en_US', label: 'Select your profile picture' }, { culture: 'es_EC', label: 'Selecciona tu foto de perfil' }] },\r\n    { id: 'completeInformationActiveAccount', labels: [{ culture: 'en_US', label: 'Complete the following information to active your account' }, { culture: 'es_EC', label: 'Complete la siguiente información para activar su cuenta' }] },\r\n    { id: 'register', labels: [{ culture: 'en_US', label: 'Register' }, { culture: 'es_EC', label: 'Registro' }] },\r\n    { id: 'accountPreviouslyCreated', labels: [{ culture: 'en_US', label: 'Your account has been previously created' }, { culture: 'es_EC', label: 'Tu cuenta ha sido creada previamente' }] },\r\n    { id: 'uploadSignature', labels: [{ culture: 'en_US', label: 'Upload signature' }, { culture: 'es_EC', label: 'Subir firma' }] },\r\n    { id: 'signature', labels: [{ culture: 'en_US', label: 'Firma' }, { culture: 'es_EC', label: 'Signature' }] },\r\n    { id: 'signatureUploaded', labels: [{ culture: 'en_US', label: 'Signature Uploaded' }, { culture: 'es_EC', label: 'Firma Cargada' }] },\r\n    { id: 'signatureAlreadyUploaded', labels: [{ culture: 'en_US', label: 'An uploaded signature already exists' }, { culture: 'es_EC', label: 'Ya existe una firma cargada' }] },\r\n]\r\nexport const getLabel = (id) => contents.filter(c => c.id === id)[0].labels.filter(l => l.culture === getCulture())[0].label || 'Label undefined'\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"primereact/utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Ripple } from \"primereact/ripple\";\nimport { Badge } from \"primereact/badge\";\nimport { getCulture } from \"./utils/Internationalization\";\n\nconst AppSubmenu = (props) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onMenuItemClick = (event, item, index) => {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n      event.preventDefault();\n    }\n\n    if (item.items) {\n      event.preventDefault();\n    }\n\n    if (props.root) {\n      props.onRootMenuItemClick({\n        originalEvent: event,\n      });\n    } else {\n      if (props.menuMode !== \"sidebar\") {\n        const ink = getInk(event.currentTarget);\n        if (ink) {\n          removeClass(ink, \"p-ink-active\");\n        }\n      }\n    }\n\n    setActiveIndex(index === activeIndex ? null : index);\n\n    props.onMenuItemClick({\n      originalEvent: event,\n      item: item,\n    });\n  };\n\n  const onKeyDown = (event, item, index) => {\n    if (event.key === \"Enter\") {\n      onMenuItemClick(event, item, index);\n    }\n  };\n\n  const getInk = (el) => {\n    for (let i = 0; i < el.children.length; i++) {\n      if (\n        typeof el.children[i].className === \"string\" &&\n        el.children[i].className.indexOf(\"p-ink\") !== -1\n      ) {\n        return el.children[i];\n      }\n    }\n    return null;\n  };\n\n  const removeClass = (element, className) => {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  };\n\n  const onMenuItemMouseEnter = (index) => {\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\n      setActiveIndex(index);\n    }\n  };\n\n  const isMobile = () => {\n    return window.innerWidth <= 1025;\n  };\n\n  const isHorizontalOrSlim = useCallback(() => {\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\n  }, [props.menuMode]);\n\n  const visible = (item) => {\n    return typeof item.visible === \"function\"\n      ? item.visible()\n      : item.visible !== false;\n  };\n\n  const getLink = (item, index) => {\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\n    const content = (\n      <>\n        <i className={menuitemIconClassName}></i>\n        <span className=\"layout-menuitem-text\">{item.label}</span>\n        {item.items && (\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\n        )}\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\n        <Ripple />\n      </>\n    );\n    const commonLinkProps = {\n      style: item.style,\n      className: classNames(item.className, \"p-ripple\", {\n        \"p-disabled\": item.disabled,\n      }),\n      target: item.target,\n      onClick: (e) => onMenuItemClick(e, item, index),\n      onMouseEnter: () => onMenuItemMouseEnter(index),\n      onKeyDown: (e) => onKeyDown(e, item, index),\n    };\n\n    if (item.to) {\n      return (\n        <NavLink\n          to={item.to}\n          exact\n          activeClassName=\"active-route\"\n          {...commonLinkProps}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          rel=\"noopener noreferrer\"\n          tabIndex={item.url ? \"\" : 0}\n          {...commonLinkProps}\n        >\n          {content}\n        </a>\n      );\n    }\n  };\n\n  const getItems = () => {\n    const transitionTimeout =\n      isHorizontalOrSlim() && !props.root\n        ? { enter: 1000, exit: 450 }\n        : isHorizontalOrSlim() && !isMobile()\n        ? 0\n        : { enter: 1000, exit: 450 };\n    return props.items.map((item, i) => {\n      if (visible(item)) {\n        const menuitemClassName = classNames({\n          \"layout-root-menuitem\": props.root,\n          \"active-menuitem\": activeIndex === i && !item.disabled,\n        });\n        const link = getLink(item, i);\n        const tooltip = (\n          <div className=\"layout-menu-tooltip\">\n            <div className=\"layout-menu-tooltip-arrow\"></div>\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\n          </div>\n        );\n\n        return (\n          <li\n            key={item.label || i}\n            className={menuitemClassName}\n            role=\"menuitem\"\n          >\n            {link}\n            {tooltip}\n            <CSSTransition\n              classNames=\"p-toggleable-content\"\n              timeout={transitionTimeout}\n              in={activeIndex === i}\n              unmountOnExit\n            >\n              <AppSubmenu\n                items={visible(item) && item.items}\n                menuActive={props.menuActive}\n                menuMode={props.menuMode}\n                parentMenuItemActive={activeIndex === i}\n                onMenuItemClick={props.onMenuItemClick}\n              ></AppSubmenu>\n            </CSSTransition>\n          </li>\n        );\n      }\n\n      return null;\n    });\n  };\n\n  useEffect(() => {\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\n\n  useEffect(() => {\n    if (!props.menuActive && isHorizontalOrSlim()) {\n      setActiveIndex(null);\n    }\n  }, [props.menuActive, isHorizontalOrSlim]);\n\n  if (!props.items) {\n    return null;\n  }\n\n  const items = getItems();\n  return (\n    <ul className={props.className} role=\"menu\">\n      {items}\n    </ul>\n  );\n};\n\nconst AppMenu = (props) => {\n  const onSidebarMouseOver = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      props.onSidebarMouseOver();\n    }\n  };\n\n  const onSidebarMouseLeave = () => {\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\n      setTimeout(() => {\n        props.onSidebarMouseLeave();\n      }, 250);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(\"menu-wrapper\", {\n        \"layout-sidebar-active\": props.sidebarActive,\n      })}\n      onClick={props.onMenuClick}\n      onMouseOver={onSidebarMouseOver}\n      onMouseLeave={onSidebarMouseLeave}\n    >\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <img alt=\"MGE\" src={`./assets/logo_${getCulture()}.png`} />\n      </div>\n\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={props.model}\n          className=\"layout-menu\"\n          menuActive={props.menuActive}\n          onRootMenuItemClick={props.onRootMenuItemClick}\n          mobileMenuActive={props.mobileMenuActive}\n          onMenuItemClick={props.onMenuItemClick}\n          root\n          menuMode={props.menuMode}\n          parentMenuItemActive\n          resetActiveIndex={props.resetActiveIndex}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppMenu;\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nexport const toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nconst getInforms = () => localStorage.getItem('mgeInformList') ? JSON.parse(localStorage.getItem('mgeInformList')) : []\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const informs = getInforms()\r\n    let opciones = getDatosUsuario().opciones || []\r\n    //  Si existe informes se muestran las opciones de beneficiarios para registro y calificación.\r\n    if (informs.length > 1) {\r\n        // Si existe un WP aprobado y no existe un reporte final aprobado se habilita el registro de beneficiarios.\r\n        if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/registry') >= 0 ? { ...o, visible: true } : { ...o }))\r\n        else if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/qualification') >= 0 ? { ...o, visible: true } : { ...o }))\r\n    }\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined && o.visible === true)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getCultures = () => [\r\n    {\r\n        id: 'es_EC',\r\n        value: 'Español'\r\n    },\r\n    {\r\n        id: 'en_US',\r\n        value: 'English'\r\n    }\r\n]\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","import React, { useEffect, useRef } from \"react\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport AppMenu from \"./AppMenu\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport { getDatosUsuario } from \"./utils/Utils\";\r\nimport { getCulture, getLabel, labels } from \"./utils/Internationalization\";\r\n\r\nconst AppTopbar = (props) => {\r\n  const history = useHistory();\r\n  const searchPanelDesktop = useRef(null);\r\n  const searchPanelMobile = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.searchActive) {\r\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\r\n      else searchPanelMobile.current.focus();\r\n    }\r\n  }, [props.searchActive]);\r\n\r\n  const datosUsuario = (e) => {\r\n    history.push(\"/myaccount\");\r\n  };\r\n\r\n  const goResetPassword = () => history.push(\"/resetPassword\");\r\n\r\n  const goLanguagePreferences = () => history.push(\"/language\");\r\n\r\n  const cerrarSesion = (e) => {\r\n    localStorage.removeItem(\"mgeToken\");\r\n    localStorage.removeItem(\"mgeDatosUsuario\");\r\n    localStorage.removeItem(\"mgeInformList\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const logo = {\r\n    fontSize: \"1.5em\",\r\n    padding: 0,\r\n    margin: 0,\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout-topbar\">\r\n      <div className=\"layout-topbar-wrapper\">\r\n        <div className=\"layout-topbar-left\">\r\n          <button\r\n            tabIndex=\"0\"\r\n            className=\"menu-button p-link\"\r\n            onClick={props.onMenuButtonClick}\r\n          >\r\n            <i className=\"pi pi-bars\"></i>\r\n          </button>\r\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\r\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\r\n              {getCulture() === \"en_US\" ? \"MG\" : \"MN\"}\r\n            </span>\r\n            <span className=\"mge mge-bold mge-green\" style={logo}>\r\n            {getCulture() === \"en_US\" ? \"E\" : \"V\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <AppMenu\r\n          menuMode={props.menuMode}\r\n          sidebarActive={props.sidebarActive}\r\n          sidebarStatic={props.sidebarStatic}\r\n          model={props.menu}\r\n          menuActive={props.menuActive}\r\n          onRootMenuItemClick={props.onRootMenuItemClick}\r\n          onMobileMenuActive={props.onMobileMenuActive}\r\n          onMenuItemClick={props.onMenuItemClick}\r\n          onSidebarMouseOver={props.onSidebarMouseOver}\r\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\r\n          onToggleMenu={props.onToggleMenu}\r\n          resetActiveIndex={props.resetActiveIndex}\r\n          onMenuClick={props.onMenuClick}\r\n        />\r\n\r\n        <div className=\"layout-topbar-right\">\r\n          <ul className=\"layout-topbar-actions\">\r\n            <li\r\n              className={classNames(\"topbar-item user-profile\", {\r\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\r\n              })}\r\n            >\r\n              <button\r\n                className=\"p-link\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={props.onTopbarUserMenuClick}\r\n              >\r\n                {getDatosUsuario() && (\r\n                  <Row>\r\n                    <Col\r\n                      style={{\r\n                        paddingRight: \"15px\",\r\n                        paddingTop: \"5px\",\r\n                        textAlign: \"right\",\r\n                        lineHeight: \"1em\",\r\n                      }}\r\n                    >\r\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\r\n                        {`${getDatosUsuario().nombres || \"\"} ${\r\n                          getDatosUsuario().apellidos || \"\"\r\n                        }`}\r\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\r\n                          <>\r\n                            <br />\r\n                            <Typography.Text\r\n                              type=\"secondary\"\r\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\r\n                            >\r\n                              {`${getDatosUsuario().perfiles[0].perNombre}`}\r\n                            </Typography.Text>\r\n                          </>\r\n                        )}\r\n                      </Typography.Text>\r\n                    </Col>\r\n                    <Col>\r\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n              </button>\r\n              <ul className=\"fadeInDown\">\r\n                <li onClick={datosUsuario}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-user-gear\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.myAccount)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={goResetPassword}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-key\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.resetPassword)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={goLanguagePreferences}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-language\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.languagePreferences)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={cerrarSesion}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-right-from-bracket\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.signOut)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTopbar;\r\n","import React from \"react\";\nconst AppFooter = () => {\n  return (\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"footer-bottom\">\n            <h4>\n              <div className=\"mge mge-bold\">\n                <span className=\"mge-lightGreen\">\n                  My\n                  <br />\n                  Green\n                </span>\n                <br />\n                <span className=\"mge-green\">Enterprise</span>\n              </div>\n            </h4>\n            {/* <h6>Copyright Ⓒ {\n              new Date().getFullYear()\n            }</h6> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppFooter;\n","import React from \"react\";\n\nconst AppRightPanel = (props) => {\n  return <></>;\n//   return (\n//     <div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\n//       <div className=\"rightpanel-wrapper\">\n//         <div className=\"rightpanel-section weather-section\">\n//           <div className=\"section-header\">\n//             <h6>Today</h6>\n//           </div>\n//           <div className=\"weather\">\n//             <img\n//               src=\"assets/demo/images/rightpanel/icon-sun.svg\"\n//               alt=\"freya-layout\"\n//             />\n//             <div className=\"weather-info\">\n//               <h6>Ankara, 22 May</h6>\n//               <h1>24º</h1>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n};\n\nexport default AppRightPanel;\n","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport { getCulture, getLabel, labels } from './Internationalization'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers: {\r\n            \"Accept-Language\": getCulture()\r\n        }\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error(getLabel(labels.sessionExpired))\r\n                navigate.push('/login')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                localStorage.removeItem('mgeInformList')\r\n                toast.error(getLabel(labels.sessionExpired))\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    localStorage.removeItem('mgeInformList')\r\n                    toast.error(getLabel(labels.sessionExpired))\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","// SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY EN ARCHIVO package.json\r\n// QA\r\n// \"proxy\": \"http://20.65.110.204:44613\",\r\n// SET NODE_OPTIONS=--openssl-legacy-provider && \r\n// PRODUCCION\r\n// \"proxy\": \"http://20.65.110.204:8080\",\r\n// \"proxy\": \"https://20.65.110.204:8081\",\r\n\r\nconst apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n//SERVICIOS MGE\r\n\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/insertCatalog`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogServiceRest/getCatalogByFilter`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/updateCatalog`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/deleteCatalog`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogServiceRest/getCatalogById`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsListByFather`\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsList`\r\n\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OptionServiceRest/insertOption`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OptionServiceRest/deleteOption`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OptionServiceRest/updateOption`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OptionServiceRest/getOptionsListByFather`\r\nexport const getOpcionesUrl = () => `${apiURL}/OptionServiceRest/getOptionsList`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OptionServiceRest/getOptionById`\r\n\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/ProfileServiceRest/insertProfile`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/ProfileServiceRest/updateProfile`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/ProfileServiceRest/deleteProfile`\r\nexport const getPerfilesUrl = () => `${apiURL}/ProfileServiceRest/getProfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/ProfileServiceRest/getProfileById`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/ProfileOptionServiceRest/getOptionsByProfileList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/insertProfileOption`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOptionServiceRest/updateProfileOption`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/deleteProfileOption`\r\n\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UserServiceRest/getUsersListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UserServiceRest/getUserById`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UserServiceRest/getUsersLessPostulants`\r\nexport const getUsersListByProfile = () => `${apiURL}/UserServiceRest/getUsersListByProfile`\r\nexport const getAutenticarUrl = () => `${apiURL}/UserServiceRest/authenticateUser`\r\nexport const getAutorizarUrl = () => `${apiURL}/UserServiceRest/authorizeUser`\r\nexport const updatePassword = () => `${apiURL}/UserServiceRest/updatePassword`\r\nexport const resetPassword = () => `${apiURL}/UserServiceRest/resetPassword`\r\nexport const recoveryPassword = () => `${apiURL}/UserServiceRest/recoveryPassword`\r\nexport const validateUserUuid = () => `${apiURL}/UserServiceRest/validateUserUuid`\r\nexport const addProfileUser = () => `${apiURL}/UserServiceRest/addProfileUser`\r\nexport const insertUsuario = () => `${apiURL}/UserServiceRest/insertUser`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UserServiceRest/updateUser`\r\nexport const enrollUsuario = () => `${apiURL}/UserServiceRest/enrollPostulant`\r\nexport const deletePerfilUsuario = () => `${apiURL}/UserServiceRest/deletePerfilUsuario`\r\nexport const getUsuariosUrl = () => `${apiURL}/UserServiceRest/getUsersList`\r\nexport const uploadPhotoUser = () => `${apiURL}/UserServiceRest/uploadPhotoUser`\r\nexport const getTotalUsersByProfile = () => `${apiURL}/UserServiceRest/getTotalUsersByProfile`\r\nexport const downloadUsersReport = () => `${apiURL}/UserServiceRest/downloadUsersReport`\r\nexport const uploadSignatureUser = () => `${apiURL}/UserServiceRest/uploadSignatureUser`\r\n\r\nexport const insertTraining = () => `${apiURL}/TrainingServiceRest/insertTraining`\r\nexport const updateTraining = () => `${apiURL}/TrainingServiceRest/updateTraining`\r\nexport const getTrainingById = () => `${apiURL}/TrainingServiceRest/getTrainingById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/TrainingServiceRest/getTrainingByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/TrainingServiceRest/getTrainingList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulantServiceRest/insertPostulant`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulantServiceRest/sendEmailRegistry`\r\nexport const sendEmailEnroll = () => `${apiURL}/PostulantServiceRest/sendEmailEnroll`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulantServiceRest/getPostulantByTraining`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulantServiceRest/getTrainingByPostulant`\r\nexport const deletePostulant = () => `${apiURL}/PostulantServiceRest/deletePostulant`\r\nexport const validatePostulant = () => `${apiURL}/PostulantServiceRest/validatePostulant`\r\n\r\nexport const insertCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/insertCountryTraining`\r\nexport const getCountryTrainingByTraining = () => `${apiURL}/CountryTrainingServiceRest/getCountryTrainingByTraining`\r\nexport const deleteCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/deleteCountryTraining`\r\n\r\nexport const insertCourse = () => `${apiURL}/CourseServiceRest/insertCourse`\r\nexport const getCourseByTraining = () => `${apiURL}/CourseServiceRest/getCoursesByTraining`\r\nexport const deleteCourse = () => `${apiURL}/CourseServiceRest/deleteCourse`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AssistanceServiceRest/insertAssistance`\r\nexport const getAttendanceById = () => `${apiURL}/AssistanceServiceRest/getAssistanceById`\r\nexport const updateAttendance = () => `${apiURL}/AssistanceServiceRest/updateAssistance`\r\n\r\nexport const insertInform = () => `${apiURL}/ReportServiceRest/insertReport`\r\nexport const updateInform = () => `${apiURL}/ReportServiceRest/updateReport`\r\nexport const getInformById = () => `${apiURL}/ReportServiceRest/getReportById`\r\nexport const downloadInformByName = () => `${apiURL}/ReportServiceRest/downloadReportByName`\r\nexport const downloadWorkplan = () => `${apiURL}/ReportServiceRest/downloadWorkPlan`\r\nexport const downloadFinalReport = () => `${apiURL}/ReportServiceRest/downloadFinalReport`\r\nexport const sendEmailLoadInform = () => `${apiURL}/ReportServiceRest/sendEmailLoadReport`\r\nexport const sendEmailRateInform = () => `${apiURL}/ReportServiceRest/sendEmailRateReport`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenceServiceRest/insertEvidence`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificateServiceRest/generateCertificate`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificateServiceRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificateServiceRest/downloadCertificateByName`\r\nexport const downloadCertificateByUuid = () => `${apiURL}/CertificateServiceRest/downloadCertificateByUuid`\r\n\r\nexport const insertBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/insertBeneficiary`\r\nexport const updateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/updateBeneficiary`\r\nexport const getBeneficiaryById = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiaryById`\r\nexport const getBeneficiariesByPostulant = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiariesByPostulant`\r\nexport const deleteBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/deleteBeneficiary`\r\nexport const validateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/validateBeneficiary`\r\nexport const downloadBeneficiariesReport = () => `${apiURL}/BeneficiaryServiceRest/downloadBeneficiariesReport`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, resetPassword, uploadPhotoUser, getTotalUsersByProfile, getUsersListByProfile, downloadUsersReport, uploadSignatureUser } from \"./../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    uploadSignature = (props) => {\r\n        const { navigate, datos } = props\r\n        return AxiosInstance(navigate).put(uploadSignatureUser(), datos)\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n    getUsersListByProfile = (props) => {\r\n        const { navigate, profile } = props\r\n        return AxiosInstance(navigate).post(getUsersListByProfile(), profile)\r\n    }\r\n    getTotalUsersByProfile = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getTotalUsersByProfile())\r\n    }\r\n    resetPassword = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(resetPassword(), usuario)\r\n    }\r\n    downloadUsersReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(downloadUsersReport())\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Checkbox, Form, Input, Select, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePassword = ({ user, resetPassword, isReseting, closeResetPassword }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [sendNotification, setSendNotification] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user, sendNotification }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label='Usuario'\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label={getLabel(labels.password)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completePassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\"]}\r\n                    minLength={8}\r\n                    value={password}\r\n                    messages={{\r\n                        minLength: getLabel(labels.passwordHasMore8Characters),\r\n                        specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                        number: getLabel(labels.passwordHasNumber),\r\n                        capital: getLabel(labels.passwordHasCapitalLetter),\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Form.Item\r\n                    name='sendNotification'\r\n                    valuePropName='checked'\r\n                >\r\n                    <Checkbox defaultChecked={false} onChange={e => setSendNotification(e.target.checked)}>\r\n                        {getLabel(labels.sendNotification)}\r\n                    </Checkbox>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='email'\r\n                    label={getLabel(labels.email)}\r\n                    rules={[\r\n                        {\r\n                            required: sendNotification,\r\n                            message: getLabel(labels.completeEmail)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        fieldNames={{\r\n                            value: 'id',\r\n                            label: 'value'\r\n                        }}\r\n                        showSearch\r\n                        options={[\r\n                            {\r\n                                id: user.email,\r\n                                value: user.email\r\n                            },\r\n                            {\r\n                                id: user.email2,\r\n                                value: user.email2\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n                <Space>\r\n                    <Button onClick={closeResetPassword}\r\n                        disabled={isReseting}\r\n                    >\r\n                        {getLabel(labels.cancel)}\r\n                    </Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? getLabel(labels.resetting) : getLabel(labels.resetPassword)\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePassword","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space, Tooltip, Drawer, Tag } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport RestorePassword from './RestorePassword'\r\nimport md5 from 'md5'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const [openResetPassword, setOpenResetPassword] = useState(false)\r\n  const [isReseting, setIsReseting] = useState(false)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  }\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n      title: getLabel(labels.firstName),\r\n      dataIndex: 'nombres',\r\n      render: (_, r) =>\r\n        <Space direction='horizontal'>\r\n          <span>{r.nombres} {r.apellidos}</span>\r\n          <span className=' mgeKey'>\r\n            {\r\n              (\r\n                isReseting && <anticons.LoadingOutlined />\r\n              ) ||\r\n              <Tooltip\r\n                title={getLabel(labels.resetPassword)}\r\n                onClick={\r\n                  () => {\r\n                    setIsReseting(true)\r\n                    setUser(null)\r\n                    setTimeout(() => {\r\n                      setIsReseting(false)\r\n                      setUser(r)\r\n                      setOpenResetPassword(true)\r\n                    }, 250)\r\n                  }\r\n                }\r\n              >\r\n                <i\r\n                  style={{ cursor: 'pointer' }}\r\n                  className=\"fa-solid fa-key\"></i>\r\n              </Tooltip>\r\n            }\r\n          </span>\r\n        </Space>\r\n    },\r\n    {\r\n      title: getLabel(labels.idNumber),\r\n      dataIndex: 'documento',\r\n      responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.email),\r\n      dataIndex: 'email',\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.signatureUploaded),\r\n      dataIndex: 'firma',\r\n      render: (_, { firma }) => firma === true ? <Tag color=\"#108ee9\">{getLabel(labels.yes)}</Tag> : <Tag color=\"#faad14\">{getLabel(labels.no)}</Tag>,\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.phoneNumber),\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.actions),\r\n      render: (_, record) => <Button type='primary' href={`/#/users/${record.usuId}`}>{getLabel(labels.view)}</Button>\r\n    }\r\n  ]\r\n\r\n  const resetPassword = async (values) => {\r\n    setIsReseting(true)\r\n    const usuario = {\r\n      usuId: values.usuId,\r\n      password: md5(values.password),\r\n      ...(values.sendNotification && { email: values.email })\r\n    }\r\n    try {\r\n      const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n      if (data)\r\n        toast.success(getLabel(labels.passwordResetSuccessfully))\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsReseting(false)\r\n      closeResetPassword()\r\n    }\r\n  }\r\n\r\n  const closeResetPassword = () => {\r\n    setOpenResetPassword(false)\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    setUsuarios([])\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {getLabel(labels.usersManagement)}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.idNumber)}>\r\n              <Input type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.firstName)}>\r\n              <Input type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.email)}>\r\n              <Input type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.state)}>\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio key={s.catId} value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>{getLabel(labels.new)}</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>{getLabel(labels.search)}</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n        rowClassName='mgeChangePassword'\r\n      />\r\n      <Drawer title={getLabel(labels.resetPassword)} placement=\"right\" onClose={closeResetPassword} open={openResetPassword}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={closeResetPassword}\r\n              disabled={isLoading}\r\n            >{getLabel(labels.cancel)}</Button>\r\n          </Space>\r\n        }\r\n      >\r\n        {\r\n          user && <RestorePassword user={user} resetPassword={resetPassword} isReseting={isReseting} closeResetPassword={closeResetPassword} />\r\n        }\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n  const [signatureFile, setSignatureFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [fileSignatureList, setSignatureFileList] = useState([]);\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const propsSignature = {\r\n    onRemove: (file) => {\r\n      const index = fileSignatureList.indexOf(file);\r\n      const newFileList = fileSignatureList.slice();\r\n      newFileList.splice(index, 1);\r\n      setSignatureFileList(newFileList);\r\n      setSignatureFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setSignatureFileList([...fileSignatureList, file]);\r\n      setSignatureFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileSignatureList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  // const handleUpload = async ({ usuId }) => {\r\n  //   const datos = new FormData();\r\n  //   datos.append('file', fileList[0])\r\n  //   datos.append('usuId', usuId)\r\n  //   try {\r\n  //     const { data } = await usuarioService.upLoadPhoto({ datos })\r\n  //     if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n  //       toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n  //     }\r\n  //   } catch (_) {\r\n  //     toast.error(getLabel(labels.uploadFailed))\r\n  //   } finally {\r\n  //     setIsSaving(false)\r\n  //     setFileList([])\r\n  //   }\r\n  // }\r\n\r\n  // const handleUploadSignature = async ({ usuId }) => {\r\n  //   const datos = new FormData();\r\n  //   datos.append('file', fileSignatureList[0])\r\n  //   datos.append('usuId', usuId)\r\n  //   try {\r\n  //     const { data } = await usuarioService.uploadSignature({ datos })\r\n  //     if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n  //       toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n  //     }\r\n  //   } catch (_) {\r\n  //     toast.error(getLabel(labels.uploadFailed))\r\n  //   } finally {\r\n  //     setIsSaving(false)\r\n  //     setSignatureFileList([])\r\n  //   }\r\n  // }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0 || fileSignatureList.length > 0) {\r\n\r\n        const requests = []\r\n\r\n        let datos = new FormData();\r\n\r\n        if (fileList.length > 0) {\r\n          datos.append('file', fileList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.upLoadPhoto({ datos }))\r\n        }\r\n\r\n        datos = new FormData();\r\n        if (fileSignatureList.length > 0) {\r\n          datos.append('file', fileSignatureList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.uploadSignature({ navigate, datos }))\r\n        }\r\n\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              if (results.length > 0) {\r\n                setIsSaving(false)\r\n                toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n              }\r\n            })\r\n            .catch(error => {\r\n              setIsSaving(false)\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              setError(msgError)\r\n            })\r\n        }\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d),\r\n          perfil: usuario.perfiles[0].perNombre\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {getLabel(labels.user)}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={getLabel(labels.uploadProfilePicture)}\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >{getLabel(labels.selectPhoto)}</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label={getLabel(labels.idNumber)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeID),\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label={getLabel(labels.firstName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeFirstName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label={getLabel(labels.lastName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeLastName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label={getLabel(labels.sex)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectSex),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label={getLabel(labels.dateBirth)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectDateBirth),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.idNumber)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>{getLabel(labels.uniqueIdentificationCountry)}</>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeID),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label={getLabel(labels.country)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountry),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.countryCode)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountryCode),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.phoneNumber)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completePhoneNumber),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.currentyWorking)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>{getLabel(labels.completeNameInstitution)}</>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label={getLabel(labels.email)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.emailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label={getLabel(labels.additionalEmail)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeAdditionalEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.additionalEmailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='perfil'\r\n                      label={getLabel(labels.profile)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectProfile),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label={getLabel(labels.state)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectState),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={8} xxl={4}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={\r\n                        <Typography.Paragraph>\r\n                          {\r\n                            getLabel(labels.uploadSignature)\r\n                          }\r\n                          {\r\n                            usuario.firma === true ? <Typography.Text type='secondary' strong><br />{getLabel(labels.signatureAlreadyUploaded)}</Typography.Text> : <></>\r\n                          }\r\n                        </Typography.Paragraph>\r\n                      }\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            signatureFile && <Image src={signatureFile} width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsSignature}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileSignatureList.length > 0\r\n                              }\r\n                            >{getLabel(labels.selectPhoto)}</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >{getLabel(labels.back)}</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving}>{getLabel(labels.save)}</Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport OpcionService from './../../service/OpcionService'\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1).map(o => (\r\n              {\r\n                title: o.opcNombre,\r\n                key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`,\r\n                children: o.opcHijos ? o.opcHijos.map(o => (\r\n                  {\r\n                    title: o.opcNombre,\r\n                    key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`\r\n                  }\r\n                )) : []\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: getLabel(labels.name),\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: getLabel(labels.level),\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: getLabel(labels.state),\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? getLabel(labels.active) : getLabel(labels.inactive)} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject.map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success(getLabel(labels.profileSavedSuccessfully))\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(getLabel(labels.errorOcurred), `${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success(getLabel(labels.profileDeletedSuccessfully))\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {getLabel(labels.profilesManagement)}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                {getLabel(labels.new)}\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title={getLabel(labels.sureDeleteProfiles)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>{getLabel(labels.refresh)}</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.name)}>\r\n                <Input id=\"perNombre\" name=\"perNombre\" type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.level)}>\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.state)}>\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? getLabel(labels.active) : getLabel(labels.inactive)\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? getLabel(labels.saving) : getLabel(labels.save)}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title={getLabel(labels.sureDeletProfile)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`${getLabel(labels.option)} ${perfilOpcionActualizado.pfoOpcId.opcNombre} ${getLabel(labels.successfullyUpdated)}`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1)\r\n              .map(o => (\r\n                {\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n                }\r\n              ))\r\n            // .map(o => (\r\n            //   {\r\n            //     key: `${o.opcId}`,\r\n            //     opcNombre: o.opcNombre,\r\n            //     ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n            //     children: o.opcHijos.map(o => ({\r\n            //       key: `${o.opcId}`,\r\n            //       opcNombre: o.opcNombre,\r\n            //       ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0]\r\n            //     }))\r\n            //   }\r\n            // ))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoadingOpciones(false)\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success(getLabel(labels.profileSavedSuccessfully))\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success(getLabel(labels.profileDeletedSuccessfully))\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {getLabel(labels.profile)} {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.name)}>\r\n                  <Input id=\"perNombre\" name=\"perNombre\" type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.level)}>\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.state)}>\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? getLabel(labels.active) : getLabel(labels.inactive)\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>{getLabel(labels.options)}</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? getLabel(labels.saving) : getLabel(labels.save)}\r\n                    </Button>\r\n                    <Popconfirm title={getLabel(labels.sureDeleteProfile)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin, Typography } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading, message } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col style={{ textAlign: 'center' }}>\r\n                                <Spin size='large'></Spin>\r\n                                {\r\n                                    message && <Typography.Paragraph>\r\n                                        {message}\r\n                                    </Typography.Paragraph>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    message: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Form, Spin, Tooltip, Tag, Popconfirm } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\n\r\nconst estilos = [\r\n    { background: '#54873C' },\r\n    { background: '#70B450' },\r\n    { background: '#385A28' },\r\n    { background: '#636466' },\r\n    { background: '#70B450' },\r\n    { background: '#54873C' },\r\n    { background: '#385A28' },\r\n]\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadTotals, setLoadTotals] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const [isLoadingTotals, setIsLoadingTotals] = useState(false)\r\n    const [totals, setTotals] = useState(null)\r\n    const [nombres, setNombres] = useState([])\r\n    const [apellidos, setApellidos] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [estados, setEstados] = useState([])\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [selectedProfiles, setSelectedProfiles] = useState([])\r\n    const [currentDataSource, setCurrentDataSource] = useState(null)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const columnas = [\r\n        {\r\n            title: '',\r\n            render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n        },\r\n        {\r\n            title: getLabel(labels.firstName),\r\n            dataIndex: 'nombres',\r\n            filters: nombres.map(n => ({\r\n                value: n,\r\n                text: n\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { nombres }) => nombres === value,\r\n            render: (_, r) => `${r.nombres}`\r\n        },\r\n        {\r\n            title: getLabel(labels.lastName),\r\n            dataIndex: 'apellidos',\r\n            filters: apellidos.map(a => ({\r\n                value: a,\r\n                text: a\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { apellidos }) => apellidos === value,\r\n            render: (_, r) => `${r.apellidos}`\r\n        },\r\n        {\r\n            title: getLabel(labels.country),\r\n            dataIndex: 'pais',\r\n            filters: paises.map(p => ({\r\n                value: p.catId,\r\n                text: <><img\r\n                    src={`https://flagcdn.com/32x24/${p.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${p.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${p.catDescripcion.toLowerCase()}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={p.catDescripcion} />&nbsp;{p.catNombre}</>\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { pais }) => pais.catId === value,\r\n            render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n                <Tooltip title={pais.catDescripcion}>\r\n                    <img\r\n                        src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                        srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                        width=\"32\"\r\n                        height=\"24\"\r\n                        alt={pais.catDescripcion}></img>\r\n                </Tooltip>\r\n            </div>,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: <div style={{ textAlign: 'center' }}>\r\n                {getLabel(labels.state)}\r\n            </div>,\r\n            dataIndex: 'estado',\r\n            filters: estados.map(p => ({\r\n                value: p.catId,\r\n                text: p.catNombre\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { estado }) => estado.catId === value,\r\n            render: (_, { estado }) => <div style={{ textAlign: 'center' }\r\n            }>\r\n                {estado.catNombre}\r\n            </div >,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: <div style={{ textAlign: 'center' }}>\r\n                {getLabel(labels.profile)}\r\n            </div>,\r\n            dataIndex: 'role',\r\n            filters: perfiles.map(p => ({\r\n                value: p.perId,\r\n                text: p.perNombre\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { perfiles }) => perfiles[0].perId === value,\r\n            render: (_, { perfiles }) => <div style={{ textAlign: 'center' }\r\n            }>\r\n                {perfiles[0].perNombre}\r\n            </div >,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: getLabel(labels.actions),\r\n            render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>\r\n                {getLabel(labels.view)}\r\n            </Button>\r\n        }\r\n    ]\r\n\r\n    const setProfile = (profile) => {\r\n        let profiles = []\r\n        if (selectedProfiles.filter(p => p.perId === profile.perId).length < 1)\r\n            profiles = [...selectedProfiles, profile]\r\n        else\r\n            profiles = selectedProfiles.filter(p => p.perId !== profile.perId)\r\n        setSelectedProfiles(profiles)\r\n        const requests = []\r\n        profiles.forEach(profile => {\r\n            requests.push(usuarioService.getUsersListByProfile({ navigate, profile }))\r\n        })\r\n        if (requests.length > 0) {\r\n            setIsLoading(true)\r\n            setCurrentDataSource(null)\r\n            setUsers([])\r\n            setPerfiles([])\r\n            Promise.all(requests)\r\n                .then((results) => {\r\n                    setIsLoading(false)\r\n                    if (results.length > 0) {\r\n                        let n = []\r\n                        let a = []\r\n                        let c = []\r\n                        let s = []\r\n                        let p = []\r\n                        let u = []\r\n                        results.forEach(r => {\r\n                            const { config } = r\r\n                            const profile = JSON.parse(config.data)\r\n                            const perfiles = [profile]\r\n                            const usuarios = r.data.listObject.map(u => ({ ...u, perfiles }))\r\n                            usuarios.forEach(u => {\r\n                                if (n.filter(p => p === u.nombres).length < 1)\r\n                                    n = [...n, u.nombres]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (a.filter(p => p === u.apellidos).length < 1)\r\n                                    a = [...a, u.apellidos]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (c.filter(p => p.catId === u.pais.catId).length < 1)\r\n                                    c = [...c, u.pais]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (s.filter(s => s.catId === u.estado.catId).length < 1)\r\n                                    s = [...s, u.estado]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (p.filter(p => p.perId === u.perfiles[0].perId).length < 1)\r\n                                    p = [...p, u.perfiles[0]]\r\n                            })\r\n                            usuarios.forEach(usuario => {\r\n                                if (u.filter(u => u.usuId === usuario.usuId).length < 1)\r\n                                    u = [...u, usuario]\r\n                            })\r\n                        })\r\n                        setNombres(n)\r\n                        setApellidos(a)\r\n                        setPaises(c)\r\n                        setEstados(s)\r\n                        setPerfiles(p)\r\n                        setUsers(u)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    const { response } = error\r\n                    const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                    toast.error(msgError)\r\n                })\r\n                .finally(() => {\r\n                    setIsLoading(false)\r\n                })\r\n        } else {\r\n            fetchData()\r\n        }\r\n    }\r\n\r\n    const renderTotal = ({ id, name, total, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={8} md={8} lg={8} xl={8} xxl={8}\r\n        >\r\n            <Card\r\n                {...props}\r\n                onClick={\r\n                    () => setProfile({ perId: id, perNombre: name, total })\r\n                }\r\n            >\r\n                <Statistic\r\n                    {...data}\r\n                    valueStyle={{\r\n                        color: '#ffffff',\r\n                    }}\r\n                />\r\n                {description}\r\n            </Card>\r\n        </Col>\r\n\r\n    const downloadReport = ({ id, name }) => {\r\n        const fileName = `${name}.xlsx`\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: id === 0 ? apiURLs.downloadBeneficiariesReport() : apiURLs.downloadUsersReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const renderTotalExportar = ({ id, name, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={8} md={8} lg={8} xl={8} xxl={8}\r\n        >\r\n            <Popconfirm\r\n                title={id === 0 ? getLabel(labels.sureDownloadBeneficiariesReport) : getLabel(labels.sureDownloadUsersReport)}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.no)}\r\n                onConfirm={\r\n                    () =>\r\n                        downloadReport({ id, name })\r\n                }\r\n                okButtonProps={{\r\n                    loading: isDownloading\r\n                }}\r\n            >\r\n                <Card\r\n                    {...props}\r\n                >\r\n                    <Statistic\r\n                        {...data}\r\n                        valueStyle={{\r\n                            color: '#ffffff',\r\n                        }}\r\n                    />\r\n                    {description}\r\n                </Card>\r\n            </Popconfirm>\r\n        </Col>\r\n\r\n    const fetchDataTotals = async () => {\r\n        setLoadTotals(false)\r\n        setIsLoadingTotals(true)\r\n        try {\r\n            const { data } = await usuarioService.getTotalUsersByProfile({ navigate })\r\n            if (data) {\r\n                const totalesCompleto = data.listObject\r\n                const totales = totalesCompleto.filter(t => t.perNombre.indexOf('ADMIN') < 0 && t.perNombre.indexOf('BENEFI') < 0)\r\n                let profiles = []\r\n                totales.forEach(t => {\r\n                    if (profiles.filter(p => p.perId === t.perId).length < 1) {\r\n                        const initialValue = 0;\r\n                        const initialValueActives = 0;\r\n                        profiles = [...profiles,\r\n                        {\r\n                            perId: t.perId,\r\n                            perNombre: t.perNombre,\r\n                            total: totalesCompleto.filter(a => a.perId === t.perId).reduce(\r\n                                (accumulator, currentValue) => accumulator + currentValue.total,\r\n                                initialValue,\r\n                            ),\r\n                            activos: totalesCompleto.filter(a => a.perId === t.perId && a.estado === getCatalogos().states.filter(s => s.catValor === 'ACTIVO' || s.catValor === 'ACTIVE')[0].catId).reduce(\r\n                                (accumulator, currentValue) => accumulator + currentValue.total,\r\n                                initialValueActives,\r\n                            ) || 0\r\n                        }\r\n                        ]\r\n                    }\r\n                })\r\n                const initialValue = 0;\r\n                setTotals(\r\n                    [...profiles,\r\n                    totalesCompleto.filter(t => t.perNombre.indexOf('BENEFI') >= 0)[0],\r\n                    {\r\n                        \"perId\": 999,\r\n                        \"perNombre\": getLabel(labels.users).toUpperCase(),\r\n                        \"total\": totalesCompleto.filter(t => t.perNombre.indexOf('BENEFI') < 0).reduce(\r\n                            (accumulator, currentValue) => accumulator + currentValue.total,\r\n                            initialValue,\r\n                        ) || 0 || 0\r\n                    }]\r\n                )\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingTotals(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setSelectedProfiles([])\r\n        setCurrentDataSource(null)\r\n        setPerfiles([])\r\n        setUsers([])\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject\r\n                let n = []\r\n                let a = []\r\n                let c = []\r\n                let s = []\r\n                let p = []\r\n                usuarios.forEach(u => {\r\n                    if (n.filter(p => p.nombres === u.nombres).length < 1)\r\n                        n = [...n, u.nombres]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (a.filter(p => p.apellidos === u.apellidos).length < 1)\r\n                        a = [...a, u.apellidos]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (c.filter(p => p.catId === u.pais.catId).length < 1)\r\n                        c = [...c, u.pais]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (s.filter(s => s.catId === u.estado.catId).length < 1)\r\n                        s = [...s, u.estado]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (p.filter(p => p.perId === u.perfiles[0].perId).length < 1)\r\n                        p = [...p, u.perfiles[0]]\r\n                })\r\n                setNombres(n)\r\n                setApellidos(a)\r\n                setPaises(c)\r\n                setEstados(s)\r\n                setPerfiles(p)\r\n                setUsers(usuarios)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n        if (loadTotals) fetchDataTotals()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoadingTotals ?\r\n                    <AlertWait isLoading={isLoadingTotals} message={getLabel(labels.loading)} />\r\n                    :\r\n                    totals && <Row gutter={[15, 15]}>\r\n                        {\r\n                            totals && totals.filter(t => t.perId !== 0 && t.perId !== 999).map((t, index) => (\r\n                                {\r\n                                    id: t.perId,\r\n                                    name: t.perNombre,\r\n                                    total: t.total,\r\n                                    props: {\r\n                                        bordered: true,\r\n                                        hoverable: true,\r\n                                        style: {\r\n                                            height: '100%'\r\n                                            , color: '#f0f0f0'\r\n                                            , ...estilos[index]\r\n                                        }\r\n                                    },\r\n                                    data: {\r\n                                        title: <Typography.Text style={{ color: '#ffffff' }}>{t.perNombre}</Typography.Text>,\r\n                                        value: t.perId !== 0 && t.perId !== 999 ? Math.round(t.activos * 100.00 / t.total, 1) : t.total,\r\n                                        precision: 0,\r\n                                        prefix: <anticons.UserOutlined />,\r\n                                        suffix: t.perId !== 0 && t.perId !== 999 && '%'\r\n                                    },\r\n                                    description: t.perId !== 0 && t.perId !== 999 && <>{t.activos} {getLabel(labels.of)} {t.total} {getLabel(labels.users)}</>\r\n                                }\r\n                            )).map(s => renderTotal(s))\r\n                        }\r\n                        {\r\n                            totals && totals.filter(t => t.perId === 0 || t.perId === 999).map((t, index) => (\r\n                                {\r\n                                    id: t.perId,\r\n                                    name: t.perNombre,\r\n                                    total: t.total,\r\n                                    props: {\r\n                                        bordered: true,\r\n                                        hoverable: true,\r\n                                        style: {\r\n                                            height: '100%'\r\n                                            , color: '#f0f0f0'\r\n                                            , ...estilos[index]\r\n                                        }\r\n                                    },\r\n                                    data: {\r\n                                        title: <Typography.Text style={{ color: '#ffffff' }}>{t.perNombre}</Typography.Text>,\r\n                                        value: t.perId !== 0 && t.perId !== 999 ? Math.round(t.activos * 100.00 / t.total, 1) : t.total,\r\n                                        precision: 0,\r\n                                        prefix: <anticons.UserOutlined />,\r\n                                        suffix: t.perId !== 0 && t.perId !== 999 && '%'\r\n                                    },\r\n                                    description: t.perId !== 0 && t.perId !== 999 && <>{t.activos} {getLabel(labels.of)} {t.total} {getLabel(labels.users)}</>\r\n                                }\r\n                            )).map(s => renderTotalExportar(s))\r\n                        }\r\n                    </Row>\r\n            }\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                                loading={isLoading || isDownloading}\r\n                            >\r\n                                {getLabel(labels.refresh)}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row >\r\n                    :\r\n                    <Row>\r\n                        {\r\n                            selectedProfiles &&\r\n                            <Col span={24}>\r\n                                <Row gutter={[15, 15]}>\r\n                                    {\r\n                                        selectedProfiles.map(p =>\r\n                                            <Col\r\n                                                key={p.perId}\r\n                                            >\r\n                                                <Tag\r\n                                                    onClose={(_) => setProfile(p)}\r\n                                                    closeIcon={<i className=\"fa-solid fa-circle-xmark\"></i>}\r\n                                                    closable\r\n                                                    style={{\r\n                                                        padding: '5px 15px',\r\n                                                        borderRadius: '15px',\r\n                                                        fontSize: '1em'\r\n                                                    }}\r\n                                                >\r\n                                                    {`${p.perNombre} (${p.total})`}\r\n                                                </Tag>\r\n                                            </Col>\r\n                                        )\r\n                                    }\r\n                                </Row>\r\n                            </Col>\r\n                        }\r\n                        <Col span={24} style={{ textAlign: 'end' }}>\r\n                            <Typography>\r\n                                <Paragraph>\r\n                                    <Text type='secondary'>\r\n                                        {`${getLabel(labels.filtered)} ${currentDataSource || users.length} ${getLabel(labels.of)} ${users.length} ${getLabel(labels.users)}`}\r\n                                    </Text>\r\n                                </Paragraph>\r\n                            </Typography>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            {\r\n                                perfiles && <Table\r\n                                    {...tableProps}\r\n                                    rowKey='usuId'\r\n                                    columns={columnas}\r\n                                    dataSource={users}\r\n                                    onChange={(pagination, filters, sorter, extra) => {\r\n                                        const { currentDataSource } = extra\r\n                                        setCurrentDataSource(currentDataSource.length)\r\n                                    }}\r\n                                >\r\n                                </Table>\r\n                            }\r\n                        </Col>\r\n                    </Row >\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Badge, Card, Alert } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entNombre }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        {getLabel(labels.view)}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>{getLabel(labels.backHome)}</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.profile)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            usuario.perfiles && usuario.perfiles[0].perNombre\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label={getLabel(labels.firstName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label={getLabel(labels.lastName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label={getLabel(labels.sex)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label={getLabel(labels.dateBirth)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label={getLabel(labels.country)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label={getLabel(labels.city)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={getLabel(labels.countryCode)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={getLabel(labels.phoneNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={getLabel(labels.idNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={getLabel(labels.currentyWorking)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.trainings)}</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description={getLabel(labels.trainingsNotFound)}\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport md5 from 'md5'\r\n\r\nimport { disabledDate, getCatalogos } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n    const [signatureFile, setSignatureFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [fileSignatureList, setSignatureFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const propsSignature = {\r\n        onRemove: (file) => {\r\n            const index = fileSignatureList.indexOf(file);\r\n            const newFileList = fileSignatureList.slice();\r\n            newFileList.splice(index, 1);\r\n            setSignatureFileList(newFileList);\r\n            setSignatureFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setSignatureFileList([...fileSignatureList, file]);\r\n            setSignatureFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileSignatureList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    // const handleUpload = async ({ usuId }) => {\r\n    //     const datos = new FormData();\r\n    //     datos.append('file', fileList[0])\r\n    //     datos.append('usuId', usuId)\r\n    //     try {\r\n    //         const { data } = await usuarioService.upLoadPhoto({ datos })\r\n    //         if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n    //             toast.success(getLabel(labels.userCreatedSuccessfully))\r\n    //             navigate.push('/users')\r\n    //         }\r\n    //     } catch (_) {\r\n    //         toast.error(getLabel(labels.uploadFailed))\r\n    //     } finally {\r\n    //         setIsSaving(false)\r\n    //         setFileList([])\r\n    //     }\r\n    // }\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            cultura: getCulture(),\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0 || fileSignatureList.length > 0) {\r\n                const requests = []\r\n\r\n                let datos = new FormData();\r\n                if (fileList.length > 0) {\r\n                    datos.append('file', fileList[0])\r\n                    datos.append('usuId', usuarioActualizado.usuId)\r\n                    requests.push(usuarioService.upLoadPhoto({ datos }))\r\n                }\r\n\r\n                datos = new FormData();\r\n                if (fileSignatureList.length > 0) {\r\n                    datos.append('file', fileSignatureList[0])\r\n                    datos.append('usuId', usuarioActualizado.usuId)\r\n                    requests.push(usuarioService.uploadSignature({ navigate, datos }))\r\n                }\r\n\r\n                if (requests.length > 0) {\r\n                    Promise.all(requests)\r\n                        .then((results) => {\r\n                            if (results.length > 0) {\r\n                                setIsSaving(false)\r\n                                toast.success(getLabel(labels.userCreatedSuccessfully))\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            setIsSaving(false)\r\n                            const { response } = error\r\n                            const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                            setError(msgError)\r\n                        })\r\n                }\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success(getLabel(labels.userCreatedSuccessfully))\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            setError(getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>{getLabel(labels.backHome)}</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        {`${getLabel(labels.new)} ${getLabel(labels.user)}`}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.uploadProfilePicture)}\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >{getLabel(labels.selectPhoto)}</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label={getLabel(labels.firstName)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.completeFirstName),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label={getLabel(labels.lastName)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.completeLastName),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label={getLabel(labels.sex)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.selectSex),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label={getLabel(labels.dateBirth)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.selectDateBirth),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>{getLabel(labels.idNumber)}</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>{getLabel(labels.uniqueIdentificationCountry)}</>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeID),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label={getLabel(labels.country)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectCountry),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label={getLabel(labels.city)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeCity),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    {getLabel(labels.countryCode)}\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectCountryCode),\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    {getLabel(labels.phoneNumber)}\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completePhoneNumber),\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>{getLabel(labels.currentyWorking)}</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>{getLabel(labels.completeNameInstitution)}</>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label={getLabel(labels.email)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeEmail),\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label={getLabel(labels.additionalEmail)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeAdditionalEmail),\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.additionalEmailNotValid)\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='password'\r\n                                            label={getLabel(labels.createYourPassword)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.createYourPassword),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='passwordConfirm'\r\n                                            label={getLabel(labels.confirmYourPassword)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.confirmYourPassword),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: getLabel(labels.passwordHasMore8Characters),\r\n                                                    specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                                                    number: getLabel(labels.passwordHasNumber),\r\n                                                    capital: getLabel(labels.passwordHasCapitalLetter),\r\n                                                    match: getLabel(labels.passwordsMatch),\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label={getLabel(labels.profile)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectProfile),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label={getLabel(labels.state)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectState),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={8} xxl={4}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={\r\n                                                <Typography.Paragraph>\r\n                                                    {\r\n                                                        getLabel(labels.uploadSignature)\r\n                                                    }\r\n                                                </Typography.Paragraph>\r\n                                            }\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        signatureFile && <Image src={signatureFile} width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...propsSignature}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileSignatureList.length > 0\r\n                                                            }\r\n                                                        >{getLabel(labels.selectPhoto)}</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >{getLabel(labels.back)}</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving}>{getLabel(labels.save)}</Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n  const [signatureFile, setSignatureFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [fileSignatureList, setSignatureFileList] = useState([]);\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const propsSignature = {\r\n    onRemove: (file) => {\r\n      const index = fileSignatureList.indexOf(file);\r\n      const newFileList = fileSignatureList.slice();\r\n      newFileList.splice(index, 1);\r\n      setSignatureFileList(newFileList);\r\n      setSignatureFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setSignatureFileList([...fileSignatureList, file]);\r\n      setSignatureFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileSignatureList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  // const handleUpload = async ({ usuId }) => {\r\n  //   const datos = new FormData();\r\n  //   datos.append('file', fileList[0])\r\n  //   datos.append('usuId', usuId)\r\n  //   try {\r\n  //     const { data } = await usuarioService.upLoadPhoto({ datos })\r\n  //     if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n  //       toast.success(getLabel(labels.accountUpdatedSuccessfully))\r\n  //     }\r\n  //   } catch (_) {\r\n  //     toast.error(getLabel(labels.uploadFailed))\r\n  //   } finally {\r\n  //     setIsSaving(false)\r\n  //     setFileList([])\r\n  //   }\r\n  // }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0 || fileSignatureList.length > 0) {\r\n        const requests = []\r\n\r\n        let datos = new FormData();\r\n\r\n        if (fileList.length > 0) {\r\n          datos.append('file', fileList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.upLoadPhoto({ datos }))\r\n        }\r\n\r\n        datos = new FormData();\r\n        if (fileSignatureList.length > 0) {\r\n          datos.append('file', fileSignatureList[0])\r\n          datos.append('usuId', usuarioActualizado.usuId)\r\n          requests.push(usuarioService.uploadSignature({ navigate, datos }))\r\n        }\r\n        \r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              if (results.length > 0) {\r\n                setIsSaving(false)\r\n                toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n              }\r\n            })\r\n            .catch(error => {\r\n              setIsSaving(false)\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(msgError)\r\n            })\r\n        }\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success(getLabel(labels.accountUpdatedSuccessfully))\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      toast.error(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  {getLabel(labels.myAccount)}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    {getLabel(labels.cancel)}\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => { formUser.submit() }}>\r\n                    {getLabel(labels.save)}\r\n                  </Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  {getLabel(labels.loading)}...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={getLabel(labels.uploadProfilePicture)}\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >\r\n                              {getLabel(labels.selectPhoto)}\r\n                            </Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label={getLabel(labels.idNumber)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeID),\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label={getLabel(labels.firstName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeFirstName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label={getLabel(labels.lastName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeLastName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label={getLabel(labels.sex)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectSex),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label={getLabel(labels.dateBirth)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectDateBirth),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.idNumber)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                {getLabel(labels.uniqueIdentificationCountry)}\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeID),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label={getLabel(labels.country)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountry)\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label={getLabel(labels.city)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeCity),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.countryCode)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountryCode),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.phoneNumber)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completePhoneNumber),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.currentyWorking)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                {getLabel(labels.completeNameInstitution)}\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={currentlyWorking}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: getLabel(labels.ifYesCompleteNameInstitution)\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label={getLabel(labels.email)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.emailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label={getLabel(labels.additionalEmail)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeAdditionalEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.additionalEmailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label={getLabel(labels.state)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectState),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={8} xxl={4}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={\r\n                        <Typography.Paragraph>\r\n                          {\r\n                            getLabel(labels.uploadSignature)\r\n                          }\r\n                          {\r\n                            usuario.firma === true ? <Typography.Text type='secondary' strong><br />{getLabel(labels.signatureAlreadyUploaded)}</Typography.Text> : <></>\r\n                          }\r\n                        </Typography.Paragraph>\r\n                      }\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            signatureFile && <Image src={signatureFile} width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsSignature}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileSignatureList.length > 0\r\n                              }\r\n                            >{getLabel(labels.selectPhoto)}</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row >\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card, Checkbox } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [state, setState] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado, cursoList }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Space direction='horizontal'>\r\n                                <Typography.Text type='secondary'>\r\n                                    {cursoList.length} {getLabel(labels.courses)}\r\n                                </Typography.Text>\r\n                                <Typography.Text type='secondary'>\r\n                                    {numPostulantes} {getLabel(labels.applicants)}\r\n                                </Typography.Text>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {\r\n                                    getLabel(labels.view)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {getLabel(labels.edit)}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        let trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        if (state) {\r\n            trainer = { ...trainer, estado: !state }\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mgeCard\" style={{\r\n                paddingTop: '15px',\r\n                paddingBottom: '15px'\r\n            }}>\r\n                <Row>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    >\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                            {getLabel(labels.trainings)}\r\n                        </h3>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                        style={{\r\n                            textAlign: 'right'\r\n                        }}\r\n                    >\r\n                        <Space>\r\n                            <Button\r\n                                type='default'\r\n                                loading={isLoading}\r\n                                disabled={isLoading}\r\n                                onClick={() => {\r\n                                    fetchData()\r\n                                }}>{getLabel(labels.refresh)}</Button>\r\n                            <Button\r\n                                type='primary'\r\n                                disabled={isLoading}\r\n                                onClick={() => {\r\n                                    navigate.push('/trainingnew')\r\n                                }}>{getLabel(labels.newTraining)}</Button>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'end', paddingTop: '10px', paddingBottom: '10px' }}>\r\n                    <Checkbox checked={state} onChange={(e) => setState(e.target.checked)}>\r\n                        {getLabel(labels.onlyInactive)}\r\n                    </Checkbox>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { insertCountryTraining, getCountryTrainingByTraining, deleteCountryTraining } from \"../utils/urls\";\r\nexport class CountryTrainingService {\r\n    put = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).put(insertCountryTraining(), countryTraining)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(getCountryTrainingByTraining(), countryTraining)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(deleteCountryTraining(), countryTraining)\r\n    }\r\n}\r\n\r\nexport default CountryTrainingService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, Alert } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getCultures, getDatosUsuario } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst baseTraining = {\r\n  entCultura: getCulture()\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [paises, setPaises] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n  const [formCourse] = Form.useForm()\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  // const renderCourse = ({ catId, catNombre, catValor }) =>\r\n  //   <Col key={catId} span={24}>\r\n  //     <Form.Item\r\n  //       name={[catValor]}\r\n  //       label={`Number of beneficiaries for ${catNombre}`}\r\n  //       rules={[\r\n  //         {\r\n  //           required: true,\r\n  //           message: `Complete number of beneficiaries for ${catNombre}`\r\n  //         },\r\n  //       ]}\r\n  //     >\r\n  //       <InputNumber />\r\n  //     </Form.Item>\r\n  //   </Col>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `${getLabel(labels.thenEmail)} ${postulant} ${getLabel(labels.alreadyExists)}.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `${getLabel(labels.email)} ${postulant} ${getLabel(labels.successfullyAdded)}.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `${getLabel(labels.email)} ${email} ${getLabel(labels.successfullyRemoved)}.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      idRegion: values.idRegion,\r\n      entCultura: values.entCultura,\r\n      idModalidad: values.idModalidad,\r\n      entFechaIni: values.entFechaIni,\r\n      entFechaFin: values.entFechaFin,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar Paises\r\n        const requests = []\r\n        if (paises.length > 0) {\r\n          paises.forEach(p => {\r\n            requests.push(countryTrainingService.put({\r\n              navigate, countryTraining: {\r\n                \"idPais\": p.value,\r\n                \"idEntrenamiento\": data.listObject[0].entId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar cursos\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyCreated)}`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`${getLabel(labels.notPossibleAddApplicant)}: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyCreated)}`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        form={formCourse}\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      {getLabel(labels.newTraining)}\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >{getLabel(labels.saveDraft)}</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                    >{getLabel(labels.publish)}</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n\r\n                <Form.Item\r\n                  name='idRegion'\r\n                  label={getLabel(labels.region)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectRegion),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().regions}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, o) => {\r\n                      if (o.catValor === 'CAT_REG_AND') {\r\n                        const entCultura = getCultures().filter(c => c.id === 'es_EC')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      }\r\n                      else if (o.catValor === 'CAT_REG_CAR') {\r\n                        const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      } else {\r\n                        const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entCultura'\r\n                  label={getLabel(labels.language)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectLanguage),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    disabled\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'value',\r\n                      value: 'id'\r\n                    }}\r\n                    options={getCultures()}\r\n                    showSearch\r\n                    optionFilterProp=\"value\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label={getLabel(labels.country)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectCountry),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name='idPais'\r\n                    mode='multiple'\r\n                    onChange={(_, option) => {\r\n                      setPaises(option)\r\n                    }}\r\n                  >\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label={getLabel(labels.modality)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectModality),\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label={getLabel(labels.startDate)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectStartDate),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label={getLabel(labels.endDate)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectEndDate),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label={getLabel(labels.courses)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectCourses),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label={getLabel(labels.applicantsEmails)}\r\n                  extra={getLabel(labels.pressEnterAddEmail)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.addApplicants),\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: getLabel(labels.emailNotValid)\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList.filter(a => a.posEstado.catValor === 'EST_ENR'))\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;{getLabel(labels.applicants)}\r\n                                        </Col>\r\n                                        {/* <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col> */}\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label={getLabel(labels.searchExpression)}\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>{getLabel(labels.search)}</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.name),\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.country),\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.attendance),\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.workPlan),\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.finalReport),\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.certificate),\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.actions),\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>{getLabel(labels.view)}</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.filter(p => p.posEstado.catValor === 'EST_ENR')}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadInformByName, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Descriptions, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              {getLabel(labels.download)}\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>\r\n            {getLabel(labels.registrationDate)}\r\n          </Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item\r\n            style={{\r\n              whiteSpace: 'pre-wrap'\r\n            }}\r\n            label={\r\n              <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n            }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              {getLabel(labels.comments)}:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'TYP_INF_WPL' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `${getLabel(labels.sureApproveThe)} ${infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''}?`\r\n                  }\r\n                  okText={getLabel(labels.yesApprove)} cancelText={getLabel(labels.no)} onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending\r\n                  }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >{getLabel(labels.approve)}</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `${getLabel(labels.sureRejectThe)} ${infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''}`\r\n                  }\r\n                  okText={getLabel(labels.yesReject)} cancelText={getLabel(labels.no)} onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >{getLabel(labels.reject)}</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n              >{getLabel(labels.download)}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByUuid(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": getCulture(),\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({ cerUuid }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      if (data) toast.success(getLabel(labels.attendanceSaved))\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": getCulture(),\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      if (data) toast.success(getLabel(labels.emailSent))\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error(getLabel(labels.emailSendFailed))\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'TYP_INF_WPL' ? commentWorkplan : catValor === 'TYP_INF_FIR' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = { idEntrenamiento: idTraining, posId: id }\r\n    try {\r\n      const { data } = await postulantService.getByTraining({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].entId.cursoList\r\n        const postulant = data.listObject[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  {getLabel(labels.loading)}...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              {getLabel(labels.profile)}:\r\n                            </Typography.Text>\r\n                            <br />{getLabel(labels.applicant)}\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              {getLabel(labels.invitedBy)}:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label={getLabel(labels.firstName)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label={getLabel(labels.lastName)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label={getLabel(labels.sex)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label={getLabel(labels.dateBirth)}\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label={getLabel(labels.country)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label={getLabel(labels.city)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label={getLabel(labels.countryCode)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label={getLabel(labels.phoneNumber)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label={getLabel(labels.idNumber)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label={getLabel(labels.currentyWorking)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label={getLabel(labels.email)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label={getLabel(labels.additionalEmail)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.progress)}</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              {getLabel(labels.attendance)}\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >{getLabel(labels.save)}</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const fileName = 'WorkplanTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    {getLabel(labels.download)}\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            {getLabel(labels.uploadYourWorkplan)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.file)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >{getLabel(labels.selectFile)}</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            loading={uploading || sending}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? getLabel(labels.uploading) : sending ? getLabel(labels.sending) : getLabel(labels.send)}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success(getLabel(labels.emailSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.emailSendFailed))\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_WPL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success(getLabel(labels.uploadSuccessfully))\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.workplanTemplate)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                {getLabel(labels.download)}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Collapse, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n        const fileName = 'FinalReportTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    {getLabel(labels.download)}\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                            {getLabel(labels.uploadFinalReport)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.file)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >{getLabel(labels.selectFile)}</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>{getLabel(labels.copyEvidenceLink)}</Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label={getLabel(labels.url)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            loading={uploading || isLoading || sending}\r\n                                        >\r\n                                            {uploading ? getLabel(labels.uploading) : isLoading ? getLabel(labels.saving) : sending ? getLabel(labels.sending) : getLabel(labels.send)}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ idInforme }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId: idInforme }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success(getLabel(labels.emailSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.emailSendFailed))\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success(getLabel(labels.evidenceSendedSuccessfully))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_FIR')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success(getLabel(labels.uploadSuccessfully))\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.finalReportTemplate)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                {getLabel(labels.download)}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                postulant && postulant.beneficiarioList && postulant.beneficiarioList.length >= (postulant.entId.entLimBen || 1) ?\r\n                                    <Collapse\r\n                                        accordion\r\n                                        bordered={false}\r\n                                        expandIconPosition='end'\r\n                                        style={{\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                        }\r\n                                    </Collapse>\r\n                                    :\r\n                                    <Result\r\n                                        title={`${getLabel(labels.thereMustLeast)} ${postulant.entId && (postulant.entId.entLimBen || 1)} ${getLabel(labels.registeredBeneficiariesUploadFinalReport)}.`}\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/beneficiaries/registry')\r\n                                                }}\r\n                                            >{getLabel(labels.registerBeneficiaries)}</Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Result } from 'antd'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerId, cerNombre, idCurso, cerUuid }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >{getLabel(labels.download)}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0\r\n                                &&\r\n                                postulant.certificadoList.length > 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <Result\r\n                                    title={getLabel(labels.seeYourCertificateFinalReportBeneficiary)}\r\n                                    extra={\r\n                                        <Button type=\"primary\" key=\"console\"\r\n                                            onClick={\r\n                                                () => {\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                        navigate.push('/finalreport') : navigate.push('/beneficiaries/qualification')\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                    getLabel(labels.sendFinalReport) : getLabel(labels.sendListBeneficiaries)\r\n                                            }\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography } from 'antd'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nconst postulantService = new PostulantService()\r\n\r\nconst Classes = () => {\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        try {\r\n            const { data } = await postulantService.getTraining({ navigate, postulant: { idUsuario: getDatosUsuario().usuarioId } })\r\n            const postulant = data.listObject[0]\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(postulant.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.trainings)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, Image, Alert, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getCultures, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport PostulantService from '../../service/PostulantService'\r\n\r\nconst trainingService = new TrainingService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\nconst postulantService = new PostulantService()\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCountry, setIsLoadingCountry] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const [formCourse] = Form.useForm()\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' || training.entEstado.catValor === 'ACTIVE' ?\r\n                            <>\r\n                                <Tooltip title={getLabel(labels.sendInvitationEmail)}>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCountry = async (country) => {\r\n        setIsSaving(true)\r\n        const countryTraining = { ...country, idEntrenamiento: training.entId }\r\n        if (countryTraining.checked) {\r\n            try {\r\n                const { data } = await countryTrainingService.put({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await countryTrainingService.del({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `${getLabel(labels.thenEmail)} ${posEmail} ${getLabel(labels.alreadyExists)}`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `${getLabel(labels.email)} ${posEmail} ${getLabel(labels.successfullySaved)}`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants()\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `${getLabel(labels.email)} ${postulant.posEmail} ${getLabel(labels.successfullyDeleted)}`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants()\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setTraining({\r\n                    ...training,\r\n                    countries: training.countryTrainingList.map(c => c.paePais.catId),\r\n                    courses: training.cursoList.map(c => c.curNombre.catId),\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n                setPaises(training.countryTrainingList)\r\n                setCourses(training.cursoList)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCountries = async () => {\r\n        setIsLoadingCountry(true)\r\n        const countryTraining = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await countryTrainingService.getByTraining({ navigate, countryTraining })\r\n            if (data) {\r\n                const countries = data.listObject\r\n                setPaises(countries)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingCountry(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject[0].postulanteList\r\n                setPostulants(postulants)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        const training = {\r\n            idRegion: values.entRegion.catId,\r\n            entId: values.entId,\r\n            entCultura: values.entCultura,\r\n            entFechaFin: values.entFechaFin\r\n        }\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await trainingService.set({ navigate, training })\r\n            if (data) {\r\n                toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyUpdated)}`)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error(getLabel(labels.couldNotSendEmail), { position: 'bottom-center' })\r\n            else\r\n                toast.success(getLabel(labels.emailSentSuccessfully), { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred), { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (paises.length < 1 || courses.length < 1 || postulants.length < 1) {\r\n            toast.error(getLabel(labels.addCountryCourseApplicant))\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            entCultura: training.entCultura,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error(getLabel(labels.couldNotSendEmail))\r\n                                    else\r\n                                        toast.success(getLabel(labels.emailSentSuccessfully))\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.publishSuccesfully)}`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.publishSuccesfully)}`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            form={formCourse}\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving || isPublishing || isSendingEmail}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        {getLabel(labels.edit)} {getLabel(labels.training)}\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >{getLabel(labels.saveDraft)}</Button>\r\n                                                    <Popconfirm title={getLabel(labels.surePublishTraining)} okText={getLabel(labels.yesPublish)} cancelText={getLabel(labels.no)} onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >{getLabel(labels.publish)}</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col span={24} style={{ display: 'none' }}>\r\n                                    <Form.Item\r\n                                        name='entId'\r\n                                        label={getLabel(labels.idTraining)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.completeID),\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name={['entRegion', 'catId']}\r\n                                                label={getLabel(labels.region)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectRegion),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    showSearch\r\n                                                    options={getCatalogos().regions}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onChange={(_, o) => {\r\n                                                        if (o.catValor === 'CAT_REG_AND') {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'es_EC')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        }\r\n                                                        else if (o.catValor === 'CAT_REG_CAR') {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        } else {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name='entCultura'\r\n                                                label={getLabel(labels.language)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectLanguage),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'value',\r\n                                                        value: 'id'\r\n                                                    }}\r\n                                                    options={getCultures()}\r\n                                                    showSearch\r\n                                                    optionFilterProp=\"value\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='countries'\r\n                                                label={getLabel(labels.country)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectCountry),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCountry}\r\n                                                    mode='multiple'\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={\r\n                                                        getCatalogos().paises.map(p => {\r\n                                                            const { catNombre, catDescripcion } = p\r\n                                                            const flag = catDescripcion.toLowerCase()\r\n                                                            return (\r\n                                                                {\r\n                                                                    ...p,\r\n                                                                    catNombre: <>\r\n                                                                        <img\r\n                                                                            src={`https://flagcdn.com/24x18/${flag}.png`}\r\n                                                                            srcSet={`https://flagcdn.com/48x36/${flag}.png 2x,https://flagcdn.com/72x54/${flag}.png 3x`}\r\n                                                                            width=\"24\"\r\n                                                                            height=\"18\"\r\n                                                                            alt={catNombre} />&nbsp;\r\n                                                                        {catNombre}\r\n                                                                    </>\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        )\r\n                                                    }\r\n                                                    onSelect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: true,\r\n                                                            idPais: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: false,\r\n                                                            paeId: paises.filter(c => c.paePais.catId === option.catId).length > 0 ? paises.filter(c => c.paePais.catId === option.catId)[0].paeId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label={getLabel(labels.trainingName)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.completeTrainingName),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label={getLabel(labels.modality)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectModality),\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'\r\n                                                >\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label={getLabel(labels.startDate)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectStartDate),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label={getLabel(labels.endDate)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectEndDate),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='courses'\r\n                                                label={getLabel(labels.courses)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectCourses),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCourse}\r\n                                                    mode='multiple'\r\n                                                    showSearch\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={getCatalogos().cursos}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onSelect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: true,\r\n                                                            idNombreCurso: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: false,\r\n                                                            curId: courses.filter(c => c.curNombre.catId === option.catId).length > 0 ? courses.filter(c => c.curNombre.catId === option.catId)[0].curId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isPublishing || isSendingEmail}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label={getLabel(labels.applicantsEmails)}\r\n                                                extra={getLabel(labels.pressEnterAddEmail)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.addApplicants),\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: getLabel(labels.emailNotValid)\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image, Tag } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;{getLabel(labels.applicants)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label={getLabel(labels.searchExpression)}\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>{getLabel(labels.search)}</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.firstName),\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.country),\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.attendance),\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.workPlan),\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.finalReport),\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.certificate),\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.actions),\r\n                                            dataIndex: '',\r\n                                            render: (_, { posId, usuId }) => <div style={{ textAlign: 'center' }}>\r\n                                                {\r\n                                                    usuId ?\r\n                                                        <Button type='primary' href={`/#/trainingapplicant/${posId}/${id}`}>{getLabel(labels.view)}</Button>\r\n                                                        :\r\n                                                        <Tag color='#108ee9'>{getLabel(labels.notEnrolled)}</Tag>\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport { getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nconst postulantService = new PostulantService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            {getLabel(labels.download)}\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item\r\n                        style={{\r\n                            whiteSpace: 'pre-wrap'\r\n                        }}\r\n                        label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                        }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''\r\n                            }\r\n                            &nbsp;- {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerUuid, cerId, cerNombre, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >{getLabel(labels.download)}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { idEntrenamiento: idTraining, posId: id }\r\n        try {\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject[0].entId.cursoList\r\n                const postulant = data.listObject[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.profile)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />{getLabel(labels.applicant)}\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.invitedBy)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={'nombres'}\r\n                                                            label={getLabel(labels.firstName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label={getLabel(labels.lastName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label={getLabel(labels.sex)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label={getLabel(labels.dateBirth)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label={getLabel(labels.country)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label={getLabel(labels.city)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={getLabel(labels.countryCode)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={getLabel(labels.phoneNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={getLabel(labels.idNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={getLabel(labels.currentyWorking)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.progress)}</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            {getLabel(labels.attendance)}\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { deleteBeneficiary, downloadBeneficiariesReport, getBeneficiariesByPostulant, getBeneficiaryById, insertBeneficiary, updateBeneficiary, validateBeneficiary } from '../utils/urls'\r\nexport class BeneficiaryService {\r\n    put = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).put(insertBeneficiary(), beneficiary)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(updateBeneficiary(), beneficiary)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiaryById(), beneficiary)\r\n    }\r\n    getByPostulant = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiariesByPostulant(), beneficiary)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(deleteBeneficiary(), beneficiary)\r\n    }\r\n    val = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(validateBeneficiary(), beneficiary)\r\n    }\r\n    downloadBeneficiariesReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).patch(downloadBeneficiariesReport())\r\n    }\r\n}\r\n\r\nexport default BeneficiaryService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, downloadCertificateByUuid, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n    downloadByUuid = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByUuid(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React from 'react'\r\nimport { Col, Row, Space, Button, Form, Select, InputNumber, Input, Switch } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst { Option } = Select\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            alt={e.catNombre}\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.substr(0, 2).toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n        ></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst Beneficiary = ({ type, beneficiary, saveBeneficiary, isSaving, closeBeneficiary }) => {\r\n    const [formBeneficiary] = Form.useForm()\r\n\r\n    if (type === 1)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label={getLabel(labels.idNumber)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label={getLabel(labels.name)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeFirstName)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label={getLabel(labels.country)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectCountry)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCiudad']}\r\n                                label={getLabel(labels.city)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCity)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label={getLabel(labels.sex)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectSex)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name='benTrabaja'\r\n                                label={getLabel(labels.currentyWorking)}\r\n                                valuePropName='checked'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idNivelInt']}\r\n                                label={getLabel(labels.instructionLevel)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeInstructionLevel)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().educationLevels}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >{getLabel(labels.cancel)}</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? getLabel(labels.saving) : getLabel(labels.save)\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n    if (type === 2)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label={getLabel(labels.idNumber)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label={getLabel(labels.name)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeFirstName)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label={getLabel(labels.country)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectCountry)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCiudad']}\r\n                                label={getLabel(labels.city)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCity)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label={getLabel(labels.sex)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectSex)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benIdEmpresa']}\r\n                                label={getLabel(labels.companyID)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCompanyID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNomEmpresa']}\r\n                                label={getLabel(labels.company)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCompany)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCargo']}\r\n                                label={getLabel(labels.jobTitle)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeJobTitle)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNumPer']}\r\n                                label={getLabel(labels.totalCollaborators)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeTotalCollaborators)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Row gutter={[10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benHombres']}\r\n                                        label={getLabel(labels.men)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.numberMen)\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benMujeres']}\r\n                                        label={getLabel(labels.women)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.numberWomen)\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >{getLabel(labels.cancel)}</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? getLabel(labels.saving) : getLabel(labels.save)\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default Beneficiary","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Col, Row, Space, Button, Table, Image, Drawer, Typography, Collapse, Popconfirm, Switch, Result, Modal } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport BeneficiaryService from './../../service/BeneficiaryService'\r\nimport CertificateService from '../../service/CertificateService'\r\nimport Beneficiary from './Beneficiary'\r\n\r\nconst postulantService = new PostulantService()\r\nconst beneficiaryService = new BeneficiaryService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst { Title, Paragraph, Text } = Typography\r\nconst { confirm } = Modal\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst Beneficiaries = () => {\r\n    const navigate = useHistory()\r\n    const { operation } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isOpening, setIsOpening] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingBeneficiaries, setIsLoadingBeneficiaries] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n    const [postulant, setPostulant] = useState({})\r\n    const [beneficiaryC1, setBeneficiaryC1] = useState(null)\r\n    const [beneficiaryC2, setBeneficiaryC2] = useState(null)\r\n    const [openC1, setOpenC1] = useState(false)\r\n    const [openC2, setOpenC2] = useState(false)\r\n    const [selectedBeneficiary, setSelectedBeneficiary] = useState({ benId: 0 })\r\n    const [openDeleteBeneficiary, setOpenDeleteBeneficiary] = useState(false);\r\n\r\n    const [isGenerating, setIsGenerating] = useState(false)\r\n    const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n\r\n    const closeBeneficiaryC1 = () => {\r\n        setOpenC1(false)\r\n    }\r\n\r\n    const getBeneficiaryC1 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC1(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                idNivelInt: data.listObject[0].benNivelInt.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC1(beneficiary)\r\n            setOpenC1(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC1 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC1()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const newBeneficiary = time => new Promise(resolve => setTimeout(resolve, time * 1000))\r\n\r\n    const closeBeneficiaryC2 = () => {\r\n        setOpenC2(false)\r\n    }\r\n\r\n    const getBeneficiaryC2 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC2(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC2(beneficiary)\r\n            setOpenC2(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC2 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC2()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const showReconfirmDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(true)\r\n    }\r\n\r\n    const confirmDeleteBeneficiary = async () => {\r\n        setIsDeleting(true)\r\n        try {\r\n            const { data } = await beneficiaryService.del({ navigate, beneficiary: selectedBeneficiary })\r\n            if (data) {\r\n                toast.success(getLabel(labels.beneficiarySuccessfullyRemoved))\r\n                fetchData(2)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setSelectedBeneficiary({ benId: 0 })\r\n            setIsDeleting(false)\r\n            setOpenDeleteBeneficiary(false)\r\n        }\r\n    }\r\n\r\n    const cancelDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(false)\r\n    }\r\n\r\n    const delBeneficiary = async ({ benId }) => {\r\n        setSelectedBeneficiary({ benId })\r\n        if ((postulant.beneficiarioList.length - 1) < (postulant.entId.entLimBen || 1)) {\r\n            showReconfirmDeleteBeneficiary()\r\n        } else {\r\n            setIsDeleting(true)\r\n            try {\r\n                const { data } = await beneficiaryService.del({ navigate, beneficiary: { benId } })\r\n                if (data) {\r\n                    toast.success(getLabel(labels.beneficiarySuccessfullyRemoved))\r\n                    fetchData(2)\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setSelectedBeneficiary({ benId: 0 })\r\n                setIsDeleting(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateBeneficiary = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = await beneficiaryService.val({ navigate, beneficiary })\r\n            if (data)\r\n                toast.success(getLabel(labels.beneficiarySuccessfullyUpdated))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendCertificate = async ({ cerId }) => {\r\n        setIsSendingCertificate(true)\r\n        try {\r\n            const certificate = { cerId }\r\n            const { data } = await certificateService.send({ navigate, certificate })\r\n            if (data) toast.success(getLabel(labels.certificateSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.certificateSendFailed))\r\n        } finally {\r\n            setIsSendingCertificate(false)\r\n        }\r\n    }\r\n\r\n    const generate = async ({ idCurso, idPostulante }) => {\r\n        setIsGenerating(true)\r\n        try {\r\n            const course = { idCurso, idPostulante }\r\n            const { data } = await certificateService.generate({ navigate, course })\r\n            const certificate = data.listObject[0]\r\n            toast.success(getLabel(labels.certificateGeneratedSuccessfully))\r\n            sendCertificate(certificate)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    const sendBeneficiaries = async ({ idCurso, idPostulante }) => {\r\n        confirm({\r\n            title: getLabel(labels.sendBeneficiaryListTitle),\r\n            icon: <anticons.ExclamationCircleFilled />,\r\n            content: getLabel(labels.sendBeneficiaryListConfirm),\r\n            okText: getLabel(labels.ok),\r\n            cancelText: getLabel(labels.cancel),\r\n            onOk() {\r\n                generate({ idCurso, idPostulante })\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCourse = ({ curId, curNombre }, posId) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            operation === 'registry' &&\r\n                            <>\r\n                                {\r\n                                    postulant.beneficiarioList && postulant.beneficiarioList.filter(b => b.idCurso === curId && b.idPostulante === posId).length >= (postulant.entId.entLimBen || 1) ?\r\n                                        <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                        :\r\n                                        <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                }\r\n                            </>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' &&\r\n                            <>\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.filter(c => c.idCurso === curId && c.idPostulante === posId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                            <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                            :\r\n                                            <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                    }\r\n                                </>\r\n                            </>\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography>\r\n                            <Text strong style={{ fontSize: '1.1em' }}>\r\n                                {curNombre.catNombre}\r\n                            </Text>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            <Row>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Typography>\r\n                        <Paragraph>\r\n                            <Text type='secondary' strong>\r\n                                {`${getLabel(labels.minimumBeneficiaries)} (${postulant.entId.entLimBen || 1})`}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    style={{ textAlign: 'right' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type='default'\r\n                            loading={isLoading || isLoadingBeneficiaries}\r\n                            disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                            onClick={() => {\r\n                                fetchData(2)\r\n                            }}>{getLabel(labels.refresh)}</Button>\r\n                        {\r\n                            postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 && <Button\r\n                                type='primary'\r\n                                loading={isOpening}\r\n                                disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                                onClick={() => {\r\n                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC1(null)\r\n                                            setBeneficiaryC1({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_NAT'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC1(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC2(null)\r\n                                            setBeneficiaryC2({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_LEG'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC2(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    }\r\n                                }}>{getLabel(labels.newBeneficiary)}</Button>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                            <Button type='primary'\r\n                                loading={isGenerating || isSendingCertificate}\r\n                                disabled={isGenerating || isSendingCertificate || isLoading || isLoadingBeneficiaries}\r\n                                onClick={() => sendBeneficiaries(\r\n                                    {\r\n                                        idCurso: curId,\r\n                                        idPostulante: posId\r\n                                    })}\r\n                            >\r\n                                {\r\n                                    isGenerating || isSendingCertificate ? getLabel(labels.sending) : getLabel(labels.send)\r\n                                }\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                postulant && postulant.beneficiarioList &&\r\n                <Table\r\n                    loading={isLoading || isLoadingBeneficiaries}\r\n                    {...tableProps}\r\n                    rowKey='benId'\r\n                    columns={[\r\n                        {\r\n                            title: getLabel(labels.idNumber),\r\n                            dataIndex: 'benDocumento',\r\n                            render: (_, { benDocumento }) => `${benDocumento}`,\r\n                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.name),\r\n                            dataIndex: 'benNombres',\r\n                            render: (_, { benNombres }) => `${benNombres}`\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.country),\r\n                            dataIndex: 'benPais',\r\n                            render: (_, { benPais }) =>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png`}\r\n                                        srcSet={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${benPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                        width=\"32\"\r\n                                        height=\"24\"\r\n                                        alt={benPais.catNombre}></img>\r\n                                </div>\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.city),\r\n                            dataIndex: 'benCiudad',\r\n                            render: (_, { benCiudad }) => `${benCiudad || ''}`,\r\n                            responsive: ['sm', 'md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.sex),\r\n                                    dataIndex: 'benSexo',\r\n                                    render: (_, { benSexo }) => `${benSexo.catNombre}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.jobTitle),\r\n                                    dataIndex: 'benCargo',\r\n                                    render: (_, { benCargo }) => `${benCargo}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.isWorking),\r\n                                    dataIndex: 'benTrabaja',\r\n                                    render: (_, { benTrabaja }) => <>{benTrabaja ? getLabel(labels.yes) : getLabel(labels.no)}</>,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.company),\r\n                                    dataIndex: 'benNomEmpresa',\r\n                                    render: (_, { benNomEmpresa }) => `${benNomEmpresa}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.instructionLevel),\r\n                                    dataIndex: 'benNivelInt',\r\n                                    render: (_, { benNivelInt }) => `${benNivelInt.catNombre}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.totalPersons),\r\n                                    dataIndex: 'benNumPer',\r\n                                    render: (_, { benNumPer }) => `${benNumPer}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        {\r\n                            title: getLabel(labels.actions),\r\n                            dataIndex: '',\r\n                            render: (_, record) =>\r\n                                <Space>\r\n                                    <Button type='primary'\r\n                                        icon={<anticons.FolderOpenFilled />}\r\n                                        onClick={() => {\r\n                                            if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                                getBeneficiaryC1(record)\r\n                                            } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                                getBeneficiaryC2(record)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    {\r\n                                        operation === 'registry' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                                        <>\r\n                                            <Popconfirm title={getLabel(labels.sureDeleteBeneficiary)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.cancel)} onConfirm={() => delBeneficiary(record)}\r\n                                                okButtonProps={{\r\n                                                    loading: isDeleting,\r\n                                                    disabled: isDeleting\r\n                                                }}\r\n                                            >\r\n                                                <Button type='default'\r\n                                                    danger\r\n                                                    icon={<anticons.DeleteFilled />}\r\n                                                    loading={isDeleting}\r\n                                                    disabled={isDeleting}\r\n                                                />\r\n                                            </Popconfirm>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        operation === 'qualification' &&\r\n                                        <Switch\r\n                                            defaultChecked={record.benValidado}\r\n                                            onChange={(e) => {\r\n                                                validateBeneficiary({ ...record, benValidado: e })\r\n                                            }}\r\n                                            loading={isSaving}\r\n                                            disabled={postulant.certificadoList.filter(c => c.idCurso === curId).length > 0}\r\n                                        />\r\n                                    }\r\n                                </Space>\r\n                        }\r\n                    ]}\r\n                    dataSource={postulant.beneficiarioList.filter(b => b.idCurso === curId)}>\r\n                </Table>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const fetchData = async (typeLoad) => {\r\n        setLoad(false)\r\n        if (typeLoad) {\r\n            if (typeLoad === 1) {\r\n                setIsLoading(true)\r\n            } else if (typeLoad === 2) {\r\n                setIsLoadingBeneficiaries(true)\r\n            }\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            if (typeLoad) {\r\n                if (typeLoad === 1) {\r\n                    setIsLoading(false)\r\n                } else if (typeLoad === 2) {\r\n                    setIsLoadingBeneficiaries(false)\r\n                }\r\n            } else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px 20px 6px 20px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                        <Typography>\r\n                            <Title type='secondary' level={3}>\r\n                                {\r\n                                    operation === 'registry' ? getLabel(labels.registryOperation) : getLabel(labels.qualificationOperation)\r\n                                }\r\n                            </Title>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row justify='center'>\r\n                {\r\n                    isLoading ?\r\n                        <AlertWait message={`${getLabel(labels.loading)}...`} isLoading={isLoading} />\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                operation === 'registry' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={getLabel(labels.oneApprovedWorkplanRegisterBeneficiaries)}\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/workplan')\r\n                                                        }}\r\n                                                    >\r\n                                                        {getLabel(labels.sendWorkplan)}\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n                            {\r\n                                operation === 'qualification' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={getLabel(labels.oneApprovedFinalReportQualifyBeneficiaries)}\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/finalreport')\r\n                                                        }}\r\n                                                    >\r\n                                                        {getLabel(labels.sendFinalReport)}\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </Col>\r\n                }\r\n            </Row>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC1} open={openC1}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC1}\r\n                            disabled={isSaving}\r\n                        >{getLabel(labels.cancel)}</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC1 && <Beneficiary type={1} beneficiary={beneficiaryC1} saveBeneficiary={saveBeneficiaryC1} closeBeneficiary={closeBeneficiaryC1} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC2} open={openC2}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC2}\r\n                            disabled={isSaving}\r\n                        >{getLabel(labels.cancel)}</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC2 && <Beneficiary type={2} beneficiary={beneficiaryC2} saveBeneficiary={saveBeneficiaryC2} closeBeneficiary={closeBeneficiaryC2} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Modal\r\n                title={getLabel(labels.deleteBeneficiaryTitle)}\r\n                open={openDeleteBeneficiary}\r\n                onOk={confirmDeleteBeneficiary}\r\n                confirmLoading={isDeleting}\r\n                onCancel={cancelDeleteBeneficiary}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.cancel)}\r\n            >\r\n                <p>\r\n                    {\r\n                        getLabel(labels.reConfirmDeleteBeneficiary)\r\n                    }\r\n                </p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beneficiaries","import React, { useState } from 'react'\r\nimport { Button, Form, Input, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport md5 from 'md5'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePasswordUser = ({ user, navigate }) => {\r\n\r\n    const [passwordNew, setPasswordNew] = useState('')\r\n    const [passwordNewConfirm, setPasswordNewConfirm] = useState('')\r\n    const [isReseting, setIsReseting] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const resetPassword = async (values) => {\r\n        const usuario = {\r\n            usuId: values.usuId,\r\n            oldpassword: md5(values.password),\r\n            password: md5(values.passwordNew)\r\n        }\r\n        setIsReseting(true)\r\n        try {\r\n            const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n            if (data)\r\n                toast.success(getLabel(labels.passwordResetSuccessfully))\r\n            setTimeout(() => {\r\n                localStorage.removeItem(\"mgeToken\")\r\n                localStorage.removeItem(\"mgeDatosUsuario\")\r\n                localStorage.removeItem(\"mgeInformList\")\r\n                navigate.push(\"/login\")\r\n                setIsReseting(false)\r\n            }, 3000)\r\n        } catch (error) {\r\n            setIsReseting(false)\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const cancelResetPassword = () => {\r\n        window.history.go(-1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label={getLabel(labels.idNumber)}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label={getLabel(labels.password)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completePassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNew'\r\n                    label={getLabel(labels.newPassword)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completeNewPassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNew(e.target.value)} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNewConfirm'\r\n                    label={getLabel(labels.confirmNewPassword)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.confirmNewPassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNewConfirm(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                    minLength={8}\r\n                    value={passwordNew}\r\n                    valueAgain={passwordNewConfirm}\r\n                    messages={{\r\n                        minLength: getLabel(labels.passwordHasMore8Characters),\r\n                        specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                        number: getLabel(labels.passwordHasNumber),\r\n                        capital: getLabel(labels.passwordHasCapitalLetter),\r\n                        match: getLabel(labels.passwordsMatch)\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Space>\r\n                    <Button onClick={cancelResetPassword}\r\n                        disabled={isReseting}\r\n                    >{getLabel(labels.cancel)}</Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? getLabel(labels.resetting) : getLabel(labels.resetPassword)\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePasswordUser","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nimport RestorePasswordUser from '../components/usuario/RestorePasswordUser'\r\nimport AlertWait from './AlertWait'\r\nimport UsuarioService from '../service/UsuarioService'\r\n\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getLabel, labels } from '../utils/Internationalization'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Title } = Typography\r\n\r\nconst ResetPasswordUser = () => {\r\n    const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n    const navigate = useHistory()\r\n    const [user, setUser] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchUser = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            const usuario = data.listObject[0]\r\n            setUser(usuario)\r\n        }\r\n        catch (error) {\r\n\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchUser()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Row justify='center' gutter={[15, 20]}>\r\n            <Col span={24}>\r\n                <div className='mgeCard' style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Typography>\r\n                        <Title level={3}>\r\n                            <span className='mge-darkGreen'>\r\n                                {\r\n                                    getLabel(labels.resetPassword).split(' ').map(l => `${l.substring(0, 1).toUpperCase()}${l.substring(1)}`).join(' ')\r\n                                }\r\n                            </span>\r\n                        </Title>\r\n                    </Typography>\r\n                </div>\r\n            </Col>\r\n            <Col xs={22} sm={18} md={16} lg={14} xl={10} xxl={8}>\r\n                {\r\n                    isLoading && <AlertWait isLoading={isLoading} message={getLabel(labels.pleaseWait)} />\r\n                }\r\n                {\r\n                    user && <RestorePasswordUser user={user} navigate={navigate}></RestorePasswordUser>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ResetPasswordUser","import React, { useState } from 'react'\r\nimport { Col, Radio, Row, Typography, Space, Button } from 'antd'\r\nimport { getCultures } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels, setCulture } from '../../utils/Internationalization'\r\nimport toast from 'react-hot-toast'\r\nconst { Title, Paragraph, Text } = Typography\r\n\r\nconst LanguagePreferences = () => {\r\n\r\n    const [value, setValue] = useState(getCulture())\r\n\r\n    const renderCulture = ({ id, value }) => <Radio key={id} value={id}>{value}</Radio>\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.target.value)\r\n        const culture = { culture: e.target.value }\r\n        setCulture(culture)\r\n        toast.success(getLabel(labels.languagePreferencesSaved))\r\n    }\r\n\r\n    return (\r\n        <Row justify='center' gutter={[15, 20]}>\r\n            <Col span={24}>\r\n                <div className='mgeCard' style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Typography>\r\n                        <Title level={3}>\r\n                            <span className='mge-darkGreen'>\r\n                                {getLabel(labels.languagePreferences)}\r\n                            </span>\r\n                        </Title>\r\n                        <Paragraph>\r\n                            <Text type='secondary'>\r\n                                {getLabel(labels.seePreferredLanguage)}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n                <div style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Radio.Group onChange={onChange} value={value}>\r\n                        <Space direction='horizontal'>\r\n                            {\r\n                                getCultures().map(c => renderCulture(c))\r\n                            }\r\n                        </Space>\r\n                    </Radio.Group>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n                <div style={{ padding: '15px 20px 10px 20px', textAlign: 'end' }}>\r\n                    <Button\r\n                        type='default'\r\n                        onClick={() => {\r\n                            window.history.go(-1)\r\n                        }}\r\n                    >\r\n                        {getLabel(labels.back)}\r\n                    </Button>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LanguagePreferences","import React from 'react'\r\nimport LanguagePreferences from '../components/cuenta/LanguagePreferences'\r\nconst Language = () => {\r\n    return <LanguagePreferences />\r\n}\r\nexport default Language","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\n\r\nimport AppTopbar from \"./AppTopbar\";\r\nimport AppFooter from \"./AppFooter\";\r\nimport AppRightPanel from \"./AppRightPanel\";\r\n\r\nimport { Tooltip } from \"primereact/tooltip\";\r\n\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"./App.scss\";\r\n\r\nimport Usuarios from \"./components/usuario\";\r\nimport Usuario from \"./components/usuario/Usuario\";\r\nimport Opciones from \"./components/opcion\";\r\nimport Perfiles from \"./components/perfil\";\r\nimport Perfil from \"./components/perfil/Perfil\";\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport UserInfo from \"./components/dashboard/UserInfo\";\r\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\r\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\r\nimport Courses from \"./components/courses/Courses\";\r\nimport Course from \"./components/courses/Course\";\r\nimport Applicants from \"./components/Applicant/Applicants\";\r\nimport Applicant from \"./components/Applicant/Applicant\";\r\nimport WorkPlan from \"./components/workplan/WorkPlan\";\r\nimport FinalReport from \"./components/finalReport/FinalReport\";\r\nimport Certificate from \"./components/certificate/Certificate\";\r\nimport Classes from \"./components/classes/Classes\";\r\nimport Training from \"./components/training/Training\";\r\n\r\nimport { getDatosUsuario, getOpcionesMenu } from \"./utils/Utils\";\r\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\r\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\r\nimport Beneficiaries from \"./components/beneficiary/Beneficiaries\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport ResetPasswordUser from \"./pages/ResetPasswordUser\";\r\nimport Language from \"./pages/Language\";\r\n\r\nconst App = (props) => {\r\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\r\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\r\n  const [sidebarStatic, setSidebarStatic] = useState(true);\r\n  const [sidebarActive, setSidebarActive] = useState(true);\r\n  const [menuActive, setMenuActive] = useState(false);\r\n  const [configActive, setConfigActive] = useState(false);\r\n  const [rightPanelActive, setRightPanelActive] = useState(false);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\r\n  const copyTooltipRef = useRef();\r\n  const location = useLocation();\r\n\r\n  const menu = getOpcionesMenu();\r\n\r\n  let menuClick;\r\n  let rightPanelClick;\r\n  let configClick;\r\n  let searchClick;\r\n  let topbarUserMenuClick;\r\n\r\n  useEffect(() => {\r\n    copyTooltipRef &&\r\n      copyTooltipRef.current &&\r\n      copyTooltipRef.current.updateTargetEvents();\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (staticMenuMobileActive) {\r\n      blockBodyScroll();\r\n    } else {\r\n      unblockBodyScroll();\r\n    }\r\n  }, [staticMenuMobileActive]);\r\n\r\n  useEffect(() => {\r\n    setResetActiveIndex(true);\r\n    setMenuActive(false);\r\n  }, []);\r\n\r\n  const onMenuItemClick = (event) => {\r\n    if (!event.item.items) {\r\n      setResetActiveIndex(true);\r\n      hideOverlayMenu();\r\n    }\r\n    if (!event.item.items && (isSlim() || isHorizontal())) {\r\n      setMenuActive(false);\r\n    }\r\n  };\r\n\r\n  const onMenuClick = (event) => {\r\n    if (menuActive && event.target.className === \"layout-menu-container\") {\r\n      setResetActiveIndex(true);\r\n      setMenuActive(false);\r\n    }\r\n    menuClick = true;\r\n  };\r\n\r\n  const blockBodyScroll = () => {\r\n    if (document.body.classList) {\r\n      document.body.classList.add(\"blocked-scroll\");\r\n    } else {\r\n      document.body.className += \" blocked-scroll\";\r\n    }\r\n  };\r\n\r\n  const unblockBodyScroll = () => {\r\n    if (document.body.classList) {\r\n      document.body.classList.remove(\"blocked-scroll\");\r\n    } else {\r\n      document.body.className = document.body.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n    }\r\n  };\r\n\r\n  const onMenuButtonClick = (event) => {\r\n    menuClick = true;\r\n    setTopbarUserMenuActive(false);\r\n    setRightPanelActive(false);\r\n\r\n    if (isMobile()) {\r\n      setStaticMenuMobileActive(\r\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\r\n      );\r\n      if (staticMenuMobileActive) {\r\n        blockBodyScroll();\r\n      } else {\r\n        unblockBodyScroll();\r\n      }\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const isMobile = () => {\r\n    return window.innerWidth <= 991;\r\n  };\r\n\r\n  const isHorizontal = () => {\r\n    return \"sideBar\" === \"horizontal\";\r\n  };\r\n\r\n  const isSlim = () => {\r\n    return \"sideBar\" === \"slim\";\r\n  };\r\n\r\n  const hideOverlayMenu = () => {\r\n    setStaticMenuMobileActive(false);\r\n    unblockBodyScroll();\r\n  };\r\n\r\n  const onRightPanelClick = () => {\r\n    rightPanelClick = true;\r\n  };\r\n\r\n  const onRightPanelButtonClick = () => {\r\n    setRightPanelActive((prevState) => !prevState);\r\n    rightPanelClick = true;\r\n  };\r\n\r\n  const onTopbarSearchToggle = () => {\r\n    setSearchActive((prevState) => !prevState);\r\n    searchClick = true;\r\n  };\r\n\r\n  const onTopbarSearchClick = () => {\r\n    searchClick = true;\r\n  };\r\n\r\n  const onTopbarUserMenuClick = () => {\r\n    setTopbarUserMenuActive((prevState) => !prevState);\r\n    topbarUserMenuClick = true;\r\n  };\r\n\r\n  const onDocumentClick = () => {\r\n    if (!searchClick && searchActive) {\r\n      setSearchActive(false);\r\n      searchClick = false;\r\n    }\r\n\r\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\r\n      setTopbarUserMenuActive(false);\r\n      topbarUserMenuClick = false;\r\n    }\r\n\r\n    if (!rightPanelClick && rightPanelActive) {\r\n      setRightPanelActive(false);\r\n    }\r\n\r\n    if (!configClick && configActive) {\r\n      setConfigActive(false);\r\n    }\r\n\r\n    if (!menuClick) {\r\n      if (isSlim() || isHorizontal()) {\r\n        setResetActiveIndex(true);\r\n        setMenuActive(false);\r\n      }\r\n\r\n      if (staticMenuMobileActive) {\r\n        hideOverlayMenu();\r\n      }\r\n\r\n      unblockBodyScroll();\r\n    }\r\n\r\n    searchClick = false;\r\n    topbarUserMenuClick = false;\r\n    rightPanelClick = false;\r\n    configClick = false;\r\n    menuClick = false;\r\n  };\r\n\r\n  const onSidebarMouseOver = () => {\r\n    setSidebarActive(!isMobile());\r\n  };\r\n\r\n  const onSidebarMouseLeave = () => {\r\n    setSidebarActive(false);\r\n  };\r\n\r\n  const onToggleMenu = (event) => {\r\n    menuClick = true;\r\n    setSidebarStatic((prevState) => !prevState);\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onRootMenuItemClick = () => {\r\n    setMenuActive((prevMenuActive) => !prevMenuActive);\r\n  };\r\n\r\n  const layoutClassName = classNames(\r\n    \"layout-wrapper\",\r\n    {\r\n      \"layout-sidebar\": \"sidebar\",\r\n      \"layout-static\": \"sidebar\" && sidebarStatic,\r\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\r\n      \"layout-rightpanel-active\": rightPanelActive,\r\n      \"layout-slim\": \"sidebar\" === \"slim\",\r\n      \"layout-mobile-active\": staticMenuMobileActive,\r\n      \"p-input-filled\": \"filled\",\r\n      \"p-ripple-disabled\": false,\r\n    },\r\n    \"layout-menu-light layout-topbar-light\"\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={layoutClassName}\r\n      onClick={onDocumentClick}\r\n      style={{ backgroundColor: \"#F0F0F0\" }}\r\n    >\r\n      <Tooltip\r\n        ref={copyTooltipRef}\r\n        target=\".block-action-copy\"\r\n        position=\"bottom\"\r\n        content=\"Copied to clipboard\"\r\n        event=\"focus\"\r\n      />\r\n\r\n      <AppTopbar\r\n        topbarScheme={\"light\"}\r\n        onRightPanelButtonClick={onRightPanelButtonClick}\r\n        searchActive={searchActive}\r\n        onTopbarSearchToggle={onTopbarSearchToggle}\r\n        onTopbarSearchClick={onTopbarSearchClick}\r\n        topbarUserMenuActive={topbarUserMenuActive}\r\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\r\n        menu={menu}\r\n        menuActive={menuActive}\r\n        onRootMenuItemClick={onRootMenuItemClick}\r\n        mobileMenuActive={staticMenuMobileActive}\r\n        onMenuItemClick={onMenuItemClick}\r\n        menuMode={\"sidebar\"}\r\n        sidebarStatic={sidebarStatic}\r\n        sidebarActive={sidebarActive}\r\n        onSidebarMouseOver={onSidebarMouseOver}\r\n        onSidebarMouseLeave={onSidebarMouseLeave}\r\n        onToggleMenu={onToggleMenu}\r\n        onMenuButtonClick={onMenuButtonClick}\r\n        resetActiveIndex={resetActiveIndex}\r\n        onMenuClick={onMenuClick}\r\n      />\r\n\r\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\r\n\r\n      <div className=\"layout-main\">\r\n        <div\r\n          className=\"mgeBG\"\r\n          style={{\r\n            opacity: \"0.3\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            bottom: \"0\",\r\n            right: \"0\",\r\n          }}\r\n        >\r\n          &nbsp;\r\n        </div>\r\n        <div className=\"layout-content\">\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return getDatosUsuario() &&\r\n                getDatosUsuario().opciones &&\r\n                getDatosUsuario().opciones.length > 0 ? (\r\n                <Redirect to={getDatosUsuario().opciones[0].actionOpcion} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              );\r\n            }}\r\n          />\r\n          <Route path=\"/dashboard\" exact component={Dashboard} />\r\n          <Route path=\"/user/:id\" exact component={UserInfo} />\r\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\r\n          <Route\r\n            path=\"/trainingapplicant/:id/:idTraining\"\r\n            exact\r\n            component={TrainingApplicant}\r\n          />\r\n\r\n          <Route path=\"/users\" exact component={Usuarios} />\r\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\r\n          <Route path=\"/users/:id\" exact component={Usuario} />\r\n          <Route path=\"/resetPassword\" exact component={ResetPasswordUser} />\r\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\r\n          <Route path=\"/language\" exact component={Language} />\r\n\r\n          <Route path=\"/opciones\" exact component={Opciones} />\r\n          <Route path=\"/perfiles\" exact component={Perfiles} />\r\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\r\n\r\n          <Route path=\"/training\" exact component={Courses} />\r\n          <Route path=\"/training/:id\" exact component={Applicants} />\r\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\r\n          <Route path=\"/trainingnew\" exact component={Course} />\r\n\r\n          <Route path=\"/applicants\" exact component={Applicants} />\r\n          <Route\r\n            path=\"/applicants/:id/:idTraining\"\r\n            exact\r\n            component={Applicant}\r\n          />\r\n\r\n          <Route path=\"/classes\" exact component={Classes} />\r\n          <Route path=\"/workplan\" exact component={WorkPlan} />\r\n          <Route\r\n            path=\"/beneficiaries/:operation\"\r\n            exact\r\n            component={Beneficiaries}\r\n          />\r\n          <Route path=\"/finalreport\" exact component={FinalReport} />\r\n          <Route path=\"/certificate\" exact component={Certificate} />\r\n        </div>\r\n\r\n        <AppFooter />\r\n      </div>\r\n      <div className=\"layout-mask modal-in\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import axios from \"axios\"\r\nimport { getAutenticarUrl, getAutorizarUrl, updatePassword, recoveryPassword, validateUserUuid } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    validateResetPassword = ({ datos }) => (axios.post(validateUserUuid(), datos, { headers: { \"Accept-Language\": getCulture() } }))\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class CatalogoService {\r\n    getPaises = () => this.getPorPadre({ catalogo: { catValor: \"CAT_PAISES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catValor: \"CAT_MODALIDAD\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catValor: \"CAT_CURSOS\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catValor: \"CAT_SEXO\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_ENT\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TIP_INF\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_INF\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_REG\" } })\r\n    getEducationLevel = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EDU_LEV\" } })\r\n    getTypePerson = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TYP_PER\" } })\r\n    getRegion = () => this.getPorPadre({ catalogo: { catValor: \"CAT_REGIONS\" } })\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getCulture, getLabel, labels, setCulture } from '../utils/Internationalization'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const visible = true\r\n                const { opciones } = data.listObject[0]\r\n                const opcionesVisible = opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/') >= 0 ? { ...o, visible: false } : { ...o, visible }))\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones: opcionesVisible })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                requests.push(catalogoService.getEducationLevel())\r\n                requests.push(catalogoService.getTypePerson())\r\n                requests.push(catalogoService.getRegion())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject,\r\n                                cursos: results[1].data.listObject,\r\n                                modalidades: results[2].data.listObject,\r\n                                generos: results[3].data.listObject,\r\n                                trainingStatus: results[4].data.listObject,\r\n                                reportType: results[5].data.listObject,\r\n                                reportStatus: results[6].data.listObject,\r\n                                states: results[7].data.listObject,\r\n                                educationLevels: results[8].data.listObject,\r\n                                typePersons: results[9].data.listObject,\r\n                                regions: results[10].data.listObject\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (localStorage.getItem('mgeCulture') === null) setCulture({ culture: usuario.cultura || 'en_US' })\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].perId }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    {getLabel(labels.welcomeBack)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    {getLabel(labels.loginAccess)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label={getLabel(labels.emailLogin)}\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterEmail),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item label={getLabel(labels.passwordLogin)}\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterPassword)\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>\r\n                                                {getLabel(labels.login)}\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>\r\n                                {\r\n                                    getLabel(labels.forgotPassword)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { getCulture, getLabel, labels } from '../utils/Internationalization'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, idInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: idInvitadoPor, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        requests.push(catalogoService.getEducationLevel())\r\n        requests.push(catalogoService.getTypePerson())\r\n        requests.push(catalogoService.getRegion())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject,\r\n                        cursos: results[1].data.listObject,\r\n                        modalidades: results[2].data.listObject,\r\n                        generos: results[3].data.listObject,\r\n                        trainingStatus: results[4].data.listObject,\r\n                        reportType: results[5].data.listObject,\r\n                        reportStatus: results[6].data.listObject,\r\n                        states: results[7].data.listObject,\r\n                        educationLevels: results[8].data.listObject,\r\n                        typePersons: results[9].data.listObject,\r\n                        regions: results[9].data.listObject\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success(getLabel(labels.accountCreatedSuccessfully))\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            cultura: getCulture(),\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        {getLabel(labels.loading)}...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    {getLabel(labels.welcomeMyGreenEnterprise)}\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    {getLabel(labels.completeInformationActiveAccount)}\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label={getLabel(labels.uploadProfilePicture)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.selectProfilePicture)\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >\r\n                                                                            {getLabel(labels.selectPhoto)}\r\n                                                                        </Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label={getLabel(labels.firstName)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.completeFirstName),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label={getLabel(labels.lastName)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.completeLastName),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label={getLabel(labels.sex)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.selectSex),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label={getLabel(labels.dateBirth)}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: getLabel(labels.selectDateBirth),\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>{getLabel(labels.idNumber)}</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                {getLabel(labels.uniqueIdentificationCountry)}\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeID),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label={getLabel(labels.country)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.selectCountry),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label={getLabel(labels.city)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeCity),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    {getLabel(labels.countryCode)}\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.selectCountryCode),\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    {getLabel(labels.phoneNumber)}\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completePhoneNumber),\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>\r\n                                                                        {getLabel(labels.currentyWorking)}\r\n                                                                    </>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                {getLabel(labels.completeNameInstitution)}\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeEmail),\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: getLabel(labels.emailNotValid)\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.completeAdditionalEmail),\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: getLabel(labels.additionalEmailNotValid)\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='password'\r\n                                                            label={getLabel(labels.createYourPassword)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.createYourPassword),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='passwordConfirm'\r\n                                                            label={getLabel(labels.confirmYourPassword)}\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: getLabel(labels.confirmYourPassword),\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: getLabel(labels.passwordHasMore8Characters),\r\n                                                                    specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                                                                    number: getLabel(labels.passwordHasNumber),\r\n                                                                    capital: getLabel(labels.passwordHasCapitalLetter),\r\n                                                                    match: getLabel(labels.passwordsMatch)\r\n                                                                }}\r\n                                                                onChange={(isValid) => {\r\n                                                                    setValidForm(isValid)\r\n                                                                }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>{getLabel(labels.register)}</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title={getLabel(labels.accountPreviouslyCreated)}\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                {getLabel(labels.login)}\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport { getCulture, getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg(getLabel(labels.passwordSentIndicatedEmail))\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                    {getLabel(labels.login)}\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>\r\n                                    {getLabel(labels.recoverPassword)}\r\n                                </span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item\r\n                                        name='email'\r\n                                        label={getLabel(labels.email)}\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: getLabel(labels.emailNotValid)\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.completeEmail),\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >\r\n                                                {getLabel(labels.recoverPassword)}\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useEffect, useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport AlertWait from \"./AlertWait\"\r\nimport toast from \"react-hot-toast\"\r\nimport { getCulture, getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [validate, setValidate] = useState(true)\r\n    const [isValidating, setIsValidating] = useState(false)\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [isResetting, setIsResetting] = useState(false)\r\n    const [isReset, setIsReset] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const reset = async (values) => {\r\n        setOkMsg(null)\r\n        setIsResetting(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            if (data) {\r\n                setOkMsg(getLabel(labels.passwordSuccessfullyChanged))\r\n                setIsReset(true)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsResetting(false)\r\n        }\r\n    }\r\n\r\n    const validateRequest = async () => {\r\n        setValidate(false)\r\n        setIsValidating(true)\r\n        try {\r\n            const datos = { usuId: id, uuid }\r\n            const { data } = await cuentaService.validateResetPassword({ datos })\r\n            if (data) setIsValid(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else if (response.status === 409) {\r\n                setIsValid(false)\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        }\r\n        finally {\r\n            setIsValidating(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validate) validateRequest()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src={`./../assets/logo_${getCulture()}.png`} preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                <Row justify='center'>\r\n                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n\r\n                                {\r\n                                    isValidating ?\r\n                                        <>\r\n                                            <AlertWait isLoading={isValidating} message={getLabel(labels.loading)} />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {\r\n                                                isValid ?\r\n                                                    <>\r\n                                                        {\r\n                                                            isReset && okMsg ?\r\n                                                                <>\r\n                                                                    <Result\r\n                                                                        status='success'\r\n                                                                        title={getLabel(labels.passwordResetSuccessfully)}\r\n                                                                        subTitle={okMsg}\r\n                                                                        extra={\r\n                                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                                onClick={() => {\r\n                                                                                    navigate.push('/login')\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                {getLabel(labels.login)}\r\n                                                                            </Button>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>\r\n                                                                        {getLabel(labels.resetPassword)}\r\n                                                                    </span></Divider>\r\n                                                                    <Form\r\n                                                                        layout={'vertical'}\r\n                                                                        onFinish={reset}\r\n                                                                    >\r\n                                                                        <Form.Item\r\n                                                                            name='password'\r\n                                                                            label={getLabel(labels.newPassword)}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: getLabel(labels.completeNewPassword),\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item\r\n                                                                            name='passwordConfirm'\r\n                                                                            label={getLabel(labels.confirmNewPassword)}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: getLabel(labels.confirmNewPassword),\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item>\r\n                                                                            <PasswordChecklist\r\n                                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                                minLength={8}\r\n                                                                                value={password}\r\n                                                                                valueAgain={passwordConfirm}\r\n                                                                                messages={{\r\n                                                                                    minLength: getLabel(labels.passwordHasMore8Characters),\r\n                                                                                    specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                                                                                    number: getLabel(labels.passwordHasNumber),\r\n                                                                                    capital: getLabel(labels.passwordHasCapitalLetter),\r\n                                                                                    match: getLabel(labels.passwordsMatch),\r\n                                                                                }}\r\n                                                                                onChange={(isValid) => { }}\r\n                                                                            />\r\n                                                                        </Form.Item>\r\n                                                                        <div style={{\r\n                                                                            paddingTop: '10px'\r\n                                                                        }}>\r\n                                                                            <Form.Item>\r\n                                                                                <Button\r\n                                                                                    type='primary'\r\n                                                                                    htmlType='submit'\r\n                                                                                    loading={isResetting}\r\n                                                                                    disabled={isResetting}\r\n                                                                                    block>\r\n                                                                                    {\r\n                                                                                        isResetting ? getLabel(labels.resettingPassword) : getLabel(labels.resetPassword)\r\n                                                                                    }\r\n                                                                                </Button>\r\n                                                                            </Form.Item>\r\n                                                                        </div>\r\n                                                                    </Form>\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <Result\r\n                                                        status='404'\r\n                                                        title={getLabel(labels.pageNotExist)}\r\n                                                        subTitle={getLabel(labels.pageVisitedNotExist)}\r\n                                                        extra={\r\n                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/login')\r\n                                                                }}\r\n                                                            >\r\n                                                                {getLabel(labels.login)}\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                            }\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row >\r\n            </Layout >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from \"react\";\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport RecuperarPassword from \"./pages/RecuperarPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\n\nexport const ctx = React.createContext();\n\nconst AppWrapper = (props) => {\n  let location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  const [colorScheme, setColorScheme] = useState(\"light\");\n\n  switch (props.location.pathname) {\n    case \"/login\":\n      return (\n        <Route\n          path=\"/login\"\n          render={() => <Login colorScheme={colorScheme} />}\n        />\n      );\n    case \"/signup\":\n      return (\n        <Route\n          path=\"/signup\"\n          render={() => <Signup colorScheme={colorScheme} />}\n        />\n      );\n    case \"/recover\":\n      return (\n        <Route\n          path=\"/recover\"\n          render={() => <RecuperarPassword colorScheme={colorScheme} />}\n        />\n      );\n    case \"/reset\":\n      return (\n        <Route\n          path=\"/reset\"\n          render={() => <ResetPassword colorScheme={colorScheme} />}\n        />\n      );\n    default:\n      return <App setColorScheme={setColorScheme} />;\n  }\n};\n\nexport default withRouter(AppWrapper);\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport { Toaster } from \"react-hot-toast\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Toaster />\n    <AppWrapper></AppWrapper>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}